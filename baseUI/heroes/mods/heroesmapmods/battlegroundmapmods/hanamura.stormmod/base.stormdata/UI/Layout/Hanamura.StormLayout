<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Desc>
  <Frame type="Image" name="LeftArrowsTemplate">
    <LayerCount val="2" />
    <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Bar_Grayscale_Bg" layer="0" />
    <AlphaLayer val="True" layer="0" />
    <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Bar_Grayscale_Arrow" layer="1" />
    <Tiled val="True" layer="1" />
    <WrapUV val="True" layer="1" />
    <Alpha val="75" />
    <SubpixelRendering val="True" />
  </Frame>
  <Frame type="Image" name="RightArrowsTemplate" template="Hanamura/LeftArrowsTemplate">
    <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" layer="0" />
    <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" layer="1" />
  </Frame>
  <Frame type="Frame" name="PayloadLeftBarGrayTemplate">
    <Width val="200" />
    <Height val="28" />
    <Alpha val="255" />
    <Frame type="Image" name="Background">
      <Anchor relative="$parent" />
      <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Bar_Grayscale_Bg" />
      <Color val="A8A8A8" />
    </Frame>
    <Frame type="Image" name="Arrows" template="Hanamura/LeftArrowsTemplate">
      <Anchor relative="$parent/Background" />
      <Alpha val="50" />
    </Frame>
  </Frame>
  <Frame type="Frame" name="PayloadRightBarGrayTemplate">
    <Width val="200" />
    <Height val="28" />
    <Alpha val="255" />
    <Frame type="Image" name="Background">
      <Anchor relative="$parent" />
      <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Bar_Grayscale_Bg" />
      <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" layer="0" />
      <Color val="A8A8A8" />
    </Frame>
    <Frame type="Image" name="Arrows" template="Hanamura/RightArrowsTemplate">
      <Anchor relative="$parent/Background" />
      <Alpha val="50" />
    </Frame>
  </Frame>
  <Frame type="Frame" name="PayloadTeamBarTemplate">
    <Width val="200" />
    <Height val="28" />
    <Visible val="false" />
    <Animation name="ArrowScroll" speed="0">
      <Event event="OnShown" action="Play" />
      <Controller type="LayerUV" layer="1" side="Left" relative="False" sidelock="True" end="Loop" frame="Arrows">
        <Key type="Curve" time="0" value="0" inout="Linear" />
        <Key type="Curve" time="2" value="-1.0" inout="Linear" />
      </Controller>
    </Animation>
    <Animation name="ArrowScrollSpeed0" speed="1">
      <Event event="OnArrowScrollSpeed0" action="Restart,Play" />
      <Controller type="AnimationSpeed" end="Pause" animation="ArrowScroll">
        <Key type="Curve" time="0.0" value="0.00" inout="Linear" />
      </Controller>
    </Animation>
    <Animation name="ArrowScrollSpeed1">
      <Event event="OnArrowScrollSpeed1" action="Restart,Play" />
      <Controller type="AnimationSpeed" end="Pause" animation="ArrowScroll">
        <Key type="Curve" time="0.0" value="1.00" inout="Linear" />
      </Controller>
    </Animation>
    <Animation name="ArrowScrollSpeed2">
      <Event event="OnArrowScrollSpeed2" action="Restart,Play" />
      <Controller type="AnimationSpeed" end="Pause" animation="ArrowScroll">
        <Key type="Curve" time="0.0" value="2.00" inout="Linear" />
      </Controller>
    </Animation>
    <Animation name="ArrowScrollSpeed3">
      <Event event="OnArrowScrollSpeed3" action="Restart,Play" />
      <Controller type="AnimationSpeed" end="Pause" animation="ArrowScroll">
        <Key type="Curve" time="0.0" value="3.00" inout="Linear" />
      </Controller>
    </Animation>
    <Frame type="Image" name="Background">
      <Anchor relative="$parent" />
      <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Bar_Grayscale_Bg" />
    </Frame>
    <Frame type="Image" name="Arrows">
      <Anchor relative="$parent/Background" />
    </Frame>
    <Frame type="ProgressBar" name="PayloadProgressBar">
      <Anchor relative="$parent" />
      <MinValue val="-80" />
      <MaxValue val="100" />
      <Value val="0" />
      <UseFillContainer val="true" />
      <Animation name="IsContested">
        <Event event="Contested" action="Reset,Play" />
        <Event event="Uncontested" action="DirectionReverse,Play" />
        <Controller type="Fade" end="Pause" frame="FillImageContainer/FillImage">
          <Key type="Curve" time="0" value="255" inout="Smooth" />
          <Key type="Curve" time=".125" value="0" inout="Smooth" />
        </Controller>
        <Controller type="Fade" end="Pause" frame="FillImageContainer/FillImageContested">
          <Key type="Curve" time="0" value="0" inout="Smooth" />
          <Key type="Curve" time=".125" value="255" inout="Smooth" />
        </Controller>
      </Animation>
      <Frame type="Frame" name="FillImageContainer">
        <Width val="180" />
        <Height val="28" />
        <Frame type="Image" name="FillImage">
          <Width val="180" />
          <Height val="28" />
          <LayerCount val="2" />
          <Texture val="@UI/Storm_UI_GenFX_Gradient" layer="0" />
          <AlphaLayer val="True" layer="0" />
          <WrapUV val="False" layer="0" />
          <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Bar_grayscale" layer="1" />
          <Animation name="ControlAlpha">
            <Event event="ControlAlpha" action="Restart,Play" />
          </Animation>
        </Frame>
        <Frame type="Image" name="FillImageContested">
          <Anchor relative="$parent/FillImage" />
          <Alpha val="0" />
          <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Bar_grayscale" />
          <ColorAdjustMode val="Colorize" />
          <LightAdjustColor val="FFFFFF" />
          <DarkAdjustColor val="f6d71c" />
          <Animation name="ContestedColoring">
            <Event event="Contested" action="Restart,Play" frame="$parent/$parent" />
            <Controller type="AdjustmentColor" color="DarkAdjust" end="Pause">
              <Key type="Curve" time="0" value="ffffff" inout="Linear" />
              <Key type="Curve" time=".17" value="f6d71c" inout="Linear" />
              <Key type="Curve" time=".34" value="ffffff" inout="Linear" />
              <Key type="Curve" time=".5" value="f6d71c" inout="Linear" />
            </Controller>
          </Animation>
        </Frame>
        <Frame type="Image" name="ProgressCompleteImage">
          <Width val="180" />
          <Height val="28" />
          <Visible val="False" />
          <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Bar_grayscale" />
          <BlendMode val="Add" />
          <Animation name="ProgressCompleteWipe">
            <Event event="ProgressComplete" action="Restart,Play" frame="$parent/$parent/$parent" />
            <Controller type="Visibility" end="Stop" frame="$parent/$parent/$parent">
              <Key type="Bool" time="0" value="True" />
              <Key type="Bool" time=".74" value="False" />
            </Controller>
            <Controller type="Visibility" end="Stop">
              <Key type="Bool" time="0" value="True" />
              <Key type="Bool" time=".25" value="False" />
            </Controller>
            <Controller type="Dimension" dimension="Height" relative="False" percentage="True" end="Pause">
              <Key type="Curve" time="0.0" value="100" inout="Smooth" />
              <Key type="Curve" time="0.25" value=".1" inout="Smooth" />
            </Controller>
            <Controller type="Event" end="Stop" frame="$parent/FillImage">
              <Key type="Event" time="0.25" event="ControlAlpha" />
            </Controller>
          </Animation>
        </Frame>
      </Frame>
    </Frame>
  </Frame>
  <Frame type="Frame" name="PayloadLeftBarBlueTemplate" template="Hanamura/PayloadTeamBarTemplate">
    <Frame type="Image" name="Background">
      <Color val="{$ancestor[@name=HanamuraPanel]/TeamOrderColors/@Color}" />
    </Frame>
    <Frame type="Image" name="Arrows" template="Hanamura/LeftArrowsTemplate">
      <Color val="{$ancestor[@name=HanamuraPanel]/TeamOrderColors/@Color}" />
    </Frame>
    <Frame type="ProgressBar" name="PayloadProgressBar">
      <Frame type="Frame" name="FillImageContainer">
        <Anchor side="Top" relative="$parent" pos="Min" offset="0" />
        <Anchor side="Left" relative="$parent" pos="Min" offset="0" />
        <Frame type="Image" name="FillImage">
          <Anchor side="Top" relative="$parent" pos="Min" offset="0" />
          <Anchor side="Right" relative="$parent" pos="Max" offset="0" />
          <ColorAdjustMode val="Colorize" />
          <LightAdjustColor val="FFFFFF" />
          <DarkAdjustColor val="{$ancestor[@name=HanamuraPanel]/TeamOrderColors/@Color}" />
          <TextureCoords top="0" left="0.0" bottom="1.0" right="-1.0" layer="0" />
          <Animation name="ControlAlpha">
            <Controller type="LayerUV" layer="0" side="Left" relative="False" sidelock="True" end="Stop">
              <Key type="Curve" time="0" value="0" inout="Smooth" />
              <Key type="Curve" time=".51" value="2.0" inout="Smooth" />
            </Controller>
          </Animation>
        </Frame>
        <Frame type="Image" name="ProgressCompleteImage">
          <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
          <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
          <Anchor side="Right" relative="$parent" pos="Max" offset="0" />
        </Frame>
      </Frame>
    </Frame>
  </Frame>
  <Frame type="Frame" name="PayloadRightBarRedTemplate" template="Hanamura/PayloadTeamBarTemplate">
    <Frame type="Image" name="Background">
      <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" layer="0" />
      <Color val="{$ancestor[@name=HanamuraPanel]/TeamChaosColors/@Color}" />
    </Frame>
    <Frame type="Image" name="Arrows" template="Hanamura/RightArrowsTemplate">
      <ColorAdjustMode val="Desaturate" />
      <LightAdjustColor val="{$ancestor[@name=HanamuraPanel]/TeamChaosColors/@Color}" />
      <DarkAdjustColor val="000000" />
    </Frame>
    <Frame type="ProgressBar" name="PayloadProgressBar">
      <Frame type="Frame" name="FillImageContainer">
        <Anchor side="Top" relative="$parent" pos="Min" offset="0" />
        <Anchor side="Right" relative="$parent" pos="Max" offset="0" />
        <Frame type="Image" name="FillImage">
          <Anchor side="Top" relative="$parent" pos="Min" offset="0" />
          <Anchor side="Left" relative="$parent" pos="Min" offset="0" />
          <ColorAdjustMode val="Colorize" />
          <LightAdjustColor val="FFFFFF" />
          <DarkAdjustColor val="{$ancestor[@name=HanamuraPanel]/TeamChaosColors/@Color}" />
          <TextureCoords top="0" left="-1.0" bottom="1.0" right="0.0" layer="0" />
          <TextureCoords top="0" left="1.0" bottom="1.0" right="0.0" layer="1" />
          <Animation name="ControlAlpha">
            <Controller type="LayerUV" layer="0" side="Right" relative="False" sidelock="True" end="Stop">
              <Key type="Curve" time="0" value="0" inout="Smooth" />
              <Key type="Curve" time="0.51" value="2.0" inout="Smooth" />
            </Controller>
          </Animation>
        </Frame>
        <Frame type="Image" name="FillImageContested">
          <TextureCoords top="0" left="1.0" bottom="1.0" right="0.0" layer="0" />
        </Frame>
        <Frame type="Image" name="ProgressCompleteImage">
          <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
          <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
          <Anchor side="Left" relative="$parent" pos="Min" offset="0" />
          <TextureCoords top="0" left="1.0" bottom="1.0" right="0.0" layer="0" />
        </Frame>
      </Frame>
    </Frame>
  </Frame>
  <Frame type="Frame" name="TopIndicatorTemplate">
    <Width val="110" />
    <Height val="56" />
    <Animation name="Blink">
      <Event event="OnShown" action="Restart,Play" />
      <Event event="DoBlink" action="Restart,Play" />
      <Controller type="Event" end="Stop" frame="PayloadIndicatorBirth">
        <Key type="Event" time="0" event="DoBlink" />
      </Controller>
    </Animation>
    <Animation name="Pulse">
      <Event event="OnShown" action="Restart,Play" />
      <Event event="Hide" action="Stop" />
      <Controller type="Fade" end="PingPong" frame="PayloadIndicator">
        <Key type="Curve" time="0" value="255" />
        <Key type="Curve" time="0.5" value="175" />
      </Controller>
    </Animation>
    <Animation name="Hide">
      <Event event="Hide" action="Restart,Play" />
      <Controller type="Fade" end="Pause" frame="PayloadIndicator">
        <Key type="Curve" time="0" value="0" />
      </Controller>
    </Animation>
    <StateGroup name="ArrowIndicators">
      <DefaultState val="NoState" />
      <State name="Movement0">
        <Action type="SetProperty" frame="PayloadLeftArrows" Visible="False" />
        <Action type="SetProperty" frame="PayloadRightArrows" Visible="False" />
        <Action type="SetProperty" frame="PayloadMovingLeftCircle" Visible="False" />
        <Action type="SetProperty" frame="PayloadMovingRightCircle" Visible="False" />
      </State>
      <State name="Left1">
        <Action type="SetProperty" frame="PayloadLeftArrows/Arrow1" Visible="True" />
        <Action type="SetProperty" frame="PayloadMovingLeftCircle/Label" Text="@UI/HanamuraPayload_Forward1" />
        <Action type="SetAnchor" frame="PayloadMovingLeftCircle/Label" side="Left" relative="$parent" pos="Mid" offset="0" />
        <Action type="SetAnchor" frame="PayloadMovingLeftCircle/Label" side="Right" relative="$parent" pos="Mid" offset="0" />
        <Action type="SetProperty" frame="PayloadMovingRightCircle" Visible="False" />
      </State>
      <State name="Left2">
        <Action type="SetProperty" frame="PayloadLeftArrows/Arrow1" Visible="True" />
        <Action type="SetProperty" frame="PayloadLeftArrows/Arrow2" Visible="True" />
        <Action type="SetProperty" frame="PayloadMovingLeftCircle/Label" Text="@UI/HanamuraPayload_Forward2" />
        <Action type="SetAnchor" frame="PayloadMovingLeftCircle/Label" side="Left" relative="$parent" pos="Mid" offset="1" />
        <Action type="SetAnchor" frame="PayloadMovingLeftCircle/Label" side="Right" relative="$parent" pos="Mid" offset="1" />
        <Action type="SetProperty" frame="PayloadMovingRightCircle" Visible="False" />
      </State>
      <State name="Left3">
        <Action type="SetProperty" frame="PayloadLeftArrows/Arrow1" Visible="True" />
        <Action type="SetProperty" frame="PayloadLeftArrows/Arrow2" Visible="True" />
        <Action type="SetProperty" frame="PayloadLeftArrows/Arrow3" Visible="True" />
        <Action type="SetProperty" frame="PayloadMovingLeftCircle/Label" Text="@UI/HanamuraPayload_Forward3" />
        <Action type="SetAnchor" frame="PayloadMovingLeftCircle/Label" side="Left" relative="$parent" pos="Mid" offset="1" />
        <Action type="SetAnchor" frame="PayloadMovingLeftCircle/Label" side="Right" relative="$parent" pos="Mid" offset="1" />
        <Action type="SetProperty" frame="PayloadMovingRightCircle" Visible="False" />
      </State>
      <State name="Right1">
        <Action type="SetProperty" frame="PayloadRightArrows/Arrow1" Visible="True" />
        <Action type="SetProperty" frame="PayloadMovingRightCircle/Label" Text="@UI/HanamuraPayload_Forward1" />
        <Action type="SetAnchor" frame="PayloadMovingRightCircle/Label" side="Left" relative="$parent" pos="Mid" offset="0" />
        <Action type="SetAnchor" frame="PayloadMovingRightCircle/Label" side="Right" relative="$parent" pos="Mid" offset="0" />
        <Action type="SetProperty" frame="PayloadMovingLeftCircle" Visible="False" />
      </State>
      <State name="Right2">
        <Action type="SetProperty" frame="PayloadRightArrows/Arrow1" Visible="True" />
        <Action type="SetProperty" frame="PayloadRightArrows/Arrow2" Visible="True" />
        <Action type="SetProperty" frame="PayloadMovingRightCircle/Label" Text="@UI/HanamuraPayload_Forward2" />
        <Action type="SetAnchor" frame="PayloadMovingRightCircle/Label" side="Left" relative="$parent" pos="Mid" offset="1" />
        <Action type="SetAnchor" frame="PayloadMovingRightCircle/Label" side="Right" relative="$parent" pos="Mid" offset="1" />
        <Action type="SetProperty" frame="PayloadMovingLeftCircle" Visible="False" />
      </State>
      <State name="Right3">
        <Action type="SetProperty" frame="PayloadRightArrows/Arrow1" Visible="True" />
        <Action type="SetProperty" frame="PayloadRightArrows/Arrow2" Visible="True" />
        <Action type="SetProperty" frame="PayloadRightArrows/Arrow3" Visible="True" />
        <Action type="SetProperty" frame="PayloadMovingRightCircle/Label" Text="@UI/HanamuraPayload_Forward3" />
        <Action type="SetAnchor" frame="PayloadMovingRightCircle/Label" side="Left" relative="$parent" pos="Mid" offset="1" />
        <Action type="SetAnchor" frame="PayloadMovingRightCircle/Label" side="Right" relative="$parent" pos="Mid" offset="1" />
        <Action type="SetProperty" frame="PayloadMovingLeftCircle" Visible="False" />
      </State>
      <State name="ReverseRight">
        <Action type="SetProperty" frame="PayloadRightArrows/Arrow1" Visible="True" />
        <Action type="SetProperty" frame="PayloadMovingRightCircle/Label" Text="@UI/HanamuraPayload_ForwardR" />
        <Action type="SetAnchor" frame="PayloadMovingRightCircle/Label" side="Left" relative="$parent" pos="Mid" offset="1" />
        <Action type="SetAnchor" frame="PayloadMovingRightCircle/Label" side="Right" relative="$parent" pos="Mid" offset="1" />
        <Action type="SetProperty" frame="PayloadMovingLeftCircle" Visible="False" />
      </State>
      <State name="ReverseLeft">
        <Action type="SetProperty" frame="PayloadLeftArrows/Arrow1" Visible="True" />
        <Action type="SetProperty" frame="PayloadMovingLeftCircle/Label" Text="@UI/HanamuraPayload_ForwardR" />
        <Action type="SetAnchor" frame="PayloadMovingLeftCircle/Label" side="Left" relative="$parent" pos="Mid" offset="1" />
        <Action type="SetAnchor" frame="PayloadMovingLeftCircle/Label" side="Right" relative="$parent" pos="Mid" offset="1" />
        <Action type="SetProperty" frame="PayloadMovingRightCircle" Visible="False" />
      </State>
      <State name="NoState">
        <Action type="SetProperty" frame="$this" Visible="False" />
      </State>
    </StateGroup>
    <Frame type="Image" name="PayloadIndicatorBirth">
      <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
      <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
      <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
      <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
      <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Bar_Grayscale_Indicator" />
      <TextureCoords top="1.0" left="0.0" bottom="0.0" right="1.0" />
      <SubpixelRendering val="True" />
      <Animation name="Blink">
        <Event event="DoBlink" action="Restart,Play" />
        <Controller type="Visibility" end="Pause">
          <Key type="Bool" time="0" value="True" />
          <Key type="Bool" time="1.2" value="False" />
        </Controller>
        <Controller type="Dimension" dimension="Height" relative="False" percentage="True" end="Stop">
          <Key type="Curve" time="0.0" value="100" inout="Linear" />
          <Key type="Curve" time="0.2" value="200" inout="Linear" />
          <Key type="Curve" time="0.4" value="100" inout="Linear" />
          <Key type="Curve" time="0.6" value="200" inout="Linear" />
          <Key type="Curve" time="0.8" value="100" inout="Linear" />
          <Key type="Curve" time="1.0" value="200" inout="Linear" />
          <Key type="Curve" time="1.2" value="100" inout="Linear" />
        </Controller>
        <Controller type="Dimension" dimension="Width" relative="False" percentage="True" end="Stop">
          <Key type="Curve" time="0.0" value="100" inout="Linear" />
          <Key type="Curve" time="0.2" value="200" inout="Linear" />
          <Key type="Curve" time="0.4" value="100" inout="Linear" />
          <Key type="Curve" time="0.6" value="200" inout="Linear" />
          <Key type="Curve" time="0.8" value="100" inout="Linear" />
          <Key type="Curve" time="1.0" value="200" inout="Linear" />
          <Key type="Curve" time="1.2" value="100" inout="Linear" />
        </Controller>
      </Animation>
    </Frame>
    <Frame type="Image" name="PayloadIndicator">
      <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
      <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
      <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
      <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
      <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Bar_Grayscale_Indicator" />
      <TextureCoords top="1.0" left="0.0" bottom="0.0" right="1.0" />
      <SubpixelRendering val="True" />
    </Frame>
    <Frame type="Label" name="PayloadIndicatorLabel">
      <Anchor side="Top" relative="$parent" pos="Mid" offset="-2" />
      <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
      <Anchor side="Bottom" relative="$parent" pos="Mid" offset="-2" />
      <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
      <Style val="Storm_Map_Hanamura_SmallText" />
      <Text val="@UI/HanamuraPayload_SingleCharacterAbbreviation" />
      <SubpixelRendering val="True" />
      <IgnoreParentAlpha val="True" />
    </Frame>
    <Frame type="Frame" name="PayloadLeftArrows">
      <Anchor side="Top" relative="$parent/PayloadIndicator" pos="Mid" offset="-2" />
      <Anchor side="Bottom" relative="$parent/PayloadIndicator" pos="Mid" offset="-2" />
      <Anchor side="Right" relative="$parent/PayloadIndicator" pos="Min" offset="4" />
      <Anchor side="Left" relative="Arrow3" pos="Min" offset="0" />
      <Height val="12" />
      <Frame type="Image" name="Arrow1">
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent" pos="Max" offset="0" />
        <Height val="12" />
        <Width val="8" />
        <Visible val="False" />
        <CollapseLayout val="True" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Arrow" />
        <SubpixelRendering val="True" />
      </Frame>
      <Frame type="Image" name="Arrow2">
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/Arrow1" pos="Min" offset="2" />
        <Height val="12" />
        <Width val="8" />
        <Visible val="False" />
        <CollapseLayout val="True" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Arrow" />
        <SubpixelRendering val="True" />
      </Frame>
      <Frame type="Image" name="Arrow3">
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/Arrow2" pos="Min" offset="2" />
        <Height val="12" />
        <Width val="8" />
        <Visible val="False" />
        <CollapseLayout val="True" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Arrow" />
        <SubpixelRendering val="True" />
      </Frame>
    </Frame>
    <Frame type="Image" name="PayloadMovingLeftCircle">
      <Anchor side="Top" relative="$parent/PayloadLeftArrows" pos="Mid" offset="0" />
      <Anchor side="Bottom" relative="$parent/PayloadLeftArrows" pos="Mid" offset="0" />
      <Anchor side="Right" relative="$parent/PayloadLeftArrows" pos="Min" offset="2" />
      <Height val="24" />
      <Width val="24" />
      <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Circle" />
      <SubpixelRendering val="True" />
      <Frame type="Label" name="Label">
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
        <Style val="Storm_Map_Hanamura_SmallText" />
        <Text val="1" />
        <SubpixelRendering val="True" />
      </Frame>
    </Frame>
    <Frame type="Frame" name="PayloadRightArrows">
      <Anchor side="Top" relative="$parent/PayloadIndicator" pos="Mid" offset="-2" />
      <Anchor side="Bottom" relative="$parent/PayloadIndicator" pos="Mid" offset="-2" />
      <Anchor side="Left" relative="$parent/PayloadIndicator" pos="Max" offset="-4" />
      <Anchor side="Right" relative="Arrow3" pos="Max" offset="0" />
      <Height val="12" />
      <Frame type="Image" name="Arrow1">
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent" pos="Min" offset="0" />
        <Height val="12" />
        <Width val="8" />
        <Visible val="False" />
        <CollapseLayout val="True" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Arrow" />
        <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" />
        <SubpixelRendering val="True" />
      </Frame>
      <Frame type="Image" name="Arrow2">
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent/Arrow1" pos="Max" offset="-2" />
        <Height val="12" />
        <Width val="8" />
        <Visible val="False" />
        <CollapseLayout val="True" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Arrow" />
        <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" />
        <SubpixelRendering val="True" />
      </Frame>
      <Frame type="Image" name="Arrow3">
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent/Arrow2" pos="Max" offset="-2" />
        <Height val="12" />
        <Width val="8" />
        <Visible val="False" />
        <CollapseLayout val="True" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Arrow" />
        <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" />
        <SubpixelRendering val="True" />
      </Frame>
    </Frame>
    <Frame type="Image" name="PayloadMovingRightCircle">
      <Anchor side="Top" relative="$parent/PayloadRightArrows" pos="Mid" offset="0" />
      <Anchor side="Bottom" relative="$parent/PayloadRightArrows" pos="Mid" offset="0" />
      <Anchor side="Left" relative="$parent/PayloadRightArrows" pos="Max" offset="-2" />
      <Height val="24" />
      <Width val="24" />
      <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Circle" />
      <SubpixelRendering val="True" />
      <Frame type="Label" name="Label">
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
        <Style val="Storm_Map_Hanamura_SmallText" />
        <Text val="1" />
        <SubpixelRendering val="True" />
      </Frame>
    </Frame>
  </Frame>
  <Frame type="Frame" name="BottomIndicatorTemplate" template="Hanamura/TopIndicatorTemplate">
    <Frame type="Image" name="PayloadIndicatorBirth">
      <TextureCoords top="0.0" left="0.0" bottom="1.0" right="1.0" />
    </Frame>
    <Frame type="Image" name="PayloadIndicator">
      <TextureCoords top="0.0" left="0.0" bottom="1.0" right="1.0" />
    </Frame>
    <Frame type="Label" name="PayloadIndicatorLabel">
      <Anchor side="Top" relative="$parent" pos="Mid" offset="3" />
      <Anchor side="Bottom" relative="$parent" pos="Mid" offset="3" />
    </Frame>
    <Frame type="Frame" name="PayloadLeftArrows">
      <Anchor side="Top" relative="$parent/PayloadIndicator" pos="Mid" offset="2" />
      <Anchor side="Bottom" relative="$parent/PayloadIndicator" pos="Mid" offset="2" />
    </Frame>
    <Frame type="Frame" name="PayloadRightArrows">
      <Anchor side="Top" relative="$parent/PayloadIndicator" pos="Mid" offset="2" />
      <Anchor side="Bottom" relative="$parent/PayloadIndicator" pos="Mid" offset="2" />
    </Frame>
  </Frame>
  <Frame type="Label" name="WarningLabelTemplateOrder">
    <Height val="50" />
    <Width val="1000" />
    <Text val="SPAWNING" />
    <IgnoreParentAlpha val="True" />
    <Visible val="True" />
    <Style val="Storm_MapMechanic_MechanicCounterCentered_Small" />
    <GlowColor val="{$GameUI/TeamOrderColors/@Color}" />
    <ColorAdjustMode val="Colorize" />
    <LightAdjustColor val="#ColorWhite" />
    <DarkAdjustColor val="{$GameUI/TeamOrderColors/@Color}" />
  </Frame>
  <Frame type="Label" name="WarningLabelTemplateChaos" template="Hanamura/WarningLabelTemplateOrder">
    <GlowColor val="{$GameUI/TeamChaosColors/@Color}" />
    <DarkAdjustColor val="{$GameUI/TeamChaosColors/@Color}" />
  </Frame>
  <Frame type="Frame" name="WarningTimerArrowTemplate">
    <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
    <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
    <IgnoreParentAlpha val="True" />
    <Height val="100" />
    <Width val="100" />
    <Frame type="Image" name="TimerArrow1">
      <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
      <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
      <Texture val="@UI/WarningTimerArrow2" />
      <Height val="48.5" />
      <Width val="83.25" />
      <SubpixelRendering val="True" />
      <Color val="{$GameUI/TeamOrderColors/@Color}" />
    </Frame>
    <Frame type="Image" name="TimerArrow2">
      <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
      <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
      <Texture val="@UI/WarningTimerArrow2" />
      <Height val="48.5" />
      <Width val="83.25" />
      <SubpixelRendering val="True" />
      <Color val="{$GameUI/TeamOrderColors/@Color}" />
    </Frame>
    <Frame type="Image" name="TimerArrow3">
      <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
      <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
      <Texture val="@UI/WarningTimerArrow2" />
      <Height val="48.5" />
      <Width val="83.25" />
      <SubpixelRendering val="True" />
      <Color val="{$GameUI/TeamOrderColors/@Color}" />
    </Frame>
  </Frame>
  <Frame type="Frame" name="WarningTimerArrowBottomTemplate" template="Hanamura/WarningTimerArrowTemplate">
    <Animation name="OnShown">
      <Event event="OnShown" action="Restart,Play" />
      <Controller type="Anchor" end="PingPong" side="Top" relative="true">
        <Key type="Curve" time="0" value="0" inout="Linear,Slow" />
        <Key type="Curve" time=".5" value="10" inout="Slow,Linear" />
      </Controller>
      <Controller type="Fade" end="Pause">
        <Key type="Curve" time="0" value="255" inout="Linear,Slow" />
        <Key type="Curve" time="5" value="255" inout="Slow,Linear" />
        <Key type="Curve" time="6" value="0" inout="Slow,Linear" />
      </Controller>
      <Controller type="Visibility" end="Pause">
        <Key type="Bool" time="0" value="true" />
        <Key type="Bool" time="6" value="false" />
      </Controller>
    </Animation>
    <Frame type="Image" name="TimerArrow1">
      <Anchor side="Top" relative="$parent" pos="Min" offset="-15" />
    </Frame>
    <Frame type="Image" name="TimerArrow2">
      <Anchor side="Top" relative="$parent" pos="Min" offset="-5" />
    </Frame>
    <Frame type="Image" name="TimerArrow3">
      <Anchor side="Top" relative="$parent" pos="Min" offset="5" />
    </Frame>
  </Frame>
  <Frame type="Frame" name="WarningTimerArrowTopTemplate" template="Hanamura/WarningTimerArrowTemplate">
    <Animation name="OnShown">
      <Event event="OnShown" action="Restart,Play" />
      <Controller type="Anchor" end="PingPong" side="Bottom" relative="true">
        <Key type="Curve" time="0" value="0" inout="Linear,Slow" />
        <Key type="Curve" time=".5" value="-10" inout="Slow,Linear" />
      </Controller>
      <Controller type="Fade" end="Pause">
        <Key type="Curve" time="0" value="255" inout="Linear,Slow" />
        <Key type="Curve" time="5" value="255" inout="Slow,Linear" />
        <Key type="Curve" time="6" value="0" inout="Slow,Linear" />
      </Controller>
      <Controller type="Visibility" end="Pause">
        <Key type="Bool" time="0" value="true" />
        <Key type="Bool" time="6" value="false" />
      </Controller>
    </Animation>
    <Frame type="Image" name="TimerArrow1">
      <Anchor side="Bottom" relative="$parent" pos="Max" offset="12" />
      <TextureCoords top="1.0" left="0.0" bottom="0.0" right="1.0" />
    </Frame>
    <Frame type="Image" name="TimerArrow2">
      <Anchor side="Bottom" relative="$parent" pos="Max" offset="2" />
      <TextureCoords top="1.0" left="0.0" bottom="0.0" right="1.0" />
    </Frame>
    <Frame type="Image" name="TimerArrow3">
      <Anchor side="Bottom" relative="$parent" pos="Max" offset="-8" />
      <TextureCoords top="1.0" left="0.0" bottom="0.0" right="1.0" />
    </Frame>
  </Frame>
  <Frame type="UnitStatusFrame" name="PayloadStatusBar" template="UnitStatus/MinionUnitStatusFrameTemplate">
    <Height val="100" />
    <Width val="100" />
    <Frame type="UnitStatusDurationBar" name="DurationBar">
      <VisibleToOwner val="true" />
      <VisibleToAlly val="true" />
      <VisibleToEnemy val="true" />
      <Anchor side="Top" relative="$parent/HealthBar" pos="Max" offset="0" />
    </Frame>
    <Frame type="UnitStatusShieldedHealthBar" name="HealthBar">
      <Anchor side="Top" relative="$parent" pos="Mid" offset="-30" />
      <Anchor side="Bottom" relative="$parent" pos="Mid" offset="-30" />
    </Frame>
    <Frame type="Image" name="HealthFrameBackground" template="UnitStatus/HealthBarBackgroundTemplate">
      <CollapseLayout val="True" />
      <Anchor side="Top" relative="$parent" pos="Mid" offset="-30" />
      <Anchor side="Bottom" relative="$parent" pos="Mid" offset="-30" />
      <Anchor side="Left" relative="$parent" pos="Min" offset="0" />
      <Height val="7" />
      <Width val="60" />
    </Frame>
    <Frame type="UnitStatusValidatorAnimElement" name="ContestedAnims">
      <Anchor relative="$parent" />
      <Validator val="SourceHasContestedBehavior" />
      <Validator val="SourceDoesNotHaveContestedBehavior" />
      <Animation name="SourceHasContestedBehavior">
        <Event event="SourceHasContestedBehavior" action="Restart,Play" />
        <Controller type="Visibility" end="Pause" frame="$parent/PayloadContestedFrame">
          <Key type="Bool" time="0" value="True" />
        </Controller>
      </Animation>
      <Animation name="SourceDoesNotHaveContestedBehavior">
        <Event event="SourceDoesNotHaveContestedBehavior" action="Restart,Play" />
        <Controller type="Visibility" end="Pause" frame="$parent/PayloadContestedFrame">
          <Key type="Bool" time="0" value="False" />
        </Controller>
      </Animation>
    </Frame>
    <Frame type="UnitStatusValidatorAnimElement" name="BlockedAnims">
      <Anchor relative="$parent" />
      <Validator val="SourceHasBlockedBehavior" />
      <Validator val="SourceDoesNotHaveBlockedBehavior" />
      <Animation name="SourceHasBlockedBehavior">
        <Event event="SourceHasBlockedBehavior" action="Restart,Play" />
        <Controller type="Visibility" end="Pause" frame="$parent/PayloadBlockedFrame">
          <Key type="Bool" time="0" value="True" />
        </Controller>
      </Animation>
      <Animation name="SourceDoesNotHaveBlockedBehavior">
        <Event event="SourceDoesNotHaveBlockedBehavior" action="Restart,Play" />
        <Controller type="Visibility" end="Pause" frame="$parent/PayloadBlockedFrame">
          <Key type="Bool" time="0" value="False" />
        </Controller>
      </Animation>
    </Frame>
    <Frame type="UnitStatusValidatorAnimElement" name="HealthBarController">
      <Anchor relative="$parent" />
      <Validator val="PayloadHasTurretBehavior" />
      <Validator val="PayloadDoesNotHaveTurretBehavior" />
      <StateGroup name="HasTurret">
        <DefaultState val="WithTurret" />
        <State name="NoTurret">
          <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadDoesNotHaveTurretBehavior" />
          <Action type="SetProperty" frame="$parent/HealthBar" VisibleToOwner="False" />
          <Action type="SetProperty" frame="$parent/HealthBar" VisibleToAlly="False" />
          <Action type="SetProperty" frame="$parent/HealthBar" VisibleToEnemy="False" />
          <Action type="SetProperty" frame="$parent/UnitStatusFramePreselectionIndicator" VisibleToOwner="False" />
          <Action type="SetProperty" frame="$parent/UnitStatusFramePreselectionIndicator" VisibleToAlly="False" />
          <Action type="SetProperty" frame="$parent/UnitStatusFramePreselectionIndicator" VisibleToEnemy="False" />
          <Action type="SetProperty" frame="$parent/HealthFrameBackground" Visible="False" />
        </State>
        <State name="WithTurret" />
      </StateGroup>
    </Frame>
    <Frame type="UnitStatusValidatorAnimElement" name="MovementAnims">
      <Anchor relative="$parent" />
      <Validator val="PayloadHasStartLocationBehavior" />
      <Validator val="PayloadHasReverseCountdownBehavior" />
      <Validator val="PayloadHasReverseBehavior" />
      <Validator val="PayloadHasAlly1Behavior" />
      <Validator val="PayloadHasAlly2Behavior" />
      <Validator val="PayloadHasAlly3Behavior" />
      <StateGroup name="MovementBehaviors">
        <DefaultState val="PayloadHasStartLocationBehavior" />
        <State name="PayloadHasReverseCountdownBehavior">
          <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasReverseCountdownBehavior" />
        </State>
        <State name="PayloadHasReverseBehavior">
          <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasReverseBehavior" />
          <Action type="SetProperty" frame="$parent/PayloadMovingBackwards" Visible="True" />
        </State>
        <State name="PayloadHasAlly1Behavior">
          <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly1Behavior" />
          <Action type="SetProperty" frame="$parent/PayloadMovingForwardWith1" Visible="True" />
        </State>
        <State name="PayloadHasAlly2Behavior">
          <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly2Behavior" />
          <Action type="SetProperty" frame="$parent/PayloadMovingForwardWith2" Visible="True" />
        </State>
        <State name="PayloadHasAlly3Behavior">
          <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly3Behavior" />
          <Action type="SetProperty" frame="$parent/PayloadMovingForwardWith3" Visible="True" />
        </State>
        <State name="PayloadHasStartLocationBehavior" />
      </StateGroup>
    </Frame>
    <Frame type="Image" name="PayloadContestedFrame">
      <CollapseLayout val="True" />
      <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Background_Contested" />
      <Anchor side="Bottom" relative="$parent/HealthFrameBackground" pos="Min" offset="0" />
      <Anchor side="Left" relative="$parent/HealthBar" pos="Mid" offset="0" />
      <Anchor side="Right" relative="$parent/HealthBar" pos="Mid" offset="0" />
      <SubpixelRendering val="True" />
      <Unclipped val="True" />
      <Visible val="False" />
      <Height val="32" />
      <Width val="148" />
      <RenderPriority val="1" />
      <Frame type="Label" name="PayloadContestedLabel">
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
        <Style val="Storm_Map_Hanamura_MediumText" />
        <Text val="@UI/HanamuraPayload_Contested" />
        <SubpixelRendering val="True" />
      </Frame>
      <Frame type="Image" name="PayloadContestedArrow1">
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Contested_Arrow" />
        <Anchor side="Top" relative="$parent/PayloadContestedLabel" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent/PayloadContestedLabel" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadContestedLabel" pos="Min" offset="0" />
        <SubpixelRendering val="True" />
      </Frame>
      <Frame type="Image" name="PayloadContestedArrow2">
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Contested_Arrow" />
        <Anchor side="Top" relative="$parent/PayloadContestedLabel" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent/PayloadContestedLabel" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent/PayloadContestedLabel" pos="Max" offset="0" />
        <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" />
        <SubpixelRendering val="True" />
      </Frame>
    </Frame>
    <Frame type="Image" name="PayloadBlockedFrame">
      <CollapseLayout val="True" />
      <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Background_Blocked" />
      <Anchor side="Bottom" relative="$parent/PayloadContestedFrame" pos="Min" offset="0" />
      <Anchor side="Left" relative="$parent/HealthBar" pos="Mid" offset="0" />
      <Anchor side="Right" relative="$parent/HealthBar" pos="Mid" offset="0" />
      <SubpixelRendering val="True" />
      <Unclipped val="True" />
      <Visible val="False" />
      <Height val="32" />
      <Width val="148" />
      <RenderPriority val="2" />
      <Frame type="Label" name="PayloadBlockedLabel">
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent" pos="Mid" offset="8" />
        <Anchor side="Right" relative="$parent" pos="Mid" offset="8" />
        <Style val="Storm_Map_Hanamura_MediumText" />
        <Text val="@UI/HanamuraPayload_Blocked" />
        <SubpixelRendering val="True" />
      </Frame>
      <Frame type="Image" name="PayloadBlockedImage">
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Icon_Blocked_small" />
        <Anchor side="Top" relative="$parent/PayloadBlockedLabel" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent/PayloadBlockedLabel" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadBlockedLabel" pos="Min" offset="0" />
        <SubpixelRendering val="True" />
      </Frame>
    </Frame>
    <Frame type="Image" name="PayloadMovingBackwards">
      <Anchor side="Bottom" relative="$parent/PayloadBlockedFrame" pos="Min" offset="0" />
      <Anchor side="Left" relative="$parent/HealthBar" pos="Mid" offset="0" />
      <Anchor side="Right" relative="$parent/HealthBar" pos="Mid" offset="0" />
      <Visible val="False" />
      <SubpixelRendering val="True" />
      <Unclipped val="True" />
      <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Arrow_Big" />
      <Animation name="OnShown">
        <Event event="OnShown" action="Restart,Play" />
        <Controller type="Anchor" end="PingPong" side="Right" relative="true">
          <Key type="Curve" time="0" value="0" inout="Linear,Slow" />
          <Key type="Curve" time=".5" value="5" inout="Slow,Linear" />
        </Controller>
        <Controller type="Anchor" end="PingPong" side="Left" relative="true">
          <Key type="Curve" time="0" value="0" inout="Linear,Slow" />
          <Key type="Curve" time=".5" value="5" inout="Slow,Linear" />
        </Controller>
        <Controller type="Fade" end="PingPong">
          <Key type="Curve" time="0" value="255" inout="Linear,Slow" />
          <Key type="Curve" time=".5" value="150" inout="Slow,Linear" />
        </Controller>
      </Animation>
    </Frame>
    <Frame type="Frame" name="PayloadMovingForwardWith1">
      <Anchor side="Bottom" relative="$parent/PayloadBlockedFrame" pos="Min" offset="0" />
      <Anchor side="Left" relative="$parent/HealthBar" pos="Mid" offset="0" />
      <Anchor side="Right" relative="$parent/HealthBar" pos="Mid" offset="0" />
      <Visible val="False" />
      <Height val="36" />
      <Frame type="Image" name="PayloadMovingForwardCircle">
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Circle_Big" />
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
        <SubpixelRendering val="True" />
        <Unclipped val="True" />
        <Frame type="Label" name="PayloadMovingForwardLabel1">
          <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
          <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
          <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
          <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
          <Style val="Storm_Map_Hanamura_LargeText" />
          <Text val="1" />
          <SubpixelRendering val="True" />
        </Frame>
      </Frame>
      <Frame type="Image" name="PayloadMovingForwardArrow1">
        <Height val="24" />
        <Width val="14.4" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Arrow_Big" />
        <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" />
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadMovingForwardCircle" pos="Min" offset="5" />
        <SubpixelRendering val="True" />
        <Unclipped val="True" />
        <Animation name="OnShown">
          <Event event="OnShown" action="Restart,Play" />
          <Controller type="Fade" end="PingPong">
            <Key type="Curve" time="0" value="255" inout="Linear,Slow" />
            <Key type="Curve" time=".5" value="150" inout="Slow,Linear" />
          </Controller>
        </Animation>
      </Frame>
    </Frame>
    <Frame type="Frame" name="PayloadMovingForwardWith2">
      <Anchor side="Bottom" relative="$parent/PayloadBlockedFrame" pos="Min" offset="0" />
      <Anchor side="Left" relative="$parent/HealthBar" pos="Mid" offset="0" />
      <Anchor side="Right" relative="$parent/HealthBar" pos="Mid" offset="0" />
      <Visible val="False" />
      <Height val="36" />
      <Frame type="Image" name="PayloadMovingForwardCircle">
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Circle_Big" />
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
        <SubpixelRendering val="True" />
        <Unclipped val="True" />
        <Frame type="Label" name="PayloadMovingForwardLabel1">
          <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
          <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
          <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
          <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
          <Style val="Storm_Map_Hanamura_LargeText" />
          <Text val="2" />
          <SubpixelRendering val="True" />
        </Frame>
      </Frame>
      <Frame type="Image" name="PayloadMovingForwardArrow1">
        <Height val="24" />
        <Width val="14.4" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Arrow_Big" />
        <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" />
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadMovingForwardCircle" pos="Min" offset="5" />
        <SubpixelRendering val="True" />
        <Unclipped val="True" />
        <Animation name="OnShown">
          <Event event="OnShown" action="Restart,Play" />
          <Controller type="Fade" end="PingPong">
            <Key type="Curve" time="0" value="255" inout="Linear,Slow" />
            <Key type="Curve" time=".5" value="150" inout="Slow,Linear" />
          </Controller>
        </Animation>
      </Frame>
      <Frame type="Image" name="PayloadMovingForwardArrow2">
        <Height val="24" />
        <Width val="14.4" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Arrow_Big" />
        <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" />
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadMovingForwardArrow1" pos="Min" offset="5" />
        <SubpixelRendering val="True" />
        <Unclipped val="True" />
        <Animation name="OnShown">
          <Event event="OnShown" action="Restart,Play" />
          <Controller type="Fade" end="PingPong">
            <Key type="Curve" time="0" value="255" inout="Linear,Slow" />
            <Key type="Curve" time=".5" value="150" inout="Slow,Linear" />
          </Controller>
        </Animation>
      </Frame>
    </Frame>
    <Frame type="Frame" name="PayloadMovingForwardWith3">
      <Anchor side="Bottom" relative="$parent/PayloadBlockedFrame" pos="Min" offset="0" />
      <Anchor side="Left" relative="$parent/HealthBar" pos="Mid" offset="0" />
      <Anchor side="Right" relative="$parent/HealthBar" pos="Mid" offset="0" />
      <Height val="36" />
      <Visible val="False" />
      <Frame type="Image" name="PayloadMovingForwardCircle">
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Circle_Big" />
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
        <SubpixelRendering val="True" />
        <Unclipped val="True" />
        <Frame type="Label" name="PayloadMovingForwardLabel1">
          <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
          <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
          <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
          <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
          <Style val="Storm_Map_Hanamura_LargeText" />
          <Text val="3" />
          <SubpixelRendering val="True" />
        </Frame>
      </Frame>
      <Frame type="Image" name="PayloadMovingForwardArrow1">
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Arrow_Big" />
        <Height val="24" />
        <Width val="14.4" />
        <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" />
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadMovingForwardCircle" pos="Min" offset="5" />
        <SubpixelRendering val="True" />
        <Unclipped val="True" />
        <Animation name="OnShown">
          <Event event="OnShown" action="Restart,Play" />
          <Controller type="Fade" end="PingPong">
            <Key type="Curve" time="0" value="255" inout="Linear,Slow" />
            <Key type="Curve" time=".5" value="150" inout="Slow,Linear" />
          </Controller>
        </Animation>
      </Frame>
      <Frame type="Image" name="PayloadMovingForwardArrow2">
        <Height val="24" />
        <Width val="14.4" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Arrow_Big" />
        <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" />
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadMovingForwardArrow1" pos="Min" offset="5" />
        <SubpixelRendering val="True" />
        <Unclipped val="True" />
        <Animation name="OnShown">
          <Event event="OnShown" action="Restart,Play" />
          <Controller type="Fade" end="PingPong">
            <Key type="Curve" time="0" value="255" inout="Linear,Slow" />
            <Key type="Curve" time=".5" value="150" inout="Slow,Linear" />
          </Controller>
        </Animation>
      </Frame>
      <Frame type="Image" name="PayloadMovingForwardArrow3">
        <Height val="24" />
        <Width val="14.4" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Arrow_Big" />
        <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" />
        <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadMovingForwardArrow2" pos="Min" offset="5" />
        <SubpixelRendering val="True" />
        <Unclipped val="True" />
        <Animation name="OnShown">
          <Event event="OnShown" action="Restart,Play" />
          <Controller type="Fade" end="PingPong">
            <Key type="Curve" time="0" value="255" inout="Linear,Slow" />
            <Key type="Curve" time=".5" value="150" inout="Slow,Linear" />
          </Controller>
        </Animation>
      </Frame>
    </Frame>
  </Frame>
  <Frame type="UnitStatusFrame" name="PayloadStatusBarLeftSide" template="Hanamura/PayloadStatusBar">
    <Frame type="Frame" name="PayloadMovingForwardWith1">
      <Frame type="Image" name="PayloadMovingForwardArrow1">
        <Animation name="OnShown">
          <Event event="OnShown" action="Restart,Play" />
          <Controller type="Anchor" end="PingPong" side="Right" relative="true">
            <Key type="Curve" time="0" value="0" inout="Linear,Slow" />
            <Key type="Curve" time=".5" value="-5" inout="Slow,Linear" />
          </Controller>
        </Animation>
      </Frame>
    </Frame>
    <Frame type="Frame" name="PayloadMovingForwardWith2">
      <Frame type="Image" name="PayloadMovingForwardArrow1">
        <Animation name="OnShown">
          <Event event="OnShown" action="Restart,Play" />
          <Controller type="Anchor" end="PingPong" side="Right" relative="true">
            <Key type="Curve" time="0" value="0" inout="Linear,Slow" />
            <Key type="Curve" time=".5" value="-5" inout="Slow,Linear" />
          </Controller>
        </Animation>
      </Frame>
    </Frame>
    <Frame type="Frame" name="PayloadMovingForwardWith3">
      <Frame type="Image" name="PayloadMovingForwardArrow1">
        <Animation name="OnShown">
          <Event event="OnShown" action="Restart,Play" />
          <Controller type="Anchor" end="PingPong" side="Right" relative="true">
            <Key type="Curve" time="0" value="0" inout="Linear,Slow" />
            <Key type="Curve" time=".5" value="-5" inout="Slow,Linear" />
          </Controller>
        </Animation>
      </Frame>
    </Frame>
  </Frame>
  <Frame type="UnitStatusFrame" name="PayloadStatusBarRightSide" template="Hanamura/PayloadStatusBar">
    <Frame type="Image" name="PayloadMovingBackwards">
      <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Arrow_Big" />
      <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" />
    </Frame>
    <Frame type="Frame" name="PayloadMovingForwardWith1">
      <Frame type="Image" name="PayloadMovingForwardArrow1">
        <Anchor side="Left" relative="$parent/PayloadMovingForwardCircle" pos="Max" offset="5" />
        <Anchor side="Right" relative="$this" pos="Max" offset="0" />
        <TextureCoords top="1.0" left="0.0" bottom="0.0" right="1.0" />
        <Animation name="OnShown">
          <Event event="OnShown" action="Restart,Play" />
          <Controller type="Anchor" end="PingPong" side="Left" relative="true">
            <Key type="Curve" time="0" value="0" inout="Linear,Slow" />
            <Key type="Curve" time=".5" value="-5" inout="Slow,Linear" />
          </Controller>
        </Animation>
      </Frame>
    </Frame>
    <Frame type="Frame" name="PayloadMovingForwardWith2">
      <Frame type="Image" name="PayloadMovingForwardArrow1">
        <Anchor side="Left" relative="$parent/PayloadMovingForwardCircle" pos="Max" offset="5" />
        <Anchor side="Right" relative="$this" pos="Max" offset="0" />
        <TextureCoords top="1.0" left="0.0" bottom="0.0" right="1.0" />
        <Animation name="OnShown">
          <Event event="OnShown" action="Restart,Play" />
          <Controller type="Anchor" end="PingPong" side="Left" relative="true">
            <Key type="Curve" time="0" value="0" inout="Linear,Slow" />
            <Key type="Curve" time=".5" value="-5" inout="Slow,Linear" />
          </Controller>
        </Animation>
      </Frame>
      <Frame type="Image" name="PayloadMovingForwardArrow2">
        <Anchor side="Left" relative="$parent/PayloadMovingForwardArrow1" pos="Max" offset="-5" />
        <Anchor side="Right" relative="$this" pos="Max" offset="0" />
        <TextureCoords top="1.0" left="0.0" bottom="0.0" right="1.0" />
      </Frame>
    </Frame>
    <Frame type="Frame" name="PayloadMovingForwardWith3">
      <Frame type="Image" name="PayloadMovingForwardArrow1">
        <Anchor side="Left" relative="$parent/PayloadMovingForwardCircle" pos="Max" offset="5" />
        <Anchor side="Right" relative="$this" pos="Max" offset="0" />
        <TextureCoords top="1.0" left="0.0" bottom="0.0" right="1.0" />
        <Animation name="OnShown">
          <Event event="OnShown" action="Restart,Play" />
          <Controller type="Anchor" end="PingPong" side="Left" relative="true">
            <Key type="Curve" time="0" value="0" inout="Linear,Slow" />
            <Key type="Curve" time=".5" value="-5" inout="Slow,Linear" />
          </Controller>
        </Animation>
      </Frame>
      <Frame type="Image" name="PayloadMovingForwardArrow2">
        <Anchor side="Left" relative="$parent/PayloadMovingForwardArrow1" pos="Max" offset="-5" />
        <Anchor side="Right" relative="$this" pos="Max" offset="0" />
        <TextureCoords top="1.0" left="0.0" bottom="0.0" right="1.0" />
      </Frame>
      <Frame type="Image" name="PayloadMovingForwardArrow3">
        <Anchor side="Left" relative="$parent/PayloadMovingForwardArrow2" pos="Max" offset="-5" />
        <Anchor side="Right" relative="$this" pos="Max" offset="0" />
        <TextureCoords top="1.0" left="0.0" bottom="0.0" right="1.0" />
      </Frame>
    </Frame>
  </Frame>
  <Frame type="Frame" name="HanamuraPanel" template="MapMechanicPanel/MechanicFrameTemplate">
    <Anchor side="Top" relative="$parent" pos="Min" offset="0" />
    <Anchor side="Bottom" relative="$parent" pos="Max" offset="0" />
    <Anchor side="Right" relative="$parent" pos="Max" offset="0" />
    <Width val="1000" />
    <Frame type="UnitStatusColor" name="TeamOrderColors">
      <Anchor side="Top" relative="$parent" pos="Min" offset="0" />
      <Anchor side="Left" relative="$parent" pos="Min" offset="0" />
      <Width val="3" />
      <Height val="3" />
      <ForcedTeam val="0" />
      <ColorStyle val="HanamuraBars" />
    </Frame>
    <Frame type="UnitStatusColor" name="TeamChaosColors">
      <Anchor side="Top" relative="$parent" pos="Min" offset="0" />
      <Anchor side="Left" relative="$parent/TeamOrderColors" pos="Max" offset="0" />
      <Width val="3" />
      <Height val="3" />
      <ForcedTeam val="1" />
      <ColorStyle val="HanamuraBars" />
    </Frame>
    <Frame type="Frame" name="PayloadPanel">
      <Anchor relative="Background" offset="60" />
      <Frame type="Image" name="Background">
        <Width val="484" />
        <Height val="76" />
        <Anchor side="Bottom" relative="$parent/$parent/MinimapProxyFrame" pos="Min" offset="40" />
        <Anchor side="Right" relative="$parent/$parent" pos="Max" offset="0" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Pane" />
      </Frame>
      <Frame type="Frame" name="PayloadGrayBarLeft1" Template="Hanamura/PayloadLeftBarGrayTemplate">
        <Anchor side="Bottom" relative="$parent/Background" pos="Mid" offset="4" />
        <Anchor side="Right" relative="$parent/Background" pos="Mid" offset="-22" />
      </Frame>
      <Frame type="Frame" name="PayloadGrayBarLeft2" Template="Hanamura/PayloadLeftBarGrayTemplate">
        <Anchor side="Top" relative="$parent/Background" pos="Mid" offset="-4" />
        <Anchor side="Right" relative="$parent/Background" pos="Mid" offset="-22" />
      </Frame>
      <Frame type="Frame" name="PayloadGrayBarRight1" Template="Hanamura/PayloadRightBarGrayTemplate">
        <Anchor side="Bottom" relative="$parent/Background" pos="Mid" offset="4" />
        <Anchor side="Left" relative="$parent/Background" pos="Mid" offset="22" />
      </Frame>
      <Frame type="Frame" name="PayloadGrayBarRight2" Template="Hanamura/PayloadRightBarGrayTemplate">
        <Anchor side="Top" relative="$parent/Background" pos="Mid" offset="-4" />
        <Anchor side="Left" relative="$parent/Background" pos="Mid" offset="22" />
      </Frame>
      <Frame type="Image" name="PayloadBlockedFrameLeftPath1">
        <Anchor side="Top" relative="$parent/Background" pos="Mid" offset="10" />
        <Anchor side="Bottom" relative="$parent/Background" pos="Mid" offset="10" />
        <Anchor side="Left" relative="$parent/Background" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/Background" pos="Mid" offset="0" />
        <Visible val="False" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Blocked_orange_Bg" />
        <TextureCoords top="1.0" left="0.0" bottom="0.0" right="1.0" />
        <Animation name="FadeIn">
          <Event event="OnShown" action="Reset,Play" />
          <Controller type="Fade" end="Pause">
            <Key type="Curve" time="0" value="255" inout="Linear" />
            <Key type="Curve" time=".5 " value="100" inout="Linear" />
          </Controller>
        </Animation>
        <Frame type="Image" name="PayloadBlockedCircleImageLeftPath1">
          <Anchor side="Top" relative="$parent" pos="Mid" offset="1" />
          <Anchor side="Bottom" relative="$parent" pos="Mid" offset="1" />
          <Anchor side="Left" relative="$parent" pos="Mid" offset="-29" />
          <Anchor side="Right" relative="$parent" pos="Mid" offset="-29" />
          <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Icon_Blocked_Circle" />
          <RenderPriority val="600" />
          <Animation name="FadeIn">
            <Event event="OnShown" action="Reset,Play" />
            <Controller type="Fade" end="Pause">
              <Key type="Curve" time="0" value="255" inout="Linear" />
              <Key type="Curve" time=".25" value="0" inout="Linear" />
            </Controller>
            <Controller type="Dimension" dimension="Height" relative="False" percentage="True" unclip="True" end="Pause">
              <Key type="Curve" time="0.0" value="25" inout="Linear" />
              <Key type="Curve" time="0.25" value="100" inout="Linear" />
            </Controller>
            <Controller type="Dimension" dimension="Width" relative="False" percentage="True" unclip="True" end="Pause">
              <Key type="Curve" time="0.0" value="25" inout="Linear" />
              <Key type="Curve" time="0.25" value="100" inout="Linear" />
            </Controller>
          </Animation>
        </Frame>
      </Frame>
      <Frame type="Image" name="PayloadBlockedFrameLeftPath2">
        <Visible val="False" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Blocked_orange_Bg" />
        <Anchor side="Top" relative="$parent" pos="Mid" offset="-11" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="-11" />
        <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
        <TextureCoords top="0.0" left="0.0" bottom="1.0" right="1.0" />
        <Animation name="FadeIn">
          <Event event="OnShown" action="Reset,Play" />
          <Controller type="Fade" end="Pause">
            <Key type="Curve" time="0" value="255" inout="Linear" />
            <Key type="Curve" time=".5 " value="100" inout="Linear" />
          </Controller>
        </Animation>
        <Frame type="Image" name="PayloadBlockedCircleImageLeftPath2">
          <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Icon_Blocked_Circle" />
          <Unclipped val="True" />
          <RenderPriority val="600" />
          <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
          <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
          <Anchor side="Left" relative="$parent" pos="Mid" offset="-29" />
          <Anchor side="Right" relative="$parent" pos="Mid" offset="-29" />
          <Animation name="FadeIn">
            <Event event="OnShown" action="Reset,Play" />
            <Controller type="Fade" end="Pause">
              <Key type="Curve" time="0" value="255" inout="Linear" />
              <Key type="Curve" time=".25" value="0" inout="Linear" />
            </Controller>
            <Controller type="Dimension" dimension="Height" relative="False" percentage="True" unclip="True" end="Pause">
              <Key type="Curve" time="0.0" value="25" inout="Linear" />
              <Key type="Curve" time="0.25" value="100" inout="Linear" />
            </Controller>
            <Controller type="Dimension" dimension="Width" relative="False" percentage="True" unclip="True" end="Pause">
              <Key type="Curve" time="0.0" value="25" inout="Linear" />
              <Key type="Curve" time="0.25" value="100" inout="Linear" />
            </Controller>
          </Animation>
        </Frame>
      </Frame>
      <Frame type="Image" name="PayloadBlockedFrameRightPath2">
        <Visible val="False" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Blocked_orange_Bg" />
        <Anchor side="Top" relative="$parent" pos="Mid" offset="10" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="10" />
        <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
        <TextureCoords top="1.0" left="1.0" bottom="0.0" right="0.0" />
        <Animation name="FadeIn">
          <Event event="OnShown" action="Reset,Play" />
          <Controller type="Fade" end="Pause">
            <Key type="Curve" time="0" value="255" inout="Linear" />
            <Key type="Curve" time=".5 " value="100" inout="Linear" />
          </Controller>
        </Animation>
        <Frame type="Image" name="PayloadBlockedCircleImageRightPath2">
          <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Icon_Blocked_Circle" />
          <Unclipped val="True" />
          <RenderPriority val="600" />
          <Anchor side="Top" relative="$parent" pos="Mid" offset="1" />
          <Anchor side="Bottom" relative="$parent" pos="Mid" offset="1" />
          <Anchor side="Left" relative="$parent" pos="Mid" offset="29" />
          <Anchor side="Right" relative="$parent" pos="Mid" offset="29" />
          <Animation name="FadeIn">
            <Event event="OnShown" action="Reset,Play" />
            <Controller type="Fade" end="Pause">
              <Key type="Curve" time="0" value="255" inout="Linear" />
              <Key type="Curve" time=".25" value="0" inout="Linear" />
            </Controller>
            <Controller type="Dimension" dimension="Height" relative="False" percentage="True" unclip="True" end="Pause">
              <Key type="Curve" time="0.0" value="25" inout="Linear" />
              <Key type="Curve" time="0.25" value="100" inout="Linear" />
            </Controller>
            <Controller type="Dimension" dimension="Width" relative="False" percentage="True" unclip="True" end="Pause">
              <Key type="Curve" time="0.0" value="25" inout="Linear" />
              <Key type="Curve" time="0.25" value="100" inout="Linear" />
            </Controller>
          </Animation>
        </Frame>
      </Frame>
      <Frame type="Image" name="PayloadBlockedFrameRightPath1">
        <Visible val="False" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Blocked_orange_Bg" />
        <Anchor side="Top" relative="$parent" pos="Mid" offset="-11" />
        <Anchor side="Bottom" relative="$parent" pos="Mid" offset="-11" />
        <Anchor side="Left" relative="$parent" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
        <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" />
        <Animation name="FadeIn">
          <Event event="OnShown" action="Reset,Play" />
          <Controller type="Fade" end="Pause">
            <Key type="Curve" time="0" value="255" inout="Linear" />
            <Key type="Curve" time=".5 " value="100" inout="Linear" />
          </Controller>
        </Animation>
        <Frame type="Image" name="PayloadBlockedCircleImageRightPath1">
          <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Icon_Blocked_Circle" />
          <Unclipped val="True" />
          <RenderPriority val="600" />
          <Anchor side="Top" relative="$parent" pos="Mid" offset="0" />
          <Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
          <Anchor side="Left" relative="$parent" pos="Mid" offset="29" />
          <Anchor side="Right" relative="$parent" pos="Mid" offset="29" />
          <Animation name="FadeIn">
            <Event event="OnShown" action="Reset,Play" />
            <Controller type="Fade" end="Pause">
              <Key type="Curve" time="0" value="255" inout="Linear" />
              <Key type="Curve" time=".25" value="0" inout="Linear" />
            </Controller>
            <Controller type="Dimension" dimension="Height" relative="False" percentage="True" unclip="True" end="Pause">
              <Key type="Curve" time="0.0" value="25" inout="Linear" />
              <Key type="Curve" time="0.25" value="100" inout="Linear" />
            </Controller>
            <Controller type="Dimension" dimension="Width" relative="False" percentage="True" unclip="True" end="Pause">
              <Key type="Curve" time="0.0" value="25" inout="Linear" />
              <Key type="Curve" time="0.25" value="100" inout="Linear" />
            </Controller>
          </Animation>
        </Frame>
      </Frame>
      <Frame type="Frame" name="PayloadBarLeftPath1" template="Hanamura/PayloadLeftBarBlueTemplate">
        <Anchor side="Top" relative="$parent/Background" pos="Mid" offset="-4" />
        <Anchor side="Right" relative="$parent/Background" pos="Mid" offset="-22" />
      </Frame>
      <Frame type="Frame" name="PayloadBarLeftPath2" template="Hanamura/PayloadLeftBarBlueTemplate">
        <Anchor side="Bottom" relative="$parent/Background" pos="Mid" offset="4" />
        <Anchor side="Right" relative="$parent/Background" pos="Mid" offset="-22" />
      </Frame>
      <Frame type="Frame" name="PayloadBarRightPath1" Template="Hanamura/PayloadRightBarRedTemplate">
        <Anchor side="Bottom" relative="$parent/Background" pos="Mid" offset="4" />
        <Anchor side="Left" relative="$parent/Background" pos="Mid" offset="22" />
      </Frame>
      <Frame type="Frame" name="PayloadBarRightPath2" Template="Hanamura/PayloadRightBarRedTemplate">
        <Anchor side="Top" relative="$parent/Background" pos="Mid" offset="-4" />
        <Anchor side="Left" relative="$parent/Background" pos="Mid" offset="22" />
      </Frame>
      <Frame type="Frame" name="TimerFrameBottomLeft" template="Hanamura/WarningTimerArrowBottomTemplate">
        <Anchor side="Top" relative="$parent/PayloadPortraitLeft" pos="Max" offset="0" />
        <Anchor side="Left" relative="$parent/PayloadPortraitLeft" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadPortraitLeft" pos="Mid" offset="0" />
      </Frame>
      <Frame type="Frame" name="TimerFrameBottomRight" template="Hanamura/WarningTimerArrowBottomTemplate">
        <Anchor side="Top" relative="$parent/PayloadPortraitRight" pos="Max" offset="0" />
        <Anchor side="Left" relative="$parent/PayloadPortraitRight" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadPortraitRight" pos="Mid" offset="0" />
        <Frame type="Image" name="TimerArrow1">
          <Color val="{$GameUI/TeamChaosColors/@Color}" />
        </Frame>
        <Frame type="Image" name="TimerArrow2">
          <Color val="{$GameUI/TeamChaosColors/@Color}" />
        </Frame>
        <Frame type="Image" name="TimerArrow3">
          <Color val="{$GameUI/TeamChaosColors/@Color}" />
        </Frame>
      </Frame>
      <Frame type="Frame" name="TimerFrameTopLeft" template="Hanamura/WarningTimerArrowTopTemplate">
        <Anchor side="Bottom" relative="$parent/PayloadPortraitLeft" pos="Min" offset="0" />
        <Anchor side="Left" relative="$parent/PayloadPortraitLeft" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadPortraitLeft" pos="Mid" offset="0" />
      </Frame>
      <Frame type="Frame" name="TimerFrameTopRight" template="Hanamura/WarningTimerArrowTopTemplate">
        <Anchor side="Bottom" relative="$parent/PayloadPortraitRight" pos="Min" offset="0" />
        <Anchor side="Left" relative="$parent/PayloadPortraitRight" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadPortraitRight" pos="Mid" offset="0" />
        <Frame type="Image" name="TimerArrow1">
          <Color val="{$GameUI/TeamChaosColors/@Color}" />
        </Frame>
        <Frame type="Image" name="TimerArrow2">
          <Color val="{$GameUI/TeamChaosColors/@Color}" />
        </Frame>
        <Frame type="Image" name="TimerArrow3">
          <Color val="{$GameUI/TeamChaosColors/@Color}" />
        </Frame>
      </Frame>
      <Frame type="Image" name="PayloadPortraitRight">
        <Anchor side="Top" relative="$parent/Background" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent/Background" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/Background" pos="Max" offset="-6" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Payload_Red" />
        <StateGroup name="TextureChoice">
          <State name="Orange">
            <When type="StateGroup" frame="$GameUI/TeamChaosColors" TextureColor="TextureOrange" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Payload_Orange" />
          </State>
          <State name="Cyan">
            <When type="StateGroup" frame="$GameUI/TeamChaosColors" TextureColor="TextureCyan" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Payload_Cyan" />
          </State>
          <State name="Red">
            <When type="StateGroup" frame="$GameUI/TeamChaosColors" TextureColor="TextureRed" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Payload_Red" />
          </State>
          <State name="Blue">
            <When type="StateGroup" frame="$GameUI/TeamChaosColors" TextureColor="TextureBlue" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Payload_Blue" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Image" name="PayloadPortraitLeft">
        <Anchor side="Top" relative="$parent/Background" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent/Background" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent/Background" pos="Min" offset="7" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Payload_Blue" />
        <StateGroup name="TextureChoice">
          <State name="Orange">
            <When type="StateGroup" frame="$GameUI/TeamOrderColors" TextureColor="TextureOrange" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Payload_Orange" />
          </State>
          <State name="Cyan">
            <When type="StateGroup" frame="$GameUI/TeamOrderColors" TextureColor="TextureCyan" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Payload_Cyan" />
          </State>
          <State name="Red">
            <When type="StateGroup" frame="$GameUI/TeamOrderColors" TextureColor="TextureRed" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Payload_Red" />
          </State>
          <State name="Blue">
            <When type="StateGroup" frame="$GameUI/TeamOrderColors" TextureColor="TextureBlue" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Payload_Blue" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Label" name="TimerWarningLabelTopLeft" template="Hanamura/WarningLabelTemplateOrder">
        <Anchor side="Bottom" relative="$parent/PayloadPortraitLeft" pos="Min" offset="6" />
        <Anchor side="Left" relative="$parent/PayloadPortraitLeft" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadPortraitLeft" pos="Mid" offset="0" />
      </Frame>
      <Frame type="Label" name="TimerWarningLabelBottomLeft" template="Hanamura/WarningLabelTemplateOrder">
        <Anchor side="Top" relative="$parent/PayloadPortraitLeft" pos="Max" offset="-6" />
        <Anchor side="Left" relative="$parent/PayloadPortraitLeft" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadPortraitLeft" pos="Mid" offset="0" />
      </Frame>
      <Frame type="Label" name="TimerWarningLabelTopRight" template="Hanamura/WarningLabelTemplateChaos">
        <Anchor side="Bottom" relative="$parent/PayloadPortraitLeft" pos="Min" offset="6" />
        <Anchor side="Left" relative="$parent/PayloadPortraitRight" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadPortraitRight" pos="Mid" offset="0" />
      </Frame>
      <Frame type="Label" name="TimerWarningLabelBottomRight" template="Hanamura/WarningLabelTemplateChaos">
        <Anchor side="Top" relative="$parent/PayloadPortraitRight" pos="Max" offset="-6" />
        <Anchor side="Left" relative="$parent/PayloadPortraitRight" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadPortraitRight" pos="Mid" offset="0" />
      </Frame>
      <Frame type="Frame" name="LeftPathIndicator1" template="Hanamura/BottomIndicatorTemplate">
        <Anchor side="Left" relative="$parent/PayloadBarLeftPath1/PayloadProgressBar/FillImageContainer/FillImage" pos="93%" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadBarLeftPath1/PayloadProgressBar/FillImageContainer/FillImage" pos="93%" offset="0" />
        <Anchor side="Top" relative="$parent/PayloadBarLeftPath1/PayloadProgressBar/FillImageContainer/FillImage" pos="Max" offset="-26" />
        <Frame type="Image" name="PayloadIndicatorBirth">
          <Color val="{$ancestor[@name=HanamuraPanel]/TeamOrderColors/@Color}" />
        </Frame>
        <Frame type="Image" name="PayloadIndicator">
          <Color val="{$ancestor[@name=HanamuraPanel]/TeamOrderColors/@Color}" />
        </Frame>
      </Frame>
      <Frame type="Frame" name="LeftPathIndicator2" template="Hanamura/TopIndicatorTemplate">
        <Anchor side="Left" relative="$parent/PayloadBarLeftPath2/PayloadProgressBar/FillImageContainer/FillImage" pos="93%" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadBarLeftPath2/PayloadProgressBar/FillImageContainer/FillImage" pos="93%" offset="0" />
        <Anchor side="Bottom" relative="$parent/PayloadBarLeftPath2/PayloadProgressBar/FillImageContainer/FillImage" pos="Min" offset="26" />
        <Frame type="Image" name="PayloadIndicatorBirth">
          <Color val="{$ancestor[@name=HanamuraPanel]/TeamOrderColors/@Color}" />
        </Frame>
        <Frame type="Image" name="PayloadIndicator">
          <Color val="{$ancestor[@name=HanamuraPanel]/TeamOrderColors/@Color}" />
        </Frame>
      </Frame>
      <Frame type="Frame" name="RightPathIndicator1" template="Hanamura/TopIndicatorTemplate">
        <Anchor side="Left" relative="$parent/PayloadBarRightPath1/PayloadProgressBar/FillImageContainer/FillImage" pos="7%" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadBarRightPath1/PayloadProgressBar/FillImageContainer/FillImage" pos="7%" offset="0" />
        <Anchor side="Bottom" relative="$parent/PayloadBarRightPath1/PayloadProgressBar/FillImageContainer/FillImage" pos="Min" offset="26" />
        <Frame type="Image" name="PayloadIndicatorBirth">
          <Color val="{$ancestor[@name=HanamuraPanel]/TeamChaosColors/@Color}" />
        </Frame>
        <Frame type="Image" name="PayloadIndicator">
          <Color val="{$ancestor[@name=HanamuraPanel]/TeamChaosColors/@Color}" />
        </Frame>
      </Frame>
      <Frame type="Frame" name="RightPathIndicator2" template="Hanamura/BottomIndicatorTemplate">
        <Anchor side="Left" relative="$parent/PayloadBarRightPath2/PayloadProgressBar/FillImageContainer/FillImage" pos="7%" offset="0" />
        <Anchor side="Right" relative="$parent/PayloadBarRightPath2/PayloadProgressBar/FillImageContainer/FillImage" pos="7%" offset="0" />
        <Anchor side="Top" relative="$parent/PayloadBarRightPath2/PayloadProgressBar/FillImageContainer/FillImage" pos="Max" offset="-26" />
        <Frame type="Image" name="PayloadIndicatorBirth">
          <Color val="{$ancestor[@name=HanamuraPanel]/TeamChaosColors/@Color}" />
        </Frame>
        <Frame type="Image" name="PayloadIndicator">
          <Color val="{$ancestor[@name=HanamuraPanel]/TeamChaosColors/@Color}" />
        </Frame>
      </Frame>
      <Frame type="UnitStatusFrame" name="OrderProgressUnitStatusPath1">
        <Anchor relative="$parent" />
        <Frame type="UnitStatusValidatorAnimElement" name="MovementAnims">
          <Anchor relative="$parent" />
          <Validator val="PayloadHasStartLocationBehavior" />
          <Validator val="PayloadHasReverseCountdownBehavior" />
          <Validator val="PayloadHasReverseBehavior" />
          <Validator val="PayloadHasAlly1Behavior" />
          <Validator val="PayloadHasAlly2Behavior" />
          <Validator val="PayloadHasAlly3Behavior" />
          <Validator val="PayloadHasAlly1BehaviorAtDestination" />
          <Validator val="PayloadHasAlly2BehaviorAtDestination" />
          <Validator val="PayloadHasAlly3BehaviorAtDestination" />
          <StateGroup name="LeftBluePath1ProgressStateGroup">
            <State name="StartLocation">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasStartLocationBehavior" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator1" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath1" event="OnArrowScrollSpeed0" />
            </State>
            <State name="ReverseCountdown">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasReverseCountdownBehavior" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator1" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath1" event="OnArrowScrollSpeed0" />
            </State>
            <State name="Reverse">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasReverseBehavior" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator1" group="ArrowIndicators" state="ReverseLeft" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath1" event="OnArrowScrollSpeed0" />
            </State>
            <State name="HasAlly1">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly1Behavior" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator1" group="ArrowIndicators" state="Right1" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath1" event="OnArrowScrollSpeed1" />
            </State>
            <State name="HasAlly2">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly2Behavior" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator1" group="ArrowIndicators" state="Right2" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath1" event="OnArrowScrollSpeed2" />
            </State>
            <State name="HasAlly3">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly3Behavior" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator1" group="ArrowIndicators" state="Right3" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath1" event="OnArrowScrollSpeed3" />
            </State>
            <State name="HasAlly1AtDestination">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly1BehaviorAtDestination" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator1" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/LeftPathIndicator1" event="Hide" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath1" event="ProgressComplete" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath1" event="OnArrowScrollSpeed0" />
            </State>
            <State name="HasAlly2AtDestination">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly2BehaviorAtDestination" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator1" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/LeftPathIndicator1" event="Hide" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath1" event="ProgressComplete" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath1" event="OnArrowScrollSpeed0" />
            </State>
            <State name="HasAlly3AtDestination">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly3BehaviorAtDestination" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator1" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/LeftPathIndicator1" event="Hide" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath1" event="ProgressComplete" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath1" event="OnArrowScrollSpeed0" />
            </State>
            <State name="NoState">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="NoState" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator1" group="ArrowIndicators" state="NoState" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath1" event="OnArrowScrollSpeed0" />
            </State>
          </StateGroup>
        </Frame>
      </Frame>
      <Frame type="UnitStatusFrame" name="OrderProgressUnitStatusPath2">
        <Anchor relative="$parent" />
        <Frame type="UnitStatusValidatorAnimElement" name="MovementAnims">
          <Anchor relative="$parent" />
          <Validator val="PayloadHasStartLocationBehavior" />
          <Validator val="PayloadHasReverseCountdownBehavior" />
          <Validator val="PayloadHasReverseBehavior" />
          <Validator val="PayloadHasAlly1Behavior" />
          <Validator val="PayloadHasAlly2Behavior" />
          <Validator val="PayloadHasAlly3Behavior" />
          <Validator val="PayloadHasAlly1BehaviorAtDestination" />
          <Validator val="PayloadHasAlly2BehaviorAtDestination" />
          <Validator val="PayloadHasAlly3BehaviorAtDestination" />
          <StateGroup name="LeftBluePath2ProgressStateGroup">
            <State name="StartLocation">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasStartLocationBehavior" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator2" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath2" event="OnArrowScrollSpeed0" />
            </State>
            <State name="ReverseCountdown">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasReverseCountdownBehavior" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator2" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath2" event="OnArrowScrollSpeed0" />
            </State>
            <State name="Reverse">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasReverseBehavior" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator2" group="ArrowIndicators" state="ReverseLeft" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath2" event="OnArrowScrollSpeed0" />
            </State>
            <State name="HasAlly1">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly1Behavior" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator2" group="ArrowIndicators" state="Right1" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath2" event="OnArrowScrollSpeed1" />
            </State>
            <State name="HasAlly2">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly2Behavior" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator2" group="ArrowIndicators" state="Right2" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath2" event="OnArrowScrollSpeed2" />
            </State>
            <State name="HasAlly3">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly3Behavior" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator2" group="ArrowIndicators" state="Right3" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath2" event="OnArrowScrollSpeed3" />
            </State>
            <State name="HasAlly1AtDestination">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly1BehaviorAtDestination" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator2" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/LeftPathIndicator2" event="Hide" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath2" event="ProgressComplete" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath2" event="OnArrowScrollSpeed0" />
            </State>
            <State name="HasAlly2AtDestination">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly2BehaviorAtDestination" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator2" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/LeftPathIndicator2" event="Hide" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath2" event="ProgressComplete" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath2" event="OnArrowScrollSpeed0" />
            </State>
            <State name="HasAlly3AtDestination">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly3BehaviorAtDestination" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator2" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/LeftPathIndicator2" event="Hide" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath2" event="ProgressComplete" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath2" event="OnArrowScrollSpeed0" />
            </State>
            <State name="NoState">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="NoState" />
              <Action type="SetState" frame="$parent/$parent/LeftPathIndicator2" group="ArrowIndicators" state="NoState" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarLeftPath2" event="OnArrowScrollSpeed0" />
            </State>
          </StateGroup>
        </Frame>
      </Frame>
      <Frame type="UnitStatusFrame" name="ChaosProgressUnitStatusPath1">
        <Anchor relative="$parent" />
        <Frame type="UnitStatusValidatorAnimElement" name="MovementAnims">
          <Anchor relative="$parent" />
          <Validator val="PayloadHasStartLocationBehavior" />
          <Validator val="PayloadHasReverseCountdownBehavior" />
          <Validator val="PayloadHasReverseBehavior" />
          <Validator val="PayloadHasAlly1Behavior" />
          <Validator val="PayloadHasAlly2Behavior" />
          <Validator val="PayloadHasAlly3Behavior" />
          <Validator val="PayloadHasAlly1BehaviorAtDestination" />
          <Validator val="PayloadHasAlly2BehaviorAtDestination" />
          <Validator val="PayloadHasAlly3BehaviorAtDestination" />
          <StateGroup name="RightRedPath1ProgressStateGroup">
            <State name="StartLocation">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasStartLocationBehavior" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator1" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath1" event="OnArrowScrollSpeed0" />
            </State>
            <State name="ReverseCountdown">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasReverseCountdownBehavior" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator1" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath1" event="OnArrowScrollSpeed0" />
            </State>
            <State name="Reverse">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasReverseBehavior" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator1" group="ArrowIndicators" state="ReverseRight" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath1" event="OnArrowScrollSpeed0" />
            </State>
            <State name="HasAlly1">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly1Behavior" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator1" group="ArrowIndicators" state="Left1" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath1" event="OnArrowScrollSpeed1" />
            </State>
            <State name="HasAlly2">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly2Behavior" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator1" group="ArrowIndicators" state="Left2" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath1" event="OnArrowScrollSpeed2" />
            </State>
            <State name="HasAlly3">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly3Behavior" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator1" group="ArrowIndicators" state="Left3" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath1" event="OnArrowScrollSpeed3" />
            </State>
            <State name="HasAlly1AtDestination">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly1BehaviorAtDestination" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator1" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/RightPathIndicator1" event="Hide" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath1" event="ProgressComplete" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath1" event="OnArrowScrollSpeed0" />
            </State>
            <State name="HasAlly2AtDestination">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly2BehaviorAtDestination" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator1" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/RightPathIndicator1" event="Hide" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath1" event="ProgressComplete" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath1" event="OnArrowScrollSpeed0" />
            </State>
            <State name="HasAlly3AtDestination">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly3BehaviorAtDestination" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator1" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/RightPathIndicator1" event="Hide" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath1" event="ProgressComplete" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath1" event="OnArrowScrollSpeed0" />
            </State>
            <State name="NoState">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="NoState" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator1" group="ArrowIndicators" state="NoState" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath1" event="OnArrowScrollSpeed0" />
            </State>
          </StateGroup>
        </Frame>
      </Frame>
      <Frame type="UnitStatusFrame" name="ChaosProgressUnitStatusPath2">
        <Anchor relative="$parent" />
        <Frame type="UnitStatusValidatorAnimElement" name="MovementAnims">
          <Anchor relative="$parent" />
          <Validator val="PayloadHasStartLocationBehavior" />
          <Validator val="PayloadHasReverseCountdownBehavior" />
          <Validator val="PayloadHasReverseBehavior" />
          <Validator val="PayloadHasAlly1Behavior" />
          <Validator val="PayloadHasAlly2Behavior" />
          <Validator val="PayloadHasAlly3Behavior" />
          <Validator val="PayloadHasAlly1BehaviorAtDestination" />
          <Validator val="PayloadHasAlly2BehaviorAtDestination" />
          <Validator val="PayloadHasAlly3BehaviorAtDestination" />
          <StateGroup name="RightRedPath2ProgressStateGroup">
            <State name="StartLocation">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasStartLocationBehavior" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator2" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath2" event="OnArrowScrollSpeed0" />
            </State>
            <State name="ReverseCountdown">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasReverseCountdownBehavior" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator2" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath2" event="OnArrowScrollSpeed0" />
            </State>
            <State name="Reverse">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasReverseBehavior" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator2" group="ArrowIndicators" state="ReverseRight" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath2" event="OnArrowScrollSpeed0" />
            </State>
            <State name="HasAlly1">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly1Behavior" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator2" group="ArrowIndicators" state="Left1" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath2" event="OnArrowScrollSpeed1" />
            </State>
            <State name="HasAlly2">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly2Behavior" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator2" group="ArrowIndicators" state="Left2" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath2" event="OnArrowScrollSpeed2" />
            </State>
            <State name="HasAlly3">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly3Behavior" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator2" group="ArrowIndicators" state="Left3" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath2" event="OnArrowScrollSpeed3" />
            </State>
            <State name="HasAlly1AtDestination">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly1BehaviorAtDestination" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator2" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/RightPathIndicator2" event="Hide" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath2" event="ProgressComplete" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath2" event="OnArrowScrollSpeed1" />
            </State>
            <State name="HasAlly2AtDestination">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly2BehaviorAtDestination" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator2" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/RightPathIndicator2" event="Hide" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath2" event="ProgressComplete" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath2" event="OnArrowScrollSpeed2" />
            </State>
            <State name="HasAlly3AtDestination">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="PayloadHasAlly3BehaviorAtDestination" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator2" group="ArrowIndicators" state="Movement0" />
              <Action type="SendEvent" frame="$parent/$parent/RightPathIndicator2" event="Hide" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath2" event="ProgressComplete" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath2" event="OnArrowScrollSpeed3" />
            </State>
            <State name="NoState">
              <When type="AnimationState" frame="$this" UnitStatusValidatorState="NoState" />
              <Action type="SetState" frame="$parent/$parent/RightPathIndicator2" group="ArrowIndicators" state="NoState" />
              <Action type="SendEvent" frame="$parent/$parent/PayloadBarRightPath2" event="OnArrowScrollSpeed0" />
            </State>
          </StateGroup>
        </Frame>
      </Frame>
    </Frame>
    <Frame type="Frame" name="BlockedLabelFrame">
      <Anchor relative="$parent/PayloadPanel" />
      <Height val="120" />
      <Width val="120" />
      <Visible val="False" />
      <Animation name="ShowBlockedLabelFrame">
        <Event event="OnShown" action="Reset,Play" />
        <Controller type="Fade" end="Pause">
          <Key type="Curve" time="0" value="0" inout="Linear" />
          <Key type="Curve" time=".25" value="255" inout="Linear" />
        </Controller>
      </Animation>
      <Frame type="Image" name="BlockedIcon">
        <Anchor side="Top" relative="$parent/BlockedLabel" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent/BlockedLabel" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/BlockedLabel" pos="Min" offset="0" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Icon_Blocked_small" />
      </Frame>
      <Frame type="Label" name="BlockedLabel">
        <Anchor side="Top" relative="$parent" pos="Min" offset="25" />
        <Anchor side="Left" relative="$parent" pos="Mid" offset="8" />
        <Anchor side="Right" relative="$parent" pos="Mid" offset="8" />
        <Style val="Storm_Map_Hanamura_Blocked" />
        <Text val="@UI/HanamuraPayload_Blocked" />
      </Frame>
    </Frame>
    <Frame type="Frame" name="ContestedFrame">
      <Anchor relative="$parent/PayloadPanel" />
      <Visible val="False" />
      <Animation name="ShowBlockedLabelFrame">
        <Event event="OnShown" action="Reset,Play" />
        <Controller type="Fade" end="Pause">
          <Key type="Curve" time="0" value="0" inout="Linear" />
          <Key type="Curve" time=".25" value="255" inout="Linear" />
        </Controller>
      </Animation>
      <Frame type="Label" name="ContestedLabel">
        <Anchor side="Top" relative="$parent" pos="Max" offset="-60" />
        <Anchor side="Left" relative="$parent/$parent/PayloadPanel" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/$parent/PayloadPanel" pos="Mid" offset="0" />
        <Text val="@UI/HanamuraPayload_Contested" />
        <Style val="Storm_Map_Hanamura_Contested" />
      </Frame>
      <Frame type="Image" name="ContestedArrowRight">
        <Anchor side="Top" relative="$parent/ContestedLabel" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent/ContestedLabel" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent/ContestedLabel" pos="Max" offset="0" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Arrow" />
        <Animation name="Pulse">
          <Event event="OnShown" action="Reset,Play" />
          <Controller type="Anchor" end="PingPong" side="Left" relative="true">
            <Key type="Curve" time="0" value="0" inout="Linear" />
            <Key type="Curve" time=".5 " value="2" inout="Linear" />
          </Controller>
        </Animation>
      </Frame>
      <Frame type="Image" name="ContestedArrowLeft">
        <Anchor side="Top" relative="$parent/ContestedLabel" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent/ContestedLabel" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/ContestedLabel" pos="Min" offset="0" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_White_Arrow" />
        <TextureCoords top="0" left="1.0" bottom="1.0" right="0.0" />
        <Animation name="Pulse">
          <Event event="OnShown" action="Reset,Play" />
          <Controller type="Anchor" end="PingPong" side="Right" relative="true">
            <Key type="Curve" time="0" value="0" inout="Linear" />
            <Key type="Curve" time=".5 " value="-2" inout="Linear" />
          </Controller>
        </Animation>
      </Frame>
    </Frame>
    <Frame type="Frame" name="TopPayloadsBlockedFrame">
      <Anchor relative="$parent" />
      <Visible val="False" />
      <Frame type="Image" name="TopPayloadBarBlockedBG">
        <Anchor side="Top" relative="$parent/$parent/PayloadPanel" pos="Mid" offset="-20" />
        <Anchor side="Bottom" relative="$parent/$parent/PayloadPanel" pos="Mid" offset="-20" />
        <Anchor side="Left" relative="$parent/$parent/PayloadPanel" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/$parent/PayloadPanel" pos="Mid" offset="0" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Icon_Blocked_Bg_black" />
      </Frame>
      <Frame type="Image" name="TopPayloadBarBlocked">
        <Anchor side="Top" relative="$parent/TopPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent/TopPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent/TopPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/TopPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Icon_Blocked" />
      </Frame>
      <Frame type="Image" name="TopPayloadBarBlockedLeftBar">
        <Anchor side="Top" relative="$parent/TopPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent/TopPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent/TopPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/TopPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Visible val="False" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Icon_Blocked_Bg_Line" />
        <TextureCoords top="1" left="0.0" bottom="0.0" right="1.0" />
      </Frame>
      <Frame type="Image" name="TopPayloadBarBlockedRightBar">
        <Anchor side="Top" relative="$parent/TopPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent/TopPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent/TopPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/TopPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Visible val="False" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Icon_Blocked_Bg_Line" />
        <TextureCoords top="1" left="1.0" bottom="0.0" right="0.0" />
      </Frame>
    </Frame>
    <Frame type="Frame" name="BottomPayloadsBlockedFrame">
      <Anchor relative="$parent/PayloadPanel" />
      <Visible val="False" />
      <Frame type="Image" name="BottomPayloadBarBlockedBG">
        <Anchor side="Top" relative="$parent/$parent/PayloadPanel" pos="Mid" offset="20" />
        <Anchor side="Bottom" relative="$parent/$parent/PayloadPanel" pos="Mid" offset="20" />
        <Anchor side="Left" relative="$parent/$parent/PayloadPanel" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/$parent/PayloadPanel" pos="Mid" offset="0" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Icon_Blocked_Bg_black" />
      </Frame>
      <Frame type="Image" name="BottomPayloadBarBlocked">
        <Anchor side="Top" relative="$parent/BottomPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent/BottomPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent/BottomPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/BottomPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Icon_Blocked" />
      </Frame>
      <Frame type="Image" name="BottomPayloadBarBlockedLeftBar">
        <Anchor side="Top" relative="$parent/BottomPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent/BottomPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent/BottomPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/BottomPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Visible val="False" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Icon_Blocked_Bg_Line" />
      </Frame>
      <Frame type="Image" name="BottomPayloadBarBlockedRightBar">
        <Anchor side="Top" relative="$parent/BottomPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Anchor side="Bottom" relative="$parent/BottomPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Anchor side="Left" relative="$parent/BottomPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Anchor side="Right" relative="$parent/BottomPayloadBarBlockedBG" pos="Mid" offset="0" />
        <Visible val="False" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Icon_Blocked_Bg_Line" />
        <TextureCoords top="0" left="1.0" bottom="1.0" right="0.0" />
      </Frame>
    </Frame>
    <Frame type="Frame" name="PayloadSpawningFrameBoth" template="MapMechanicPanel/NotificationFrameTemplate">
      <Anchor side="Bottom" relative="$parent/PayloadPanel" pos="Min" offset="15" />
      <Anchor side="Right" relative="$parent" pos="Max" offset="0" />
      <Animation name="ChangeAnchor">
        <Event event="ChangeAnchor" action="Play" />
        <Controller type="Anchor" end="Pause" side="Bottom" relative="true">
          <Key type="Curve" time="0" value="128" inout="Linear" />
          <Key type="Curve" time="29" value="128" inout="Linear" />
          <Key type="Curve" time="30" value="0" inout="Linear" />
        </Controller>
      </Animation>
      <Frame type="Image" name="NotificationIcon">
        <Anchor side="Top" relative="$parent/NotificationIconAnchor" pos="Mid" offset="-1" />
        <Anchor side="Bottom" relative="$parent/NotificationIconAnchor" pos="Mid" offset="-1" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Hex_Notification" />
        <Unclipped val="True" />
        <Frame type="Image" name="Shine">
          <Alpha val="0" />
        </Frame>
      </Frame>
      <Frame type="Label" name="NotificationLabel">
        <Text val="Payload Spawning" />
      </Frame>
      <Frame type="Label" name="TimerLabel">
        <Anchor side="Left" relative="$parent/NotificationIconAnchor" pos="Mid" offset="20" />
        <Anchor side="Right" relative="$parent/NotificationIconAnchor" pos="Mid" offset="20" />
        <Anchor side="Bottom" relative="$parent/NotificationIcon" pos="Max" offset="-5" />
        <Style val="Storm_MapMechanic_MechanicTimerCentered_Blue_Small" />
        <Text val="88:88" />
        <Unclipped val="True" />
      </Frame>
    </Frame>
    <Frame type="Frame" name="AttackingCoreFrameOrder" template="MapMechanicPanel/NotificationFrameTemplate">
      <Anchor side="Bottom" relative="$parent/PayloadSpawningFrameBoth" pos="Min" offset="0" />
      <Anchor side="Right" relative="$parent" pos="Max" offset="0" />
      <Frame type="Image" name="NotificationIcon">
        <Anchor side="Top" relative="$parent/NotificationIconAnchor" pos="Mid" offset="11" />
        <Anchor side="Bottom" relative="$parent/NotificationIconAnchor" pos="Mid" offset="11" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Hex_Missile_Blue" />
        <Frame type="Image" name="Shine">
          <Alpha val="0" />
        </Frame>
        <StateGroup name="TextureChoice">
          <State name="Orange">
            <When type="StateGroup" frame="$GameUI/TeamOrderColors" TextureColor="TextureOrange" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Hex_Missile_Orange" />
          </State>
          <State name="Cyan">
            <When type="StateGroup" frame="$GameUI/TeamOrderColors" TextureColor="TextureCyan" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Hex_Missile_Cyan" />
          </State>
          <State name="Red">
            <When type="StateGroup" frame="$GameUI/TeamOrderColors" TextureColor="TextureRed" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Hex_Missile_Red" />
          </State>
          <State name="Blue">
            <When type="StateGroup" frame="$GameUI/TeamOrderColors" TextureColor="TextureBlue" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Hex_Missile_Blue" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Label" name="NotificationLabel">
        <Text val="@UI/HanamuraPayload_AttackingEnemyCore" />
        <Style val="Storm_MapMechanic_MechanicTimerCentered_Blue" />
        <GlowColor val="{$GameUI/TeamOrderColors/@Color}" />
        <ColorAdjustMode val="Colorize" />
        <LightAdjustColor val="#ColorWhite" />
        <DarkAdjustColor val="{$GameUI/TeamOrderColors/@Color}" />
      </Frame>
    </Frame>
    <Frame type="Frame" name="AttackingCoreFrameChaos" template="MapMechanicPanel/NotificationFrameTemplate">
      <Anchor side="Bottom" relative="$parent/AttackingCoreFrameOrder" pos="Min" offset="0" />
      <Anchor side="Right" relative="$parent" pos="Max" offset="0" />
      <Frame type="Image" name="NotificationIcon">
        <Anchor side="Top" relative="$parent/NotificationIconAnchor" pos="Mid" offset="11" />
        <Anchor side="Bottom" relative="$parent/NotificationIconAnchor" pos="Mid" offset="11" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Hex_Missile_Red" />
        <Frame type="Image" name="Shine">
          <Alpha val="0" />
        </Frame>
        <StateGroup name="TextureChoice">
          <State name="Orange">
            <When type="StateGroup" frame="$GameUI/TeamChaosColors" TextureColor="TextureOrange" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Hex_Missile_Orange" />
          </State>
          <State name="Cyan">
            <When type="StateGroup" frame="$GameUI/TeamChaosColors" TextureColor="TextureCyan" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Hex_Missile_Cyan" />
          </State>
          <State name="Red">
            <When type="StateGroup" frame="$GameUI/TeamChaosColors" TextureColor="TextureRed" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Hex_Missile_Red" />
          </State>
          <State name="Blue">
            <When type="StateGroup" frame="$GameUI/TeamChaosColors" TextureColor="TextureBlue" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Hex_Missile_Blue" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Label" name="NotificationLabel">
        <Text val="@UI/HanamuraPayload_AttackingEnemyCore" />
        <Style val="Storm_MapMechanic_MechanicTimerCentered_Blue" />
        <GlowColor val="{$GameUI/TeamChaosColors/@Color}" />
        <ColorAdjustMode val="Colorize" />
        <LightAdjustColor val="#ColorWhite" />
        <DarkAdjustColor val="{$GameUI/TeamChaosColors/@Color}" />
      </Frame>
    </Frame>
    <Frame type="Frame" name="PotentialPointsPanel" template="MapMechanicPanel/TeamCollectionFrameTemplate">
      <Frame type="Label" name="PotentialPointsTitle" template="StandardTemplates/RemoveThisFrameTemplate" />
      <Animation name="Team1Empowered">
        <Event event="Team1Empowered" action="Reset,Play" />
        <Controller type="Visibility" end="Pause" frame="Team1CollectionIcon/Team1CollectionIconEmpowered">
          <Key type="Bool" time="0" value="True" />
        </Controller>
        <Controller type="Visibility" end="Pause" frame="Team1CollectionAltIcon/Team1CollectionAltIconEmpowered">
          <Key type="Bool" time="0" value="True" />
        </Controller>
      </Animation>
      <Animation name="Team2Empowered">
        <Event event="Team2Empowered" action="Reset,Play" />
        <Controller type="Visibility" end="Pause" frame="Team2CollectionIcon/Team2CollectionIconEmpowered">
          <Key type="Bool" time="0" value="True" />
        </Controller>
        <Controller type="Visibility" end="Pause" frame="Team2CollectionAltIcon/Team2CollectionAltIconEmpowered">
          <Key type="Bool" time="0" value="True" />
        </Controller>
      </Animation>
      <Animation name="Team1NotEmpowered">
        <Event event="Team1NotEmpowered" action="Reset,Play" />
        <Controller type="Visibility" end="Pause" frame="Team1CollectionIcon/Team1CollectionIconEmpowered">
          <Key type="Bool" time="0" value="False" />
        </Controller>
        <Controller type="Visibility" end="Pause" frame="Team1CollectionAltIcon/Team1CollectionAltIconEmpowered">
          <Key type="Bool" time="0" value="False" />
        </Controller>
      </Animation>
      <Animation name="Team2NotEmpowered">
        <Event event="Team2NotEmpowered" action="Reset,Play" />
        <Controller type="Visibility" end="Pause" frame="Team2CollectionIcon/Team2CollectionIconEmpowered">
          <Key type="Bool" time="0" value="False" />
        </Controller>
        <Controller type="Visibility" end="Pause" frame="Team2CollectionAltIcon/Team2CollectionAltIconEmpowered">
          <Key type="Bool" time="0" value="False" />
        </Controller>
      </Animation>
      <Frame type="Frame" name="AnchorPointFrame">
        <Anchor side="Left" relative="$parent/$parent/$parent/$parent/MinimapPanel/Minimap" pos="Mid" offset="11" />
        <Anchor side="Right" relative="$parent/$parent/$parent/$parent/MinimapPanel/Minimap" pos="Mid" offset="11" />
      </Frame>
      <Frame type="Image" name="Team1CollectionIcon">
        <Anchor side="Bottom" relative="$parent/Team1Background" pos="Max" offset="80" />
        <Anchor side="Left" relative="$parent/Team1Background" pos="Min" offset="-110" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Blue" />
        <RenderPriority val="600" />
        <Frame type="Image" name="Team1CollectionIconEmpowered">
          <Anchor relative="$parent" />
          <Visible val="False" />
          <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Blue" />
          <RenderPriority val="599" />
          <Animation name="OnShown">
            <Event event="OnShown" action="Restart,Play" />
            <Controller type="Fade" end="PingPong">
              <Key type="Curve" time="0" value="0" inout="Linear,Slow" />
              <Key type="Curve" time="0.5" value="255" inout="Slow,Linear" />
            </Controller>
          </Animation>
        </Frame>
        <StateGroup name="TextureChoice">
          <State name="Orange">
            <When type="StateGroup" frame="$GameUI/TeamOrderColors" TextureColor="TextureOrange" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Orange" />
            <Action type="SetProperty" frame="Team1CollectionIconEmpowered" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Orange" />
          </State>
          <State name="Cyan">
            <When type="StateGroup" frame="$GameUI/TeamOrderColors" TextureColor="TextureCyan" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Cyan" />
            <Action type="SetProperty" frame="Team1CollectionIconEmpowered" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Cyan" />
          </State>
          <State name="Red">
            <When type="StateGroup" frame="$GameUI/TeamOrderColors" TextureColor="TextureRed" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Red" />
            <Action type="SetProperty" frame="Team1CollectionIconEmpowered" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Red" />
          </State>
          <State name="Blue">
            <When type="StateGroup" frame="$GameUI/TeamOrderColors" TextureColor="TextureBlue" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Blue" />
            <Action type="SetProperty" frame="Team1CollectionIconEmpowered" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Blue" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Image" name="Team1CollectionAltIcon">
        <Anchor side="Bottom" relative="$parent/Team1Background" pos="Max" offset="80" />
        <Anchor side="Left" relative="$parent/Team1Background" pos="Min" offset="-110" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Blue" />
        <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" />
        <RenderPriority val="600" />
        <Frame type="Image" name="Team1CollectionAltIconEmpowered">
          <Anchor relative="$parent" />
          <Visible val="False" />
          <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Blue" />
          <RenderPriority val="599" />
          <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" />
          <Animation name="OnShown">
            <Event event="OnShown" action="Restart,Play" />
            <Controller type="Fade" end="PingPong">
              <Key type="Curve" time="0" value="0" inout="Linear,Slow" />
              <Key type="Curve" time="0.5" value="255" inout="Slow,Linear" />
            </Controller>
          </Animation>
        </Frame>
        <StateGroup name="TextureChoice">
          <State name="Orange">
            <When type="StateGroup" frame="$GameUI/TeamOrderColors" TextureColor="TextureOrange" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Orange" />
            <Action type="SetProperty" frame="Team1CollectionAltIconEmpowered" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Orange" />
          </State>
          <State name="Cyan">
            <When type="StateGroup" frame="$GameUI/TeamOrderColors" TextureColor="TextureCyan" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Cyan" />
            <Action type="SetProperty" frame="Team1CollectionAltIconEmpowered" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Cyan" />
          </State>
          <State name="Red">
            <When type="StateGroup" frame="$GameUI/TeamOrderColors" TextureColor="TextureRed" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Red" />
            <Action type="SetProperty" frame="Team1CollectionAltIconEmpowered" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Red" />
          </State>
          <State name="Blue">
            <When type="StateGroup" frame="$GameUI/TeamOrderColors" TextureColor="TextureBlue" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Blue" />
            <Action type="SetProperty" frame="Team1CollectionAltIconEmpowered" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Blue" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Image" name="Team2CollectionIcon">
        <Anchor side="Bottom" relative="$parent/Team2Background" pos="Max" offset="80" />
        <Anchor side="Right" relative="$parent/Team2Background" pos="Max" offset="110" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Red" />
        <RenderPriority val="600" />
        <Frame type="Image" name="Team2CollectionIconEmpowered">
          <Anchor relative="$parent" />
          <Visible val="False" />
          <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Red" />
          <RenderPriority val="599" />
          <Animation name="OnShown">
            <Event event="OnShown" action="Restart,Play" />
            <Controller type="Fade" end="PingPong">
              <Key type="Curve" time="0" value="0" inout="Linear,Slow" />
              <Key type="Curve" time="0.5" value="255" inout="Slow,Linear" />
            </Controller>
          </Animation>
        </Frame>
        <StateGroup name="TextureChoice">
          <State name="Orange">
            <When type="StateGroup" frame="$GameUI/TeamChaosColors" TextureColor="TextureOrange" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Orange" />
            <Action type="SetProperty" frame="Team2CollectionIconEmpowered" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Orange" />
          </State>
          <State name="Cyan">
            <When type="StateGroup" frame="$GameUI/TeamChaosColors" TextureColor="TextureCyan" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Cyan" />
            <Action type="SetProperty" frame="Team2CollectionIconEmpowered" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Cyan" />
          </State>
          <State name="Red">
            <When type="StateGroup" frame="$GameUI/TeamChaosColors" TextureColor="TextureRed" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Red" />
            <Action type="SetProperty" frame="Team2CollectionIconEmpowered" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Red" />
          </State>
          <State name="Blue">
            <When type="StateGroup" frame="$GameUI/TeamChaosColors" TextureColor="TextureBlue" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Blue" />
            <Action type="SetProperty" frame="Team2CollectionIconEmpowered" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Blue" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Image" name="Team2CollectionAltIcon">
        <Anchor side="Bottom" relative="$parent/Team2Background" pos="Max" offset="80" />
        <Anchor side="Right" relative="$parent/Team2Background" pos="Max" offset="110" />
        <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Red" />
        <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" />
        <RenderPriority val="600" />
        <Frame type="Image" name="Team2CollectionAltIconEmpowered">
          <Anchor relative="$parent" />
          <Visible val="False" />
          <Texture val="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Red" />
          <RenderPriority val="599" />
          <TextureCoords top="0.0" left="1.0" bottom="1.0" right="0.0" />
          <Animation name="OnShown">
            <Event event="OnShown" action="Restart,Play" />
            <Controller type="Fade" end="PingPong">
              <Key type="Curve" time="0" value="0" inout="Linear,Slow" />
              <Key type="Curve" time="0.5" value="255" inout="Slow,Linear" />
            </Controller>
          </Animation>
        </Frame>
        <StateGroup name="TextureChoice">
          <State name="Orange">
            <When type="StateGroup" frame="$GameUI/TeamChaosColors" TextureColor="TextureOrange" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Orange" />
            <Action type="SetProperty" frame="Team2CollectionAltIconEmpowered" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Orange" />
          </State>
          <State name="Cyan">
            <When type="StateGroup" frame="$GameUI/TeamChaosColors" TextureColor="TextureCyan" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Cyan" />
            <Action type="SetProperty" frame="Team2CollectionAltIconEmpowered" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Cyan" />
          </State>
          <State name="Red">
            <When type="StateGroup" frame="$GameUI/TeamChaosColors" TextureColor="TextureRed" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Red" />
            <Action type="SetProperty" frame="Team2CollectionAltIconEmpowered" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Red" />
          </State>
          <State name="Blue">
            <When type="StateGroup" frame="$GameUI/TeamChaosColors" TextureColor="TextureBlue" />
            <Action type="SetProperty" frame="$this" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_normal_Blue" />
            <Action type="SetProperty" frame="Team2CollectionAltIconEmpowered" Texture="@UI/Storm_UI_HUD_Minimap_Hanamura_Dragon_Missile_Empower_Blue" />
          </State>
        </StateGroup>
      </Frame>
      <Frame type="Label" name="Team1CollectionCounter">
        <Anchor side="Left" relative="$this" pos="Max" offset="0" />
        <Anchor side="Right" relative="$parent/Team1Background" pos="Max" offset="-25" />
        <Style val="Storm_MapMechanic_MechanicCounterLeft_Blue" />
        <Text val="x" />
        <GlowColor val="{$GameUI/TeamOrderColors/@Color}" />
        <ColorAdjustMode val="Colorize" />
        <LightAdjustColor val="#ColorWhite" />
        <DarkAdjustColor val="{$GameUI/TeamOrderColors/@Color}" />
      </Frame>
      <Frame type="Label" name="Team2CollectionCounter">
        <Anchor side="Left" relative="$parent/Team2Background" pos="Min" offset="25" />
        <Anchor side="Right" relative="$this" pos="Min" offset="0" />
        <Style val="Storm_MapMechanic_MechanicCounterRight_Blue" />
        <Text val="x" />
        <GlowColor val="{$GameUI/TeamChaosColors/@Color}" />
        <ColorAdjustMode val="Colorize" />
        <LightAdjustColor val="#ColorWhite" />
        <DarkAdjustColor val="{$GameUI/TeamChaosColors/@Color}" />
      </Frame>
      <Frame type="Label" name="LeftPotentialPoints">
        <Anchor side="Bottom" relative="$parent/Team1CollectionCounter" pos="Max" offset="0" />
        <Anchor side="Right" relative="$parent/Team1CollectionCounter" pos="Min" offset="3" />
        <Style val="Storm_MapMechanic_MechanicCounterLeft_Blue" />
        <Text val="1" />
        <GlowColor val="{$GameUI/TeamOrderColors/@Color}" />
        <ColorAdjustMode val="Colorize" />
        <LightAdjustColor val="#ColorWhite" />
        <DarkAdjustColor val="{$GameUI/TeamOrderColors/@Color}" />
      </Frame>
      <Frame type="Label" name="RightPotentialPoints">
        <Anchor side="Bottom" relative="$parent/Team2CollectionCounter" pos="Max" offset="0" />
        <Anchor side="Left" relative="$parent/Team2CollectionCounter" pos="Max" offset="-3" />
        <Style val="Storm_MapMechanic_MechanicCounterRight_Blue" />
        <Text val="1" />
        <GlowColor val="{$GameUI/TeamChaosColors/@Color}" />
        <ColorAdjustMode val="Colorize" />
        <LightAdjustColor val="#ColorWhite" />
        <DarkAdjustColor val="{$GameUI/TeamChaosColors/@Color}" />
      </Frame>
    </Frame>
  </Frame>
  <Frame type="UnitStatusHealthLabel" name="GameUI/UIContainer/ConsoleUIContainer/PartyFramePanel/Team1CoreUnitStatus/HealthLabel" file="GameUI">
    <ShowPercent val="False" />
    <HideMax val="true" />
  </Frame>
  <Frame type="UnitStatusHealthLabel" name="GameUI/UIContainer/ConsoleUIContainer/PartyFramePanel/Team2CoreUnitStatus/HealthLabel" file="GameUI">
    <ShowPercent val="False" />
    <HideMax val="true" />
  </Frame>
  <Frame type="MinimapPanel" name="GameUI/UIContainer/ConsoleUIContainer/MinimapPanel" file="GameUI">
    <Anchor side="Bottom" relative="$parent" pos="Max" offset="20" />
    <Anchor side="Right" relative="$parent" pos="Max" offset="-5" />
  </Frame>
</Desc>