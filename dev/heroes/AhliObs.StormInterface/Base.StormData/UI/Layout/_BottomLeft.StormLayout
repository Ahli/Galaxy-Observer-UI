<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Desc>
	<!-- created by Ahli
			twitter.com/AhliSC2 -->
	
	<!-- The debugger... are there no better tools?
	<Frame type="Image" name="QQQ">
		<Anchor relative="$parent"/>
		<Texture val="_Assets\Textures\QQQ.dds"/>
		<Alpha val="128"/>
	</Frame>
	 -->
	
	<Constant name="commandButtonWidth" val="52"/>
	<Constant name="commandButtonHeight" val="52"/>
	<Constant name="commandButtonDfltBorderWidth" val="68"/>
	<Constant name="commandButtonDfltBorderHeight" val="68"/>
	<Constant name="commandButtonActivateEffectWidth" val="60"/>
	<Constant name="commandButtonActivateEffectHeight" val="60"/>
	<Constant name="commandButtonWidthAlt" val="82"/>
	<Constant name="commandButtonGap" val="-5"/>
	<Constant name="commandButtonGapMOUNT" val="-8"/>
	<Constant name="chargeRightOffset" val="-2"/>
	<Constant name="chargeBgWidth" val="26"/>
	<Constant name="chargeBgHeight" val="26"/>
	<Constant name="chargeCooldownProgressWidth" val="38"/>
	<Constant name="chargeCooldownProgressHeight" val="38"/>
	
	
	
	<Frame type="UnitStatusValidatorAnimElement" name="UnitStatusDebuffTemplate">
		<Width val="183"/>
		<Height val="52"/>
		<CollapseLayout val="true"/>
		<Visible val="false"/>

		<Frame type="Image" name="DebuffPlateBg">
			<Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
			<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
			<Texture val="@UI/State/GenericStateBG"/>
			<Unclipped val="true"/>
		</Frame>
		<Frame type="Image" name="DebuffIconLeft">
			<Anchor side="Top" relative="$parent/DebuffPlateBg" pos="Mid" offset="0"/>
			<Anchor side="Bottom" relative="$parent/DebuffPlateBg" pos="Mid" offset="0"/>
			<Anchor side="Right" relative="$parent/DebuffLabel" pos="Min" offset="2"/>
			<Width val="36"/>
			<Height val="36"/>
			<Unclipped val="true"/>
		</Frame>
		<Frame type="Label" name="DebuffLabel">
			<Anchor side="Top" relative="$parent/DebuffPlateBg" pos="Mid" offset="0"/>
			<Anchor side="Left" relative="$parent/DebuffPlateBg" pos="Mid" offset="11"/>
			<Anchor side="Bottom" relative="$parent/DebuffPlateBg" pos="Mid" offset="0"/>
			<Anchor side="Right" relative="$parent/DebuffPlateBg" pos="Mid" offset="11"/>
			<Style val="TalentChoiceAlertNameplateLabel"/>
			<Unclipped val="true"/>
		</Frame>
	</Frame>
	
	<Frame type="UnitStatusLabel" name="UnitStatusLabelTemplate">
        <Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
        <Width val="123"/>
        <Height val="27"/>
        <ShowGrouping val="true"/>
        <RoundMode val="None"/>
        <Frame type="Label" name="StatusLabel">
            <Anchor relative="$parent"/>
            <Style val="HeroStatDescriptionLabel"/>
        </Frame>
    </Frame>
	
	<Frame type="Image" name="EmptyDynamicButtonTemplate">
		<Width val="#commandButtonWidth"/>
		<Height val="#commandButtonHeight"/>
		<Alpha val="0"/>
	</Frame>
	<Frame type="CommandButton" name="DynamicButtonTemplate">
		<Width val="#commandButtonWidth"/>
		<Height val="#commandButtonHeight"/>
		<Draggable val="false" />
		<Frame type="CommandHotkeyFrame" name="HotkeyFrame">
			<Frame type="Label" name="HotkeyLabel">
				<Alpha val="0"/>
			</Frame>
		</Frame>
		<Frame type="Label" name="CooldownLabel">
			<Anchor side="Left" relative="$parent" pos="Min" offset="0" />
			<Anchor side="Right" relative="$parent" pos="Max" offset="0" />
			<Style val="AhliGameButtonCooldown"/>
		</Frame>
		<Frame type="Label" name="ChargeLabel">
			<Style val="AhliCommandPanelChargeLabel"/>
			<Unclipped val="true"/>
			<RenderPriority val="600"/>
		</Frame>
		<Frame type="Image" name="ChargeBackground">
			<Anchor side="Bottom" relative="$parent" pos="Max" offset="3"/>
			<Anchor side="Right" relative="$parent" pos="Max" offset="#chargeRightOffset"/>
			<Width val="#chargeBgWidth"/>
			<Height val="#chargeBgHeight"/>
		</Frame>
		<Frame type="Image" name="ChargeCompleteImage">
			<Width val="#chargeBgWidth"/>
			<Height val="#chargeBgHeight"/>
		</Frame>
		<Frame type="ProgressBar" name="ChargeCooldown">
			<Width val="#chargeCooldownProgressWidth"/>
			<Height val="#chargeCooldownProgressHeight"/>
			<Unclipped val="true"/>
		</Frame>
		<Frame type="Image" name="GameButtonDefaultBorder">
		<!-- texture: @@UI/Storm_UI_InGame_AbilityButtonBorder
	UI/Storm_UI_InGame_AbilityButtonBorder=Assets\Textures\storm_ui_ingame_abilitybuttonborder.dds
	132x132
		-->
			<Width val="#commandButtonDfltBorderWidth"/>
			<Height val="#commandButtonDfltBorderHeight"/>
			<Anchor side="Top" relative="$parent/NormalImage" pos="Mid" offset="0"/>
			<Anchor side="Bottom" relative="$parent/NormalImage" pos="Mid" offset="0"/>
		</Frame>
		<Frame type="Frame" name="ActiveEffect">
			<Frame type="Image" name="ActiveEffectImage">
			<!-- texture: @UI/Storm_UI_InGame_AbilityButton_Activate_Add
	UI/Storm_UI_InGame_AbilityButton_Activate_Add=Assets\Textures\storm_ui_ingame_abilitybutton_activate_add.dds
	116x116
			-->
				<Width val="#commandButtonActivateEffectWidth"/>
				<Height val="#commandButtonActivateEffectHeight"/>
				<Unclipped val="true"/>
			</Frame>
			<Frame type="Image" name="ActiveEffect2Image">
			<!-- texture: @UI/Storm_UI_InGame_AbilityButton_Activate_Add
	UI/Storm_UI_InGame_AbilityButton_Activate_Add=Assets\Textures\storm_ui_ingame_abilitybutton_activate_add.dds
	116x116
			-->
				<Width val="#commandButtonActivateEffectWidth"/>
				<Height val="#commandButtonActivateEffectHeight"/>
				<Unclipped val="true"/>
			</Frame>
		</Frame>
		<Frame type="Frame" name="AttentionEffect">
			<Frame type="Image" name="AttentionEffectImage">
				<Width val="#commandButtonActivateEffectWidth"/>
				<Height val="#commandButtonActivateEffectHeight"/>
				<Unclipped val="true"/>
			</Frame>
			<Frame type="Image" name="AttentionEffect2Image">
				<Width val="#commandButtonActivateEffectWidth"/>
				<Height val="#commandButtonActivateEffectHeight"/>
				<Unclipped val="true"/>
			</Frame>
			<Frame type="Image" name="InnerGlowImage">
			<!-- UI/Storm_UI_InGame_AbilityButton_ActivateBorder_Add
	UI/Storm_UI_InGame_AbilityButton_ActivateBorder_Add=Assets\Textures\storm_ui_ingame_abilitybutton_activateborder_add.dds
	116x116
			-->
				<Width val="#commandButtonActivateEffectWidth"/>
				<Height val="#commandButtonActivateEffectHeight"/>
				<Unclipped val="true"/>
			</Frame>
		</Frame>
		<!-- default inset is 10 => 5 -->
		<Frame type="Image" name="NormalImage">
			<Width val="#commandButtonWidth"/>
			<Height val="#commandButtonHeight"/>
		</Frame>
		<Frame type="HeroSpecificContainerPanel" name="ButtonSpecificOverlayPanel">
			<Width val="#commandButtonWidth"/>
			<Height val="#commandButtonHeight"/>
		</Frame>
	</Frame>

	
	
	
	
	<Frame type="Frame" name="GameUI/UIContainer/ConsoleUIContainer" file="GameUI">
		
		<!-- bind position to portrait -->
		<!-- @Override -->
		<Frame type="HeroSpecificContainerPanel" name="HeroSpecificBackgroundStatusContainer">
			<Anchor side="Bottom" relative="$PortraitPanel" pos="Max" offset="0"/>
			<Anchor side="Left" relative="$PortraitPanel" pos="Min" offset="0"/>
		</Frame>
		
		<!-- one area for hero specific UI -->
		<!-- @Override -->
		<Frame type="HeroSpecificContainerPanel" name="HeroSpecificStatusContainer">
			<Handle val="HeroSpecificStatusContainer"/>
			<!-- removes property-binding -->
			<Visible val="true"/>
		</Frame>
		<!-- hero specific fullscreen UI -->
		<!-- @Override -->
		<Frame type="Frame" name="HeroSpecificFullUIModContainer">
			<Handle val="HeroSpecificFullUIModContainer"/>
			<!--<Visible val="false"/>-->
		</Frame>
		
		
		
		<!-- For some reason, this is necessary to make the portraitpanel appear... -->
		<Animation name="ShowPortraitPanel">
			<Event event="OnShown" action="Reset,Play"/>
			<Controller type="Visibility" end="Pause" frame="$PortraitPanel">
				<Key type="Bool" time="1" value="true"/>
			</Controller>
		</Animation>
		
		<!-- portrait panel -->
		<!-- @Override -->
		<Frame type="Frame" name="PortraitPanelContainer">
			<Frame type="PortraitPanel" name="PortraitPanel">
				<Anchor side="Bottom" relative="$UnitSelectionInfoVerticalPositionControl" pos="Min" offset="-240"/>
				<Anchor side="Left" relative="$parent" pos="Min" offset="0"/> <!-- Left anchor controlled by stategroup -->
				<Handle val="PortraitPanel"/>
				<Visible val="true"/>
				
				<Animation name="KeepVisible">
					<Event event="OnHidden" action="Reset,Play"/>
					<Controller type="Visibility" end="Pause">
						<Key type="Bool" time="0" value="true"/>
					</Controller>
				</Animation>
				
				<!-- FIX: because the portrait is sometimes shown and you cannot properly detect that it should be hidden -->
				<StateGroup name="MovePortraitPanelOffscreen">
					<DefaultState val="Other"/>
					<State name="OffScreen_noSelection">
						<When type="Property" frame="$StatusPanelOfSingleSelectedUnit" visible="false"/>
						<Action type="SetAnchor" frame="$PortraitPanel" undo="False" side="Left" relative="$parent" pos="Min" offset="-9999"/>
					</State>
					<State name="OffScreen_replayJump">
						<When type="Property" frame="$ReplayPanel/PreviewMinimapFrame" visible="true"/>
						<Action type="SetAnchor" frame="$PortraitPanel" undo="False" side="Left" relative="$parent" pos="Min" offset="-9999"/>
					</State>
					<State name="OffScreen_hideAllUI">
						<When type="Property" frame="$ToggleAllUI" visible="true"/>
						<Action type="SetAnchor" frame="$PortraitPanel" undo="False" side="Left" relative="$parent" pos="Min" offset="-9999"/>
					</State>
					<State name="Other">
						<Action type="SetAnchor" frame="$PortraitPanel" undo="False" side="Left" relative="$parent" pos="Min" offset="0"/>
					</State>
				</StateGroup>
				
				
				<Frame type="Portrait" name="Portrait">
					<Alpha val="60"/>
					
					<!--<Visible val="{$StatusPanelOfSingleSelectedUnit/@Visible}"/>-->
					
					<StateGroup name="Visibility">
						<DefaultState val="Hide"/>
						<State name="Show">
							<When type="Property" frame="$StatusPanelOfSingleSelectedUnit" visible="true"/>
							<!-- check if UI was hidden e.g. via Control+E -->
							<When type="Property" frame="$ToggleUI" visible="false"/>
							<When type="Property" frame="$ToggleAllUI" visible="false"/>
							<When type="Property" frame="$ReplayPanel/PreviewMinimapFrame" visible="false"/> <!-- does not work, the game seems to override that case -->
							<When type="Property" frame="$ConsoleUIContainer" visible="true"/>
							<Action type="SetProperty" visible="true"/>
							<Action type="SetProperty" frame="$PortraitMaskFrame" visible="true"/>
						</State>
						<State name="Hide">
							<Action type="SetProperty" visible="false"/>
							<Action type="SetProperty" frame="$PortraitMaskFrame" visible="false"/>
						</State>
					</StateGroup>
					
					
					<!-- Changes based on unit type -->
					<StateGroup name="SpecificUnitChanges">
						<State name="HeroSgtHammer">
							<When type="AnimationState" frame="$GameUI/UIContainer/ConsoleUIContainer/CommandPanel" CurrentUnit="HeroSgtHammer"/>
							<Action type="SetProperty" undo="true" Alpha="255"/>
						</State>
					</StateGroup>
					
				</Frame>
				
				
				<Frame type="Image" name="BackgroundImage">
					<Anchor relative="$parent"/>
					<Texture val="_Assets\Textures\hud_bg_portraitframe.dds"/>
					<TextureType val="Normal"/>
					<RenderType val="HDR"/>
					<Visible val="{$parent/Portrait/@Visible}"/>
				</Frame>
			</Frame>
		</Frame>
		
		<!-- @Override -->
		<Frame type="CommandPanel" name="CommandPanel">
			<Anchor side="Left" relative="$PortraitPanel" pos="Min" offset="0"/>
			<Anchor side="Right" relative="$this" pos="Min" offset="0"/>
			<Anchor side="Bottom" relative="$this" pos="Min" offset="0"/>
			<Anchor side="Top" relative="$PortraitPanel/Portrait" pos="Max" offset="0"/>
			<Width val="826"/>
			<Height val="108"/>
			<Visible val="true"/>
			<DisplayCancelCommandCard val="false"/>
			
			<Frame type="CommandTooltip" name="CommandTooltip">
				<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
				<Anchor side="Right" relative="$parent" pos="Min" offset="500"/>
				<Anchor side="Bottom" relative="$parent/CommandButton00" pos="Min" offset="0"/>
			</Frame>
			
			<Frame type="Image" name="MiddleFill">
				<Visible val="false"/>
			</Frame>
			
			<!-- Mount Button - orig width: 98, height: 62 -->
			<Frame type="CommandButton" name="CommandButton04">
				<Anchor side="Bottom" relative="$parent/CommandButton00" pos="Max" offset="0"/>
				<Anchor side="Right" relative="$this" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
				<Width val="#commandButtonWidthAlt"/>
				<Height val="#commandButtonHeight"/>
				<Frame type="CommandHotkeyFrame" name="HotkeyFrame">
					<Frame type="Label" name="HotkeyLabel">
						<Alpha val="0"/>
					</Frame>
				</Frame>
				<Frame type="Label" name="CooldownLabel">
					<Style val="AhliGameButtonCooldown"/>
					<Anchor side="Top" relative="$parent" pos="Min" offset="17"/>
					<Anchor side="Bottom" relative="$parent" pos="Max" offset="-18"/>
					<Anchor side="Left" relative="$parent" pos="Min" offset="25"/>
					<Anchor side="Right" relative="$parent" pos="Max" offset="-18"/>
				</Frame>
				<Frame type="Label" name="ChargeLabel">
					<Style val="AhliCommandPanelChargeLabel"/>
					<Unclipped val="true"/>
					<RenderPriority val="600"/>
				</Frame>
				<Frame type="Image" name="ChargeBackground">
					<Anchor side="Bottom" relative="$parent" pos="Max" offset="3"/>
					<Anchor side="Right" relative="$parent" pos="Max" offset="#chargeRightOffset"/>
					<Width val="#chargeBgWidth"/>
					<Height val="#chargeBgHeight"/>
				</Frame>
				<Frame type="Image" name="ChargeCompleteImage">
					<Width val="#chargeBgWidth"/>
					<Height val="#chargeBgHeight"/>
				</Frame>
				<Frame type="ProgressBar" name="ChargeCooldown">
					<Width val="#chargeCooldownProgressWidth"/>
					<Height val="#chargeCooldownProgressHeight"/>
					<Unclipped val="true"/>
				</Frame>
				<Frame type="Image" name="GameButtonBorderImage">
					<Visible val="false"/>
				</Frame>
			</Frame>
			<!-- orig: width 100, height 100 -->
			<!-- Q -->
			<Frame type="CommandButton" name="CommandButton00">
				<Anchor side="Bottom" relative="$parent" pos="Max" offset="-46"/>
				<Anchor side="Right" relative="$this" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent/CommandButton04" pos="Max" offset="#commandButtonGapMOUNT"/>
				<Width val="#commandButtonWidth"/>
				<Height val="#commandButtonHeight"/>
				<Frame type="CommandHotkeyFrame" name="HotkeyFrame">
					<Frame type="Label" name="HotkeyLabel">
						<Alpha val="0"/>
					</Frame>
				</Frame>
				<Frame type="Label" name="CooldownLabel">
					<Anchor side="Left" relative="$parent" pos="Min" offset="0" />
					<Anchor side="Right" relative="$parent" pos="Max" offset="0" />
					<Style val="AhliGameButtonCooldown"/>
				</Frame>
				<Frame type="Label" name="ChargeLabel">
					<Style val="AhliCommandPanelChargeLabel"/>
					<Unclipped val="true"/>
					<RenderPriority val="600"/>
				</Frame>
				<Frame type="Image" name="ChargeBackground">
					<Anchor side="Bottom" relative="$parent" pos="Max" offset="3"/>
					<Anchor side="Right" relative="$parent" pos="Max" offset="#chargeRightOffset"/>
					<Width val="#chargeBgWidth"/>
					<Height val="#chargeBgHeight"/>
				</Frame>
				<Frame type="Image" name="ChargeCompleteImage">
					<Width val="#chargeBgWidth"/>
					<Height val="#chargeBgHeight"/>
				</Frame>
				<Frame type="ProgressBar" name="ChargeCooldown">
					<Width val="#chargeCooldownProgressWidth"/>
					<Height val="#chargeCooldownProgressHeight"/>
					<Unclipped val="true"/>
				</Frame>
				<Frame type="Image" name="GameButtonDefaultBorder">
				<!-- texture: @@UI/Storm_UI_InGame_AbilityButtonBorder
	UI/Storm_UI_InGame_AbilityButtonBorder=Assets\Textures\storm_ui_ingame_abilitybuttonborder.dds
	132x132
				-->
					<Width val="#commandButtonDfltBorderWidth"/>
					<Height val="#commandButtonDfltBorderHeight"/>
					<Anchor side="Top" relative="$parent/NormalImage" pos="Mid" offset="0"/>
					<Anchor side="Bottom" relative="$parent/NormalImage" pos="Mid" offset="0"/>
				</Frame>
				<Frame type="Frame" name="ActiveEffect">
					<Frame type="Image" name="ActiveEffectImage">
					<!-- texture: @UI/Storm_UI_InGame_AbilityButton_Activate_Add
	UI/Storm_UI_InGame_AbilityButton_Activate_Add=Assets\Textures\storm_ui_ingame_abilitybutton_activate_add.dds
	116x116
					-->
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
					<Frame type="Image" name="ActiveEffect2Image">
					<!-- texture: @UI/Storm_UI_InGame_AbilityButton_Activate_Add
	UI/Storm_UI_InGame_AbilityButton_Activate_Add=Assets\Textures\storm_ui_ingame_abilitybutton_activate_add.dds
	116x116
					-->
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
				</Frame>
				<Frame type="Frame" name="AttentionEffect">
					<Frame type="Image" name="AttentionEffectImage">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
					<Frame type="Image" name="AttentionEffect2Image">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
					<Frame type="Image" name="InnerGlowImage">
					<!-- UI/Storm_UI_InGame_AbilityButton_ActivateBorder_Add
	UI/Storm_UI_InGame_AbilityButton_ActivateBorder_Add=Assets\Textures\storm_ui_ingame_abilitybutton_activateborder_add.dds
	116x116
					-->
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
				</Frame>
				<!-- default inset is 10 => 5 -->
				<Frame type="Image" name="NormalImage">
					<Anchor side="Top" relative="$parent" pos="Min" offset="5"/>
					<Anchor side="Bottom" relative="$parent" pos="Max" offset="-5"/>
					<Anchor side="Left" relative="$parent" pos="Min" offset="5"/>
					<Anchor side="Right" relative="$parent" pos="Max" offset="-5"/>
				</Frame>
				<!-- default inset is 15 => 0 -->
				<Frame type="Frame" name="HitTestFrame">
					<Anchor relative="$parent"/>
				</Frame>
			</Frame>
			<!-- W -->
			<Frame type="CommandButton" name="CommandButton01">
				<Anchor side="Bottom" relative="$parent/CommandButton00" pos="Max" offset="0"/>
				<Anchor side="Right" relative="$this" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent\CommandButton00" pos="Max" offset="#commandButtonGap"/>
				<Width val="#commandButtonWidth"/>
				<Height val="#commandButtonHeight"/>
				<Frame type="CommandHotkeyFrame" name="HotkeyFrame">
					<Frame type="Label" name="HotkeyLabel">
						<Alpha val="0"/>
					</Frame>
				</Frame>
				<Frame type="Label" name="CooldownLabel">
					<Anchor side="Left" relative="$parent" pos="Min" offset="0" />
					<Anchor side="Right" relative="$parent" pos="Max" offset="0" />
					<Style val="AhliGameButtonCooldown"/>
				</Frame>
				<Frame type="Label" name="ChargeLabel">
					<Style val="AhliCommandPanelChargeLabel"/>
					<Unclipped val="true"/>
					<RenderPriority val="600"/>
				</Frame>
				<Frame type="Image" name="ChargeBackground">
					<Anchor side="Bottom" relative="$parent" pos="Max" offset="3"/>
					<Anchor side="Right" relative="$parent" pos="Max" offset="#chargeRightOffset"/>
					<Width val="#chargeBgWidth"/>
					<Height val="#chargeBgHeight"/>
				</Frame>
				<Frame type="Image" name="ChargeCompleteImage">
					<Width val="#chargeBgWidth"/>
					<Height val="#chargeBgHeight"/>
				</Frame>
				<Frame type="ProgressBar" name="ChargeCooldown">
					<Width val="#chargeCooldownProgressWidth"/>
					<Height val="#chargeCooldownProgressHeight"/>
					<Unclipped val="true"/>
				</Frame>
				<Frame type="Image" name="GameButtonDefaultBorder">
					<Width val="#commandButtonDfltBorderWidth"/>
					<Height val="#commandButtonDfltBorderHeight"/>
					<Anchor side="Top" relative="$parent/NormalImage" pos="Mid" offset="0"/>
					<Anchor side="Bottom" relative="$parent/NormalImage" pos="Mid" offset="0"/>
				</Frame>
				<Frame type="Frame" name="ActiveEffect">
					<Frame type="Image" name="ActiveEffectImage">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
					<Frame type="Image" name="ActiveEffect2Image">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
					</Frame>
				</Frame>
				<Frame type="Frame" name="AttentionEffect">
					<Frame type="Image" name="AttentionEffectImage">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
					<Frame type="Image" name="AttentionEffect2Image">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
					<Frame type="Image" name="InnerGlowImage">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
				</Frame>
				<!-- default inset is 10 => 5 -->
				<Frame type="Image" name="NormalImage">
					<Anchor side="Top" relative="$parent" pos="Min" offset="5"/>
					<Anchor side="Bottom" relative="$parent" pos="Max" offset="-5"/>
					<Anchor side="Left" relative="$parent" pos="Min" offset="5"/>
					<Anchor side="Right" relative="$parent" pos="Max" offset="-5"/>
				</Frame>
				<!-- default inset is 15 => 0 -->
				<Frame type="Frame" name="HitTestFrame">
					<Anchor relative="$parent"/>
				</Frame>
			</Frame>
			<!-- E -->
			<Frame type="CommandButton" name="CommandButton02">
				<Anchor side="Bottom" relative="$parent/CommandButton00" pos="Max" offset="0"/>
				<Anchor side="Right" relative="$this" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent\CommandButton01" pos="Max" offset="#commandButtonGap"/>
				<Width val="#commandButtonWidth"/>
				<Height val="#commandButtonHeight"/>
				<Frame type="CommandHotkeyFrame" name="HotkeyFrame">
					<Frame type="Label" name="HotkeyLabel">
						<Alpha val="0"/>
					</Frame>
				</Frame>
				<Frame type="Label" name="CooldownLabel">
					<Anchor side="Left" relative="$parent" pos="Min" offset="0" />
					<Anchor side="Right" relative="$parent" pos="Max" offset="0" />
					<Style val="AhliGameButtonCooldown"/>
				</Frame>
				<Frame type="Label" name="ChargeLabel">
					<Style val="AhliCommandPanelChargeLabel"/>
					<Unclipped val="true"/>
					<RenderPriority val="600"/>
				</Frame>
				<Frame type="Image" name="ChargeBackground">
					<Anchor side="Bottom" relative="$parent" pos="Max" offset="3"/>
					<Anchor side="Right" relative="$parent" pos="Max" offset="#chargeRightOffset"/>
					<Width val="#chargeBgWidth"/>
					<Height val="#chargeBgHeight"/>
				</Frame>
				<Frame type="Image" name="ChargeCompleteImage">
					<Width val="#chargeBgWidth"/>
					<Height val="#chargeBgHeight"/>
				</Frame>
				<Frame type="ProgressBar" name="ChargeCooldown">
					<Width val="#chargeCooldownProgressWidth"/>
					<Height val="#chargeCooldownProgressHeight"/>
					<Unclipped val="true"/>
				</Frame>
				<Frame type="Image" name="GameButtonDefaultBorder">
					<Width val="#commandButtonDfltBorderWidth"/>
					<Height val="#commandButtonDfltBorderHeight"/>
					<Anchor side="Top" relative="$parent/NormalImage" pos="Mid" offset="0"/>
					<Anchor side="Bottom" relative="$parent/NormalImage" pos="Mid" offset="0"/>
				</Frame>
				<Frame type="Frame" name="ActiveEffect">
					<Frame type="Image" name="ActiveEffectImage">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
					<Frame type="Image" name="ActiveEffect2Image">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
					</Frame>
				</Frame>
				<Frame type="Frame" name="AttentionEffect">
					<Frame type="Image" name="AttentionEffectImage">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
					<Frame type="Image" name="AttentionEffect2Image">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
					<Frame type="Image" name="InnerGlowImage">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
				</Frame>
				<!-- default inset is 10 => 5 -->
				<Frame type="Image" name="NormalImage">
					<Anchor side="Top" relative="$parent" pos="Min" offset="5"/>
					<Anchor side="Bottom" relative="$parent" pos="Max" offset="-5"/>
					<Anchor side="Left" relative="$parent" pos="Min" offset="5"/>
					<Anchor side="Right" relative="$parent" pos="Max" offset="-5"/>
				</Frame>
				<!-- default inset is 15 => 0 -->
				<Frame type="Frame" name="HitTestFrame">
					<Anchor relative="$parent"/>
				</Frame>				
			</Frame>
			<!-- R -->
			<Frame type="CommandButton" name="CommandButton03">
				<Anchor side="Bottom" relative="$parent/CommandButton00" pos="Max" offset="0"/>
				<Anchor side="Right" relative="$this" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent\CommandButton02" pos="Max" offset="#commandButtonGap"/>
				<Width val="#commandButtonWidth"/>
				<Height val="#commandButtonHeight"/>
				<Frame type="CommandHotkeyFrame" name="HotkeyFrame">
					<Frame type="Label" name="HotkeyLabel">
						<Alpha val="0"/>
					</Frame>
				</Frame>
				<Frame type="Label" name="CooldownLabel">
					<Anchor side="Left" relative="$parent" pos="Min" offset="0" />
					<Anchor side="Right" relative="$parent" pos="Max" offset="0" />
					<Style val="AhliGameButtonCooldown"/>
				</Frame>
				<Frame type="Label" name="ChargeLabel">
					<Style val="AhliCommandPanelChargeLabel"/>
					<Unclipped val="true"/>
					<RenderPriority val="600"/>
				</Frame>
				<Frame type="Image" name="ChargeBackground">
					<Anchor side="Bottom" relative="$parent" pos="Max" offset="3"/>
					<Anchor side="Right" relative="$parent" pos="Max" offset="#chargeRightOffset"/>
					<Width val="#chargeBgWidth"/>
					<Height val="#chargeBgHeight"/>
				</Frame>
				<Frame type="Image" name="ChargeCompleteImage">
					<Width val="#chargeBgWidth"/>
					<Height val="#chargeBgHeight"/>
				</Frame>
				<Frame type="ProgressBar" name="ChargeCooldown">
					<Width val="#chargeCooldownProgressWidth"/>
					<Height val="#chargeCooldownProgressHeight"/>
					<Unclipped val="true"/>
				</Frame>
				<Frame type="Image" name="GameButtonDefaultBorder">
					<Width val="#commandButtonDfltBorderWidth"/>
					<Height val="#commandButtonDfltBorderHeight"/>
					<Anchor side="Top" relative="$parent/NormalImage" pos="Mid" offset="0"/>
					<Anchor side="Bottom" relative="$parent/NormalImage" pos="Mid" offset="0"/>
				</Frame>
				<Frame type="Frame" name="ActiveEffect">
					<Frame type="Image" name="ActiveEffectImage">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
					<Frame type="Image" name="ActiveEffect2Image">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
					</Frame>
				</Frame>
				<Frame type="Frame" name="AttentionEffect">
					<Frame type="Image" name="AttentionEffectImage">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
					<Frame type="Image" name="AttentionEffect2Image">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
					<Frame type="Image" name="InnerGlowImage">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
				</Frame>
				<!-- default inset is 10 => 5 -->
				<Frame type="Image" name="NormalImage">
					<Anchor side="Top" relative="$parent" pos="Min" offset="5"/>
					<Anchor side="Bottom" relative="$parent" pos="Max" offset="-5"/>
					<Anchor side="Left" relative="$parent" pos="Min" offset="5"/>
					<Anchor side="Right" relative="$parent" pos="Max" offset="-5"/>
				</Frame>
				<!-- default inset is 15 => 0 -->
				<Frame type="Frame" name="HitTestFrame">
					<Anchor relative="$parent"/>
				</Frame>
			</Frame>
			<!-- Passive Buttons -->
			<!-- D -->
			<Frame type="CommandButton" name="CommandButton05">
				<Anchor side="Bottom" relative="$parent/CommandButton00" pos="Max" offset="0"/>
				<Anchor side="Left" relative="$parent/CommandButton03" pos="Max" offset="#commandButtonGap"/>
				<Width val="#commandButtonWidth"/>
				<Height val="#commandButtonHeight"/>
				<Frame type="CommandHotkeyFrame" name="HotkeyFrame">
					<Frame type="Label" name="HotkeyLabel">
						<Alpha val="0"/>
					</Frame>
				</Frame>
				<Frame type="Label" name="CooldownLabel">
					<Anchor side="Left" relative="$parent" pos="Min" offset="0" />
					<Anchor side="Right" relative="$parent" pos="Max" offset="0" />
					<Style val="AhliGameButtonCooldown"/>
				</Frame>
				<Frame type="Label" name="ChargeLabel">
					<Style val="AhliCommandPanelChargeLabel"/>
					<Unclipped val="true"/>
					<RenderPriority val="600"/>
				</Frame>
				<Frame type="Image" name="ChargeBackground">
					<Anchor side="Bottom" relative="$parent" pos="Max" offset="3"/>
					<Anchor side="Right" relative="$parent" pos="Max" offset="#chargeRightOffset"/>
					<Width val="#chargeBgWidth"/>
					<Height val="#chargeBgHeight"/>
				</Frame>
				<Frame type="Image" name="ChargeCompleteImage">
					<Width val="#chargeBgWidth"/>
					<Height val="#chargeBgHeight"/>
				</Frame>
				<Frame type="ProgressBar" name="ChargeCooldown">
					<Width val="#chargeCooldownProgressWidth"/>
					<Height val="#chargeCooldownProgressHeight"/>
					<Unclipped val="true"/>
				</Frame>
				<Frame type="Image" name="GameButtonDefaultBorder">
					<Width val="#commandButtonDfltBorderWidth"/>
					<Height val="#commandButtonDfltBorderHeight"/>
					<Anchor side="Top" relative="$parent/NormalImage" pos="Mid" offset="0"/>
					<Anchor side="Bottom" relative="$parent/NormalImage" pos="Mid" offset="0"/>
				</Frame>
				<Frame type="Frame" name="ActiveEffect">
					<Frame type="Image" name="ActiveEffectImage">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
					<Frame type="Image" name="ActiveEffect2Image">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
					</Frame>
				</Frame>
				<Frame type="Frame" name="AttentionEffect">
					<Frame type="Image" name="AttentionEffectImage">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
					<Frame type="Image" name="AttentionEffect2Image">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
					<Frame type="Image" name="InnerGlowImage">
						<Width val="#commandButtonActivateEffectWidth"/>
						<Height val="#commandButtonActivateEffectHeight"/>
						<Unclipped val="true"/>
					</Frame>
				</Frame>
				<!-- default inset is 10 => 5 -->
				<Frame type="Image" name="NormalImage">
					<Anchor side="Top" relative="$parent" pos="Min" offset="5"/>
					<Anchor side="Bottom" relative="$parent" pos="Max" offset="-5"/>
					<Anchor side="Left" relative="$parent" pos="Min" offset="5"/>
					<Anchor side="Right" relative="$parent" pos="Max" offset="-5"/>
				</Frame>
				<!-- default inset is 15 => 0 -->
				<Frame type="Frame" name="HitTestFrame">
					<Anchor relative="$parent"/>
				</Frame>
			</Frame>
			<!-- B, Hearthstone -->
			<Frame type="CommandButton" name="CommandButton13">
				<Anchor side="Bottom" relative="$parent/CommandButton00" pos="Max" offset="0"/>
				<Anchor side="Left" relative="$parent/CommandButton05" pos="Max" offset="#commandButtonGapMOUNT"/>
				<Width val="#commandButtonWidthAlt"/>
				<Height val="#commandButtonHeight"/>
				<Frame type="CommandHotkeyFrame" name="HotkeyFrame">
					<Frame type="Label" name="HotkeyLabel">
						<Alpha val="0"/>
					</Frame>
				</Frame>
				<Frame type="Label" name="CooldownLabel">
					<Anchor side="Top" relative="$parent" pos="Min" offset="17"/>
					<Anchor side="Bottom" relative="$parent" pos="Max" offset="-18"/>
					<Anchor side="Left" relative="$parent" pos="Min" offset="25"/>
					<Anchor side="Right" relative="$parent" pos="Max" offset="-18"/>
					<Style val="AhliGameButtonCooldown"/>
				</Frame>
				<Frame type="Label" name="ChargeLabel">
					<Style val="AhliCommandPanelChargeLabel"/>
					<Unclipped val="true"/>
					<RenderPriority val="600"/>
				</Frame>
				<Frame type="Image" name="ChargeBackground">
					<Anchor side="Bottom" relative="$parent" pos="Max" offset="3"/>
					<Anchor side="Right" relative="$parent" pos="Max" offset="#chargeRightOffset"/>
					<Width val="#chargeBgWidth"/>
					<Height val="#chargeBgHeight"/>
				</Frame>
				<Frame type="Image" name="ChargeCompleteImage">
					<Width val="#chargeBgWidth"/>
					<Height val="#chargeBgHeight"/>
				</Frame>
				<Frame type="ProgressBar" name="ChargeCooldown">
					<Width val="#chargeCooldownProgressWidth"/>
					<Height val="#chargeCooldownProgressHeight"/>
					<Unclipped val="true"/>
				</Frame>
				<Frame type="Image" name="GameButtonBorderImage">
					<Visible val="false"/>
				</Frame>
			</Frame>
			<!-- F (used to be)... might be made usable one day... -->
			<Frame type="CommandButton" name="CommandButton06" template="CommandButton/HiddenButtonTemplate">
				<Anchor side="Top" relative="$parent/CommandButton05" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent/CommandButton13" pos="Max" offset="9999"/>
				<Width val="#commandButtonWidth"/>
				<Height val="#commandButtonHeight"/>
			</Frame>
			<!-- hidden buttons -->
			<Frame type="CommandButton" name="CommandButton07" template="CommandButton/HiddenButtonTemplate">
				<Anchor side="Top" relative="$parent/CommandButton05" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent/CommandButton06" pos="Max" offset="4"/>
				<Width val="#commandButtonWidth"/>
				<Height val="#commandButtonHeight"/>
			</Frame>
			<Frame type="CommandButton" name="CommandButton08" template="CommandButton/HiddenButtonTemplate">
				<Anchor side="Top" relative="$parent/CommandButton05" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent/CommandButton07" pos="Max" offset="4"/>
				<Width val="#commandButtonWidth"/>
				<Height val="#commandButtonHeight"/>
			</Frame>
			<!-- use fountain... fun fact: this used to be able to activate the fountain healing on every structure, e.g. a wall -->
			<Frame type="CommandButton" name="CommandButton09" template="CommandButton/HiddenButtonTemplate">
				<Anchor side="Top" relative="$parent/CommandButton05" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent/CommandButton08" pos="Max" offset="4"/>
				<Width val="#commandButtonWidth"/>
				<Height val="#commandButtonHeight"/>
			</Frame>
			<!-- A -->
			<Frame type="CommandButton" name="CommandButton10" template="CommandButton/HiddenButtonTemplate">
				<Anchor side="Top" relative="$parent/CommandButton05" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent/CommandButton09" pos="Max" offset="4"/>
				<Width val="#commandButtonWidth"/>
				<Height val="#commandButtonHeight"/>
			</Frame>
			<!-- S -->
			<Frame type="CommandButton" name="CommandButton11" template="CommandButton/HiddenButtonTemplate">
				<Anchor side="Top" relative="$parent/CommandButton05" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent/CommandButton10" pos="Max" offset="4"/>
				<Width val="#commandButtonWidth"/>
				<Height val="#commandButtonHeight"/>
			</Frame>
			<!-- H -->
			<Frame type="CommandButton" name="CommandButton12" template="CommandButton/HiddenButtonTemplate">
				<Anchor side="Top" relative="$parent/CommandButton05" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent/CommandButton11" pos="Max" offset="4"/>
				<Width val="#commandButtonWidth"/>
				<Height val="#commandButtonHeight"/>
			</Frame>
			<!-- Esc -->
			<Frame type="CommandButton" name="CommandButton14" template="CommandButton/HiddenButtonTemplate">
				<Anchor side="Top" relative="$parent/CommandButton05" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent/CommandButton12" pos="Max" offset="4"/>
				<Width val="#commandButtonWidth"/>
				<Height val="#commandButtonHeight"/>
			</Frame>
			
			<!-- F (Nuke, Item, etc) -->
			<Frame type="CommandButton" name="CommandButton15">
				<Anchor side="Top" relative="$parent/CommandButton05" pos="Min" offset="9999"/> <!-- offset to hide button on other maps -->
				<Anchor side="Left" relative="$parent/CommandButton13" pos="Max" offset="0"/>
				<Anchor side="Right" relative="$this" pos="Max" offset="0"/>
				<Anchor side="Bottom" relative="$this" pos="Max" offset="0"/>
				<Width val="#commandButtonWidth"/>
				<Height val="#commandButtonHeight"/>
				<!-- BUG: This frame is altered upon entering player vision => child elements should not rely on parent for their size -->
				
				<!-- mod's Assets.txt:
				132x132 UI/Storm_UI_InGame_AbilityButtonBorder_Terran=Assets/Textures/Storm_UI_InGame_AbilityButtonBorder_Terran.dds
				132x132 UI/Storm_UI_InGame_AbilityButtonBorder_Terran_Hover=Assets/Textures/Storm_UI_InGame_AbilityButtonBorder_Terran_Hover.dds
				8x12 UI/Storm_UI_InGame_AbilityButtonBorder_Terran_Light=Assets/Textures/Storm_UI_InGame_AbilityButtonBorder_Terran_Light.dds
				104x68 UI/Storm_UI_InGame_AbilityButtonBorder_Terran_Holder=Assets/Textures/Storm_UI_InGame_AbilityButtonBorder_Terran_Holder.dds
				132x132 UI/Storm_UI_InGame_AbilityButtonBorder_Terran_Off=Assets/Textures/Storm_UI_InGame_AbilityButtonBorder_Terran_Off.dds
				76x76 UI/Storm_UI_InGame_AbilityButton_NuclearStrike=Assets/Textures/Storm_UI_InGame_AbilityButton_NuclearStrike.dds
				-->

				<Frame type="Image" name="GameButtonDefaultBorder">
					<Anchor relative="$parent/NormalImage" offset="13" />
					<Width val="#commandButtonDfltBorderWidth"/>
					<Height val="#commandButtonDfltBorderHeight"/>
					<Unclipped val="true"/>
				</Frame>
				<Frame type="Image" name="GameButtonDefaultHoverBorder">
					<Anchor relative="$parent/NormalImage" offset="13" />
					<Width val="#commandButtonDfltBorderWidth"/>
					<Height val="#commandButtonDfltBorderHeight"/>
					<Unclipped val="true"/>
				</Frame>
				<Frame type="CommandHotkeyFrame" name="HotkeyFrame">
					<Frame type="Label" name="HotkeyLabel">
						<Alpha val="0"/>
					</Frame>
				</Frame>
				<Frame type="Label" name="CooldownLabel">
					<Anchor side="Left" relative="$parent" pos="Min" offset="0" />
					<Anchor side="Right" relative="$parent" pos="Max" offset="0" />
					<Style val="AhliGameButtonCooldown"/>
					<Unclipped val="true"/>
				</Frame>
				<!-- default inset is 10 => 5 -->
				<Frame type="Image" name="NormalImage">
					<Anchor side="Top" relative="$parent/$parent/CommandButton00" pos="Min" offset="5"/>
					<Anchor side="Left" relative="$parent/$parent/CommandButton13" pos="Max" offset="0"/>
					<Anchor side="Bottom" relative="$this" pos="Max" offset="0"/>
					<Anchor side="Right" relative="$this" pos="Max" offset="0"/>
					<Width val="42"/>
					<Height val="42"/>
					<Unclipped val="true"/>
				</Frame>
				<!-- default inset is 15 => 0 -->
				<Frame type="Frame" name="HitTestFrame">
					<Anchor relative="$parent/NormalImage" offset="5" />
				</Frame>
				<!-- default inset is 15 => 5 -->
				<Frame type="Image" name="IconBackground">
					<Anchor relative="$parent/NormalImage" offset="0" />
					<Unclipped val="true"/>
				</Frame>
				<!-- @Override -->
				<StateGroup name="PlayOnceAnimationState">
					<State name="IntroOn">
						<When type="AnimationState" frame="$this" PlayOnceAnimationState="IntroOn"/>
						<Action type="SendEvent" frame="$this" event="StopAll"/>
						<!-- FIX: Width set in button is overridden -->
						<Action type="SetProperty" frame="$this" Width="#commandButtonWidth" undo="false"/>
						<Action type="SetProperty" frame="$this" Height="#commandButtonHeight" undo="false"/>
						<!-- FIX: ValidatorResponseFrame does not seem to work, e.g. button is visible on Cursed Hollow without this -->
						<Action type="SetAnchor" frame="$this" side="Top" relative="$parent/CommandButton05" pos="Min" offset="0" undo="false"/>
					</State>
				</StateGroup>
				<Frame type="Image" name="DisabledLockOverlay">
					<Anchor relative="$parent/NormalImage" offset="0" />
					<Unclipped val="true"/>
					<!--<Texture val="@UI/HUD_Btn_BG_Ability_Locked"/>-->
					<Animation name="Fade">
						<Controller type="Fade" name="Fade_1" layer="1" end="Pause">
							<Key type="Curve" time="0" value="255" />
							<Key type="Curve" time="0.01" value="0" />
						</Controller>
						<Controller type="Visibility" name="Visibility_2" end="Pause">
							<Key type="Bool" time="0" value="True" />
							<Key type="Bool" time="0.01" value="True" />
							<Key type="Bool" time="0.01" value="False" />
						</Controller>
					</Animation>
				</Frame>
				<Frame type="Image" name="FKeyButtonPulse1">
					<Anchor relative="$INVALID"/>
					<Visible val="false"/>
				</Frame>
				<Frame type="Image" name="FKeyButtonPulse2">
					<Anchor relative="$INVALID"/>
					<Visible val="false"/>
				</Frame>
				<Frame type="Image" name="FKeyButtonPulse3">
					<Anchor relative="$INVALID"/>
					<Visible val="false"/>
				</Frame>

			</Frame>
			
			<!-- activatable talent buttons -->
			<Frame type="Image" name="EmptyDynamicButton30" template="_BottomLeft/EmptyDynamicButtonTemplate">
				<Anchor side="Top" relative="$parent/CommandButton00" pos="Max" offset="-11"/>
				<Anchor side="Left" relative="$parent/CommandButton00" pos="Min" offset="-21"/>
				<Anchor side="Bottom" relative="$this" pos="Max" offset="0"/>
			</Frame>
			<Frame type="CommandButton" name="CommandButton30" template="_BottomLeft/DynamicButtonTemplate">
			</Frame>
			<Frame type="Image" name="EmptyDynamicButton31" template="_BottomLeft/EmptyDynamicButtonTemplate">
				<Anchor side="Top" relative="$parent/EmptyDynamicButton30" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent/EmptyDynamicButton30" pos="Max" offset="#commandButtonGap"/>
				<Anchor side="Bottom" relative="$this" pos="Min" offset="0"/>
			</Frame>
			<Frame type="CommandButton" name="CommandButton31" template="_BottomLeft/DynamicButtonTemplate">
			</Frame>
			<Frame type="Image" name="EmptyDynamicButton32" template="_BottomLeft/EmptyDynamicButtonTemplate">
				<Anchor side="Top" relative="$parent/EmptyDynamicButton31" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent/EmptyDynamicButton31" pos="Max" offset="#commandButtonGap"/>
				<Anchor side="Bottom" relative="$this" pos="Min" offset="0"/>
			</Frame>
			<Frame type="CommandButton" name="CommandButton32" template="_BottomLeft/DynamicButtonTemplate">
			</Frame>
			<Frame type="Image" name="EmptyDynamicButton33" template="_BottomLeft/EmptyDynamicButtonTemplate">
				<Anchor side="Top" relative="$parent/EmptyDynamicButton32" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent/EmptyDynamicButton32" pos="Max" offset="#commandButtonGap"/>
				<Anchor side="Bottom" relative="$this" pos="Min" offset="0"/>
			</Frame>
			<Frame type="CommandButton" name="CommandButton33" template="_BottomLeft/DynamicButtonTemplate">
			</Frame>
			<Frame type="Image" name="EmptyDynamicButton34" template="_BottomLeft/EmptyDynamicButtonTemplate">
				<Anchor side="Top" relative="$parent/EmptyDynamicButton33" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent/EmptyDynamicButton33" pos="Max" offset="#commandButtonGap"/>
				<Anchor side="Bottom" relative="$this" pos="Min" offset="0"/>
			</Frame>
			<Frame type="CommandButton" name="CommandButton34" template="_BottomLeft/DynamicButtonTemplate">
			</Frame>
			<Frame type="Image" name="EmptyDynamicButton35" template="_BottomLeft/EmptyDynamicButtonTemplate">
				<Anchor side="Top" relative="$parent/EmptyDynamicButton34" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent/EmptyDynamicButton34" pos="Max" offset="#commandButtonGap"/>
				<Anchor side="Bottom" relative="$this" pos="Min" offset="0"/>
			</Frame>
			<Frame type="CommandButton" name="CommandButton35" template="_BottomLeft/DynamicButtonTemplate">
			</Frame>
		</Frame>
		

		<Frame type="Frame" name="UnitSelectionInfoVerticalPositionControl">
			<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
			<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
			<Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
			<Anchor side="Top" relative="$this/C" pos="Min" offset="0"/>
			<Handle val="UnitSelectionInfoVerticalPositionControl"/>
			
			<!-- Khaldor Mode offset -->
			<Frame type="Frame" name="A">
				<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
				<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
				<Anchor side="Bottom" relative="$parent/$parent" pos="Max" offset="0"/>
				<Anchor side="Top" relative="$parent/parent" pos="Max" offset="0"/>
			</Frame>
			<!-- Observer Tools -->
			<Frame type="Frame" name="B">
				<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
				<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
				<Anchor side="Bottom" relative="$parent/A" pos="Min" offset="0"/>
				<Anchor side="Top" relative="$parent/A" pos="Min" offset="0"/>
			</Frame>
			<!-- Dead -->
			<Frame type="Frame" name="C">
				<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
				<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
				<Anchor side="Bottom" relative="$parent/B" pos="Min" offset="0"/>
				<Height val="1200"/>
				<Visible val="false"/>
				<CollapseLayout val="true"/>
			</Frame>
		</Frame>
		
		<Frame type="Frame" name="KhaldorModeToggle">
			<Anchor relative="$parent"/>
			<Frame type="ToggleControl" name="KhaldorModeToggle">
				<Anchor relative="$parent"/>
				<CollapseLayout val="true"/>
				<Visible val="false"/>
				<AcceptsMouse val="false"/>
				<!-- <Shortcut val="#Hotkey - Toggle Unit selection UI (Khaldor Mode)"/> -->
				
				<Animation name="Ahlimation">
					<Event event="OnShown" action="DirectionForward,Play"/>
					<Event event="OnHidden" action="DirectionReverse,Play"/>
					
					<Controller type="Anchor" end="Pause" side="Top" relative="true" frame="$parent/$parent/UnitSelectionInfoVerticalPositionControl/A">
						<Key type="Curve" time="0.0" value="0" inout="Slow"/>
						<Key type="Curve" time="0.5" value="1200" inout="Fast"/>
					</Controller>
					<Controller type="Visibility" end="Pause" frame="$parent/$parent/KhaldorPanel">
						<Key type="Bool" time="0.0" value="false"/>
						<Key type="Bool" time="0.4" value="false"/>
						<Key type="Bool" time="0.5" value="true"/>
					</Controller>
				</Animation>
			</Frame>
		</Frame>
		
		<Frame type="Frame" name="KhaldorPanel">
			<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
			<Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
			<Width val="400"/>
			<Height val="80"/>
			<Visible val="false"/>
			
			<Frame type="SelectionUnitStatusPanel" name="SelectionUnitStatusPanelSingle">
				<Anchor relative="$parent"/>
				<DisplayMode val="Single"/>

				<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
					<Anchor relative="$parent"/>
					
					<Frame type="Frame" name="HeroBuffDebuffPanel" template="HeroConsole/HeroBuffDebuffPanelTemplate">
						<Width val="400"/>
						<Height val="40"/>
						<Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="5"/>
						<Anchor side="Top" relative="$this" pos="Min" offset="0"/>
						<Anchor side="Right" relative="$this" pos="Min" offset="0"/>
						<Unclipped val="true"/>
						
						<!-- it is alpha=0 in default UI -->
						<Frame type="Image" name="BuffBackgroundImage">
							<Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
							<Visible val="false"/>
						</Frame>

						<Frame type="BlurFrame" name="GlassBlur">
						</Frame>
						
						<Frame type="BehaviorBar" name="HeroBuffBar">
							<Frame type="BehaviorIcon" name="BehaviorIcon0">
								<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
								<AcceptsMouseTooltip val="true"/>
								<AcceptsMouse val="false"/>
								
								<Animation name="VisibilityLink">
									<Event event="OnShown" action="DirectionForward,Play"/>
									<Event event="OnHidden" action="DirectionReverse,Play"/>
									<!--<Controller type="Visibility" end="Pause" frame="$parent/$parent/BuffBackgroundImage">
										<Key type="Bool" time="0" value="false"/>
										<Key type="Bool" time="0" value="true"/>
									</Controller>-->
									<Controller type="Visibility" end="Pause" frame="$parent/$parent/GlassBlur">
										<Key type="Bool" time="0" value="false"/>
										<Key type="Bool" time="0" value="true"/>
									</Controller>
								</Animation>
							</Frame>
							<Frame type="BehaviorIcon" name="BehaviorIcon1">
								<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
								<AcceptsMouseTooltip val="true"/>
								<AcceptsMouse val="false"/>
							</Frame>
							<Frame type="BehaviorIcon" name="BehaviorIcon2">
								<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
								<AcceptsMouseTooltip val="true"/>
								<AcceptsMouse val="false"/>
							</Frame>
							<Frame type="BehaviorIcon" name="BehaviorIcon3">
								<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
								<AcceptsMouseTooltip val="true"/>
								<AcceptsMouse val="false"/>
							</Frame>
							<Frame type="BehaviorIcon" name="BehaviorIcon4">
								<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
								<AcceptsMouseTooltip val="true"/>
								<AcceptsMouse val="false"/>
							</Frame>
							<Frame type="BehaviorIcon" name="BehaviorIcon5">
								<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
								<AcceptsMouseTooltip val="true"/>
								<AcceptsMouse val="false"/>
							</Frame>
						</Frame>
						<Frame type="BehaviorBar" name="HeroDebuffBar">
							<Frame type="BehaviorIcon" name="BehaviorIcon0">
								<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
								<AcceptsMouseTooltip val="true"/>
								<AcceptsMouse val="false"/>
							</Frame>
							<Frame type="BehaviorIcon" name="BehaviorIcon1">
								<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
								<AcceptsMouseTooltip val="true"/>
								<AcceptsMouse val="false"/>
							</Frame>
							<Frame type="BehaviorIcon" name="BehaviorIcon2">
								<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
								<AcceptsMouseTooltip val="true"/>
								<AcceptsMouse val="false"/>
							</Frame>
							<Frame type="BehaviorIcon" name="BehaviorIcon3">
								<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
								<AcceptsMouseTooltip val="true"/>
								<AcceptsMouse val="false"/>
							</Frame>
							<Frame type="BehaviorIcon" name="BehaviorIcon4">
								<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
								<AcceptsMouseTooltip val="true"/>
								<AcceptsMouse val="false"/>
							</Frame>
							<Frame type="BehaviorIcon" name="BehaviorIcon5">
								<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
								<AcceptsMouseTooltip val="true"/>
								<AcceptsMouse val="false"/>
							</Frame>
						</Frame>

						<Frame type="SelectionUnitStatusPanel" name="SelectionUnitStatusPanelHealingFountain">
							<Visible val="false"/>
							<Anchor side="Bottom" relative="$parent" pos="Max" offset="9999"/>
							<Anchor side="Left" relative="$parent" pos="Max" offset="9999"/>
							<Anchor side="Top" relative="$parent" pos="Max" offset="9999"/>
							<Anchor side="Right" relative="$parent" pos="Max" offset="9999"/>
							<Width val="1"/>
							<Height val="1"/>
							<Alpha val="0"/>
							<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
								<Visible val="false"/>
								<Anchor side="Bottom" relative="$parent" pos="Max" offset="9999"/>
								<Anchor side="Left" relative="$parent" pos="Max" offset="9999"/>
								<Anchor side="Top" relative="$parent" pos="Max" offset="9999"/>
								<Anchor side="Right" relative="$parent" pos="Max" offset="9999"/>
								<Width val="1"/>
								<Height val="1"/>
								<Alpha val="0"/>
								<Frame type="Image" name="HealingActiveImage">
									<AcceptsMouseTooltip val="False"/>
								</Frame>
							</Frame>
						</Frame>

					</Frame>

					
				</Frame>
			</Frame>
		</Frame>
		
		<!-- @Override -->
		<Frame type="SelectionUnitStatusPanel" name="FloatingCombatUnitSelectionPanel">
			<RenderPriority val="510"/>
			<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
				<Frame type="HeroTalentTreeSelectionPanel" name="HeroTalentTreeSelectionPanel">
					<Anchor side="Top" relative="$parent/$parent/$parent/SelectionUnitStatusPanel" pos="Min" offset="-50"/>
					<Anchor side="Bottom" relative="$this" pos="Max" offset="0"/>
					<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
					<Height val="1010"/>
					
					<Frame type="Frame" name="PortraitMaskFrame">
						<Visible val="false"/>
					</Frame>
					<Frame type="Image" name="BorderImage">
						<Visible val="false"/>
					</Frame>
					
					<Frame type="HeroTalentTreePanel" name="TalentTreePanel">
						<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
						
						<Frame type="HeroTalentTreeButton" name="TalentTreeButton4">
							<Anchor side="Bottom" relative="$parent" pos="Min" offset="490"/>
							<Anchor side="Left" relative="$parent" pos="Min" offset="-16"/>
						</Frame>
						
						<Frame type="HeroTalentTierButton" name="TalentTierButton1">
							<Anchor side="Top" relative="$parent" pos="Min" offset="490"/>
							<Anchor side="Left" relative="$parent" pos="Min" offset="26"/>
						</Frame>
					</Frame>
					
					<Frame type="Image" name="CustomBackgroundImage">
						<Anchor side="Top" relative="$parent/TalentTreePanel/TalentTreeButton0" pos="Min" offset="-4"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="-15"/>
						<Anchor side="Right" relative="$parent/TalentTreePanel/TalentTreeButton0" pos="Max" offset="4"/>
						<Anchor side="Bottom" relative="$parent/TalentTreePanel/TalentTierButton1" pos="Max" offset="44"/>
						<Texture val="@UI/StormShopBackground"/>
						<TextureType val="Nineslice"/>
						<Unclipped val="true"/>
						<RenderPriority val="511"/>
					</Frame>
					
					<!-- Mute Talent Tree Selection Panel hotkey -->
					<!-- TODO: doesn't work -->
					<Animation name="Show">
						<Event event="Toggle" action="ToggleDirection, Play"/>
						<Event event="Hide" action="DirectionReverse, Play"/>
						<Event event="Begin" action="DirectionForward, Play"/>
						<Event event="End" action="DirectionReverse, Play"/>
						<Event event="Show" action="DirectionReverse, Play" frame="$parent/$parent/$parent/HeroCharacterSheetPanelContainer/HeroCharacterSheetPanel"/>
						<Controller type="Fade" name="Fade_1" end="Pause">
						</Controller>
						<Controller type="Anchor" name="Anchor_1" end="Pause" side="Left" relative="true">
						</Controller>
						<Controller type="Sound" name="Sound_1" end="Pause">
							<Key type="Sound" time="0" sound="@StormNoSound"/>
						</Controller>
					</Animation>
				</Frame>
			</Frame>
		</Frame>

		<!-- @Override -->
		<Frame type="Frame" name="HeroCharacterSheetPanelContainer">
			<!-- Mute Character Sheet Panel hotkey -->
			<!-- @Override -->
			<Frame type="HeroCharacterSheetPanel" name="HeroCharacterSheetPanel">
				<Frame type="Frame" name="PortraitMaskFrame">
					<Visible val="false"/>
				</Frame>
				
				<!-- @Override -->
				<Animation name="Show">
					<Controller type="Sound" name="Sound_1" end="Pause">
						<Key type="Sound" time="0" sound="@StormNoSound"/>
					</Controller>
				</Animation>
			</Frame>
		</Frame>

		<!-- hide original player vision's hero console panel -->
		<!-- @Override -->
		<Frame type="Frame" name="HeroConsolePanel">
			<Visible val="false"/>
			<Animation name="KeepHidden">
				<Event event="OnShown" action="Reset,Play"/>
				<Controller type="Visibility" end="Pause">
					<Key type="Bool" time="0" value="false"/>
				</Controller>
			</Animation>
		</Frame>
		
		<!-- hide original player vision's hero buff panel -->
		<!-- @Override -->
		<Frame type="Frame" name="HeroBuffDebuffPanel">
			<Visible val="false"/>
			<Animation name="KeepHidden">
				<Event event="OnShown" action="Reset,Play"/>
				<Controller type="Visibility" end="Pause">
					<Key type="Bool" time="0" value="false"/>
				</Controller>
			</Animation>
		</Frame>

		<!-- selected unit info -->
		<Frame type="SelectionUnitStatusPanel" name="SelectionUnitStatusPanel">
			<Anchor side="Left" relative="$PortraitPanel" pos="Min" offset="0"/>
			<Anchor side="Bottom" relative="$PortraitPanel" pos="Max" offset="0"/>
			<Width val="500"/>
			<Height val="740"/>
			<DisplayMode val="Single"/>
			<RenderPriority val="510"/>
			<!--<AllowObserverLocalSelection val="true"/>-->
			<Handle val="StatusPanelOfSingleSelectedUnit"/>
			
			<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
				<Anchor relative="$parent"/>
				
				<!-- show/hide command card -->
				<Animation name="ShowAbilities">
					<Event event="OnShown" action="Play"/>
					<Event event="OnHidden" action="Stop"/>
					<!-- this is a loop because player vision hides them and the player vision feature is not in every case detectable for me => execute always -->
					<Controller type="Visibility" end="Loop" frame="$parent/$parent/CommandPanel">
						<Key type="Bool" time="0" value="true"/>
					</Controller>
					<Controller type="Visibility" end="Loop" frame="$parent/$parent/InventoryPanel">
						<Key type="Bool" time="0" value="true"/>
					</Controller>
				</Animation>
				<Animation name="HideAbilities">
					<Event event="OnHidden" action="Reset,Play"/>

					<Controller type="Visibility" end="Stop" frame="$parent/$parent/CommandPanel">
						<Key type="Bool" time="0" value="false"/>
						<Key type="Bool" time="0.001" value="false"/>
					</Controller>
					<Controller type="Visibility" end="Stop" frame="$parent/$parent/InventoryPanel">
						<Key type="Bool" time="0" value="false"/>
						<Key type="Bool" time="0.001" value="false"/>
					</Controller>
				</Animation>
				
				<Frame type="Image" name="BuffBackgroundImage">
					<Anchor side="Bottom" relative="$parent/Background" pos="Max" offset="-9"/>
					<Anchor side="Left" relative="$parent/Background" pos="Min" offset="3"/>
					<Texture val="@UI/Storm_UI_Ingame_Buffpanel_bg"/>
					<TextureType val="Normal"/>
					<Width val="248"/>
					<Height val="45"/>
				</Frame>
				
				<Frame type="Image" name="Background">
					<Anchor side="Top" relative="$PortraitPanel/BackgroundImage" pos="Min" offset="106"/>
					<Anchor side="Left" relative="$PortraitPanel/BackgroundImage" pos="Min" offset="169"/>
					<Texture val="_Assets\Textures\hud_bg_artbarbottom.dds"/>
					
					<StateGroup name="TextureState">
						<DefaultState val="Dflt"/>
						<State name="NoHeal">
							<When type="Property" frame="$parent/HeroBuffDebuffPanel/SelectionUnitStatusPanelHealingFountain/UnitStatusFrame0/HealingActiveImage" visible="false"/>
							<Action type="SetProperty" texture="_Assets\Textures\hud_bg_artbarbottom_noHeal.dds"/>
							<Action type="SetAnchor" frame="$parent/HeroBuffDebuffPanel/HeroBuffBar" side="Left" relative="$parent/BuffBackgroundImage" pos="Min" offset="6"/>
						</State>
						<State name="Dflt">
							<Action type="SetProperty" texture="_Assets\Textures\hud_bg_artbarbottom.dds"/>
							<Action type="SetAnchor" frame="$parent/HeroBuffDebuffPanel/HeroBuffBar" side="Left" relative="$parent/BuffBackgroundImage" pos="Min" offset="54"/>
						</State>
					</StateGroup>
				</Frame>
				
				<Frame type="Frame" name="HealthEnergyContainer">
					<Anchor side="Top" relative="$parent/Background" pos="Min" offset="11"/>
					<Anchor side="Left" relative="$parent/Background" pos="Min" offset="43"/>
					<Height val="39"/>
					<Width val="244"/>
					
					<Frame type="Frame" name="EnergyBar" template="_ColoredManaBars/ConsoleManaBarSwitchTemplate">
						<Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
					</Frame>
					
					<Frame type="UnitStatusShieldedHealthBar" name="HealthBar" template="UnitStatus/HeroUnitStatusConsoleFrameTemplate/HealthBar">
						<Visible val="true"/>
						<AcceptsMouse val="false"/>
					</Frame>
					
					<Frame type="UnitStatusEnergyLabel" name="EnergyBarLabel" template="UnitStatus/HeroUnitStatusConsoleFrameTemplate/EnergyBarLabel">
					</Frame>
					
					<Frame type="UnitStatusShieldedHealthLabel" name="HealthBarLabel" template="UnitStatus/HeroUnitStatusConsoleFrameTemplate/HealthBarLabel">
					</Frame>
					
					<Frame type="Image" name="HardenedFocusIndicator" template="UnitStatus/HeroUnitStatusConsoleFrameTemplate/HardenedFocusIndicator">
					</Frame>
					<Frame type="UnitStatusValidatorAnimElement" name="HardenedFocusVisibilityAnims" template="UnitStatus/HeroUnitStatusConsoleFrameTemplate/HardenedFocusVisibilityAnims">
					</Frame>
					
					<StateGroup name="EnergyVisibility">
						<DefaultState val="Visible"/>
						<State name="Hidden">
							<When type="Property" frame="EnergyBarLabel" visible="false"/>
							<Action type="ApplyTemplate" frame="HealthBar" template="UnitStatus/HeroUnitStatusConsoleFrameNoEnergyTemplate/HealthBar"/>
							<Action type="SetProperty" frame="HealthBar" AcceptsMouse="false"/>
							<Action type="ApplyTemplate" frame="HealthBarLabel" template="UnitStatus/HeroUnitStatusConsoleFrameNoEnergyTemplate/HealthBarLabel"/>
						</State>
						<State name="Visible">
							<Action type="ApplyTemplate" frame="HealthBar" template="UnitStatus/HeroUnitStatusConsoleFrameTemplate/HealthBar"/>
							<Action type="SetProperty" frame="HealthBar" AcceptsMouse="false"/>
							<Action type="ApplyTemplate" frame="HealthBarLabel" template="UnitStatus/HeroUnitStatusConsoleFrameTemplate/HealthBarLabel"/>
						</State>
					</StateGroup>
					
				</Frame>
				
				<!-- hue+66,lightness-25 -->
				<Frame type="Image" name="PortraitFrameImage">
					<Anchor side="Bottom" relative="$PortraitPanel/BackgroundImage" pos="Max" offset="0"/>
					<Anchor side="Left" relative="$PortraitPanel/BackgroundImage" pos="Min" offset="0"/>
					<Texture val="_Assets\Textures\hud_bg_portraitframe.dds"/>
				</Frame>
				
				
				<!--<Frame type="CutsceneFrame" name="OnFireCutsceneFrame" template="SharedOnFireVFX/OnFireCutsceneFrameTemplate">-->
				<!--<Frame type="CutsceneFrame" name="OnFireCutsceneFrame">
					<Anchor side="Top" relative="$parent/PortraitFrameImage" pos="Min" offset="-86"/>
					<Anchor side="Bottom" relative="$parent/PortraitFrameImage" pos="Max" offset="84"/>
					<Anchor side="Left" relative="$parent/PortraitFrameImage" pos="Min" offset="-228"/>
					<Anchor side="Right" relative="$parent/PortraitFrameImage" pos="Max" offset="240"/>
					<RenderPriority val="999"/>
					<UseAlternateTime val="true"/>
					<AutoPlay val="false"/>
					<Frame type="Frame" name="CutsceneColorblindFilterSupport" template="StandardAnimationTemplates/CutsceneColorblindFilterSupportTemplate"/>

					<Frame type="UnitStatusScoreValue" name="HeroDamageOnFire">
						<Anchor relative="$parent"/>
						<Frame type="ScoreValueLabelFrame" name="ScoreValueFrame0">
							<Anchor relative="$parent"/>
							<ScoreValueLink val="OnFireHighlightHeroDamageBoolean"/>
							<HideZero val="true"/>
							<Frame type="Label" name="Label">
								<Anchor relative="$parent"/>
								<Alpha val="0"/>
							</Frame>
						</Frame>
					</Frame>
					<Frame type="UnitStatusScoreValue" name="KillsOnFire">
						<Anchor relative="$parent"/>
						<Frame type="ScoreValueLabelFrame" name="ScoreValueFrame0">
							<Anchor relative="$parent"/>
							<ScoreValueLink val="OnFireHighlightKillsBoolean"/>
							<HideZero val="true"/>
							<Frame type="Label" name="Label">
								<Anchor relative="$parent"/>
								<Alpha val="0"/>
							</Frame>
						</Frame>
					</Frame>
					<Frame type="UnitStatusScoreValue" name="AssistsOnFire">
						<Anchor relative="$parent"/>
						<Frame type="ScoreValueLabelFrame" name="ScoreValueFrame0">
							<Anchor relative="$parent"/>
							<ScoreValueLink val="OnFireHighlightAssistsBoolean"/>
							<HideZero val="true"/>
							<Frame type="Label" name="Label">
								<Anchor relative="$parent"/>
								<Alpha val="0"/>
							</Frame>
						</Frame>
					</Frame>
					<Frame type="UnitStatusScoreValue" name="HealingOnFire">
						<Anchor relative="$parent"/>
						<Frame type="ScoreValueLabelFrame" name="ScoreValueFrame0">
							<Anchor relative="$parent"/>
							<ScoreValueLink val="OnFireHighlightHealingBoolean"/>
							<HideZero val="true"/>
							<Frame type="Label" name="Label">
								<Anchor relative="$parent"/>
								<Alpha val="0"/>
							</Frame>
						</Frame>
					</Frame>
					<Frame type="UnitStatusScoreValue" name="DamageTakenOnFire">
						<Anchor relative="$parent"/>
						<Frame type="ScoreValueLabelFrame" name="ScoreValueFrame0">
							<Anchor relative="$parent"/>
							<ScoreValueLink val="OnFireHighlightDamageTakenBoolean"/>
							<HideZero val="true"/>
							<Frame type="Label" name="Label">
								<Anchor relative="$parent"/>
								<Alpha val="0"/>
							</Frame>
						</Frame>
					</Frame>
					<Frame type="UnitStatusScoreValue" name="XPContributionOnFire">
						<Anchor relative="$parent"/>
						<Frame type="ScoreValueLabelFrame" name="ScoreValueFrame0">
							<Anchor relative="$parent"/>
							<ScoreValueLink val="OnFireHighlightXPContributionBoolean"/>
							<HideZero val="true"/>
							<Frame type="Label" name="Label">
								<Anchor relative="$parent"/>
								<Alpha val="0"/>
							</Frame>
						</Frame>
					</Frame>
					<Frame type="UnitStatusScoreValue" name="SiegeDamageOnFire">
						<Anchor relative="$parent"/>
						<Frame type="ScoreValueLabelFrame" name="ScoreValueFrame0">
							<Anchor relative="$parent"/>
							<ScoreValueLink val="OnFireHighlightSiegeDamageBoolean"/>
							<HideZero val="true"/>
							<Frame type="Label" name="Label">
								<Anchor relative="$parent"/>
								<Alpha val="0"/>
							</Frame>
						</Frame>
					</Frame>
					
					<Animation name="OnShownAhli">
						<Event event="OnShown" action="Reset,Play"/>
						<Controller type="Cutscene" end="Stop">
							<Key type="Cutscene" time="0" action="SetCutscene" file="Cutscenes/GameUI_OnFirePortrait.StormCutscene"/>
							<Key type="Cutscene" time="0" action="Play"/>
							<Key type="Cutscene" time="0" action="Bookmark" bookmark="0 Start"/>
							<Key type="Cutscene" time="0" action="AddFilter" filter="Offense"/>
							<Key type="Cutscene" time="0" action="RemoveFilter" filter="Defense"/>
							<Key type="Cutscene" time="0" action="RemoveFilter" filter="Utility"/>
						</Controller>
					</Animation>
					
	<Frame type="Image" name="QQQ">
		<Anchor relative="$parent"/>
		<Texture val="_Assets\Textures\QQQ.dds"/>
		<Alpha val="128"/>
	</Frame>
					
					<StateGroup name="Fireman">
						<DefaultState val="Hidden"/>
						<State name="HeroDamage">
							<When type="Property" frame="HeroDamageOnFire/ScoreValueFrame0" visible="true"/>
							<Action type="SetProperty" visible="true"/>
							<Action type="SendEvent" event="OnFireOffense"/>
						</State>
						<State name="Kills">
							<When type="Property" frame="HeroDamageOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="KillsOnFire/ScoreValueFrame0" visible="true"/>
							<Action type="SetProperty" visible="true"/>
							<Action type="SendEvent" event="OnFireOffense"/>
						</State>
						<State name="Assists">
							<When type="Property" frame="HeroDamageOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="KillsOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="AssistsOnFire/ScoreValueFrame0" visible="true"/>
							<Action type="SetProperty" visible="true"/>
							<Action type="SendEvent" event="OnFireOffense"/>
						</State>
						<State name="Healing">
							<When type="Property" frame="HeroDamageOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="KillsOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="AssistsOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="HealingOnFire/ScoreValueFrame0" visible="true"/>
							<Action type="SetProperty" visible="true"/>
							<Action type="SendEvent" event="OnFireOffense"/>
						</State>
						<State name="DamageTaken">
							<When type="Property" frame="HeroDamageOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="KillsOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="AssistsOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="HealingOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="DamageTakenOnFire/ScoreValueFrame0" visible="true"/>
							<Action type="SetProperty" visible="true"/>
							<Action type="SendEvent" event="OnFireOffense"/>
						</State>
						<State name="XPContribution">
							<When type="Property" frame="HeroDamageOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="KillsOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="AssistsOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="HealingOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="DamageTakenOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="XPContributionOnFire/ScoreValueFrame0" visible="true"/>
							<Action type="SetProperty" visible="true"/>
							<Action type="SendEvent" event="OnFireOffense"/>
						</State>
						<State name="SiegeDamage">
							<When type="Property" frame="HeroDamageOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="KillsOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="AssistsOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="HealingOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="DamageTakenOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="XPContributionOnFire/ScoreValueFrame0" visible="false"/>
							<When type="Property" frame="SiegeDamageOnFire/ScoreValueFrame0" visible="true"/>
							<Action type="SetProperty" visible="true"/>
							<Action type="SendEvent" event="OnFireOffense"/>
						</State>
						<State name="Hidden">
							<Action type="SetProperty" visible="true"/>
							<Action type="SendEvent" event="OnFireOffense"/>
						</State>
					</StateGroup>
				</Frame>-->
				
				<Frame type="Frame" name="HeroBuffDebuffPanel" template="HeroConsole/HeroBuffDebuffPanelTemplate">
					<Anchor side="Top" relative="$parent/Background" pos="Max" offset="-41"/>
					<Anchor side="Left" relative="$parent/Background" pos="Min" offset="7"/>
					
					<Frame type="BehaviorBar" name="HeroBuffBar">
						<Frame type="BehaviorIcon" name="BehaviorIcon0">
							<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
							
							<!--<Animation name="VisibilityLink">
								<Event event="OnShown" action="DirectionForward,Play"/>
								<Event event="OnHidden" action="DirectionReverse,Play"/>
								<Controller type="Visibility" end="Pause" frame="$parent/$parent/BuffBackgroundImage">
									<Key type="Bool" time="0" value="false"/>
									<Key type="Bool" time="0" value="true"/>
								</Controller>
								<Controller type="Visibility" end="Pause" frame="$parent/$parent/GlassBlur">
									<Key type="Bool" time="0" value="false"/>
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation> -->
							
						</Frame>
						<Frame type="BehaviorIcon" name="BehaviorIcon1">
							<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
						</Frame>
						<Frame type="BehaviorIcon" name="BehaviorIcon2">
							<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
						</Frame>
						<Frame type="BehaviorIcon" name="BehaviorIcon3">
							<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
						</Frame>
						<Frame type="BehaviorIcon" name="BehaviorIcon4">
							<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
						</Frame>
						<Frame type="BehaviorIcon" name="BehaviorIcon5">
							<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
						</Frame>
					</Frame>
					<Frame type="BehaviorBar" name="HeroDebuffBar">
						<Frame type="BehaviorIcon" name="BehaviorIcon0">
							<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
						</Frame>
						<Frame type="BehaviorIcon" name="BehaviorIcon1">
							<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
						</Frame>
						<Frame type="BehaviorIcon" name="BehaviorIcon2">
							<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
						</Frame>
						<Frame type="BehaviorIcon" name="BehaviorIcon3">
							<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
						</Frame>
						<Frame type="BehaviorIcon" name="BehaviorIcon4">
							<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
						</Frame>
						<Frame type="BehaviorIcon" name="BehaviorIcon5">
							<HitTestTexture val="@UI/Storm_UI_InGame_Buff_IconMask"/>
						</Frame>
					</Frame>

					<Frame type="SelectionUnitStatusPanel" name="SelectionUnitStatusPanelHealingFountain">
						
						<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
							
							<!-- Visibility Controls -->
							<Frame type="UnitStatusValidatorAnimElement" name="ValidatorChecks">
								<Anchor relative="$parent"/>
								<Validator val="CasterIsPlayer11"/>
								<Validator val="CasterIsPlayer12"/>
								<Validator val="IsMercMinionOrStructure"/>
								
								<Animation name="HideValidators">
									<Event event="NoState" action="DirectionReverse,Play"/>
									<Event event="CasterIsPlayer11" action="Reset,DirectionForward,Play"/>
									<Event event="CasterIsPlayer12" action="Reset,DirectionForward,Play"/>
									<Event event="IsMercMinionOrStructure" action="Reset,DirectionForward,Play"/>

									<Controller type="Visibility" end="Pause" frame="$parent/HealingActiveImage">
										<Key type="Bool" time="0" value="true"/>
										<Key type="Bool" time="0" value="false"/>
									</Controller>
									<Controller type="Visibility" end="Pause" frame="$parent/HealingGlowImage">
										<Key type="Bool" time="0" value="true"/>
										<Key type="Bool" time="0" value="false"/>
									</Controller>
									<Controller type="Visibility" end="Pause" frame="$parent/UnitStatusHealingFountain">
										<Key type="Bool" time="0" value="true"/>
										<Key type="Bool" time="0" value="false"/>
									</Controller>
									<!--<Controller type="Visibility" end="Pause" frame="$parent/$parent/$parent/$parent/BuffBackgroundImage">
										<Key type="Bool" time="0" value="true"/>
										<Key type="Bool" time="0" value="false"/>
									</Controller>-->
								</Animation>
							</Frame>
							
							<Frame type="Image" name="HealingActiveImage">
								<!--<Anchor side="Top" relative="$parent" pos="Min" offset="8"/>
								<Texture val="@UI/Storm_UI_Ingame_HealingWell_Active"/>-->
								<!--
								UI/Storm_UI_Ingame_HealingWell_Active=Assets\Textures\storm_ui_ingame_healingwell_active.dds
								-->
							</Frame>
							<Frame type="Image" name="HealingGlowImage">
								<!--<Texture val="@UI/Storm_UI_Ingame_HealingWell_Active_BorderGlow_Mask" layer="0"/>
								<Texture val="@UI/Storm_UI_Ingame_HealingWell_Active_BorderGlow" layer="1"/>-->
								<!--
								UI/Storm_UI_Ingame_HealingWell_Active_BorderGlow_Mask=Assets\Textures\storm_ui_ingame_healingwell_active_borderglow_mask.dds
								UI/Storm_UI_Ingame_HealingWell_Active_BorderGlow=Assets\Textures\storm_ui_ingame_healingwell_active_borderglow.dds
								-->
								<!--<Alpha val="196"/>-->
							</Frame>
							<Frame type="UnitStatusBehaviorIcon" name="UnitStatusHealingFountain">
								<Frame type="BehaviorIcon" name="BehaviorIcon">
									<Frame type="Image" name="HealingWellInactiveImage">
										<!--<Texture val="@UI/Storm_UI_Ingame_HealingWell_Inactive"/>-->
									</Frame>
								</Frame>
							</Frame>
							<Frame type="Image" name="HealingAvailableFlashImage">
								<Visible val="false"/>
								<!--<ImageMaskTexture val="@UI/Storm_UI_Ingame_HealingWell_Active"/>-->
								<!--
								UI/Storm_UI_Ingame_HealingWell_Active=Assets\Textures\storm_ui_ingame_healingwell_active.dds
								-->
								<!--<Color val="aaaaFF"/>-->
							</Frame>
							<Frame type="Image" name="HealingAvailableFlash2Image">
								<Visible val="false"/>
								<!--<ImageMaskTexture val="@UI/Storm_UI_Ingame_HealingWell_Active"/>-->
								<!--
								UI/Storm_UI_Ingame_HealingWell_Active=Assets\Textures\storm_ui_ingame_healingwell_active.dds
								-->
								<!--<Color val="aaaaFF"/>-->
							</Frame>
							<Frame type="Image" name="HealingAvailableFlash3Image">
								<Visible val="false"/>
								<!--<ImageMaskTexture val="@UI/Storm_UI_Ingame_HealingWell_Active"/>-->
								<!--
								UI/Storm_UI_Ingame_HealingWell_Active=Assets\Textures\storm_ui_ingame_healingwell_active.dds
								-->
								<!--<Color val="aaaaFF"/>-->
							</Frame>
						</Frame>
					</Frame>
				</Frame>
				
				<!-- TODO: does not update at all, name is read once
				<Frame type="UnitStatusPlayerName" name="PlayerName">
					<Anchor side="Top" relative="$PortraitPanel/Portrait" pos="Min" offset="10"/>
					<Anchor side="Left" relative="$PortraitPanel/Portrait" pos="Min" offset="44"/>
					<Anchor side="Right" relative="$PortraitPanel/Portrait" pos="Max" offset="-44"/>
					<Height val="34"/>

					<Frame type="Label" name="Label">
						<Anchor relative="$parent"/>
						<Style val="AhliSelectedUnitPlayerName"/>
						<Options val="ScaleToPreventTruncation"/>
					</Frame>
				</Frame>-->
				
				<Frame type="UnitStatusName" name="UnitName">
					<Anchor side="Bottom" relative="$PortraitPanel/Portrait" pos="Max" offset="-10"/>
					<Anchor side="Left" relative="$PortraitPanel/Portrait" pos="Min" offset="44"/>
					<Anchor side="Right" relative="$PortraitPanel/Portrait" pos="Max" offset="-44"/>
					<Height val="37"/>
					<NameType val="Unit"/>
					<UseNameTypeVisibilityRules val="False"/>

					<Frame type="Label" name="Label">
						<Anchor relative="$parent"/>
						<Style val="AhliSelectedUnitName"/>
						<Options val="ScaleToPreventTruncation"/>
					</Frame>
				</Frame>
				
				<!-- spell armor -->
				<Frame type="Image" name="AbilityArmorImage">
					<Anchor side="Top" relative="$PortraitPanel" pos="Min" offset="10"/>
					<Anchor side="Left" relative="$PortraitPanel" pos="Min" offset="22"/>
					<Width val="68"/>
					<Height val="68"/>
					<Texture val="Assets\Textures\storm_ui_play_filter_warrior-on.dds"/>
					<ColorAdjustMode val="Colorize"/>
					<LightAdjustColor val="#ColorWhite"/>
					<IgnoreParentColor val="true"/>
					<Color val="888888"/>
					<DarkAdjustColor val="ff23e9"/>
				</Frame>
				<Frame type="UnitStatusLabel" name="AbilityArmorValueLabel">
					<Anchor side="Top" relative="$parent/AbilityArmorImage" pos="Min" offset="0"/>
					<Anchor side="Left" relative="$parent/AbilityArmorImage" pos="Min" offset="2"/>
					<Anchor side="Right" relative="$parent/AbilityArmorImage" pos="Max" offset="2"/>
					<Anchor side="Bottom" relative="$parent/AbilityArmorImage" pos="Max" offset="0"/>
					<CurrentValue val="{$this/ArmorValue/@CurrentAbilityArmor}"/>
					<MaxValue val="1000"/>
					<HideMax val="True"/>
					<ShowGrouping val="true"/>
					<RoundMode val="None"/>
					<VisibleWhenUserControlled val="true"/>
					<Frame type="Label" name="StatusLabel">
						<Anchor relative="$parent"/>
						<Style val="Ahli_Portrait_MiniStat"/>
					</Frame>
					<Frame type="UnitStatusUnitArmor" name="ArmorValue">
						<Anchor relative="$parent"/>
						<UnitDamageType val="Hero"/>
						<DamageKind val="Ability"/>
					</Frame>
					<StateGroup name="ValueCheck">
						<DefaultState val="other"/>
						<State name="isZero">
							<When type="Property" frame="$this/ArmorValue" CurrentAbilityArmor="0"/>
							<Action type="SetProperty" frame="$parent/AbilityArmorImage" visible="false"/>
							<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
						</State>
						<State name="other">
							<Action type="SetProperty" frame="$parent/AbilityArmorImage" visible="true"/>
							<Action type="SetProperty" frame="$this/StatusLabel" visible="true"/>
						</State>
					</StateGroup>
				</Frame>
				
				<!-- physical armor vs heroes only -->
				<Frame type="Image" name="PhysicalHeroArmorImage">
					<Anchor side="Top" relative="$PortraitPanel" pos="Min" offset="48"/>
					<Anchor side="Left" relative="$PortraitPanel" pos="Min" offset="0"/>
					<Width val="68"/>
					<Height val="68"/>
					<Texture val="Assets\Textures\storm_ui_play_filter_warrior-on.dds"/>
					<ColorAdjustMode val="Colorize"/>
					<LightAdjustColor val="#ColorWhite"/>
					<IgnoreParentColor val="true"/>
					<Color val="888888"/>
					<DarkAdjustColor val="7c7c7c"/>
				</Frame>
				<Frame type="UnitStatusLabel" name="PhysicalHeroArmorValueLabel">
					<Anchor side="Top" relative="$parent/PhysicalHeroArmorImage" pos="Min" offset="0"/>
					<Anchor side="Left" relative="$parent/PhysicalHeroArmorImage" pos="Min" offset="2"/>
					<Anchor side="Right" relative="$parent/PhysicalHeroArmorImage" pos="Max" offset="2"/>
					<Anchor side="Bottom" relative="$parent/PhysicalHeroArmorImage" pos="Max" offset="0"/>
					<CurrentValue val="{$this/ArmorValue/@CurrentPhysicalArmor}"/>
					<MaxValue val="1000"/>
					<HideMax val="True"/>
					<ShowGrouping val="true"/>
					<RoundMode val="None"/>
					<VisibleWhenUserControlled val="true"/>
					<Frame type="Label" name="StatusLabel">
						<Anchor relative="$parent"/>
						<Style val="Ahli_Portrait_MiniStat"/>
					</Frame>
					<Frame type="UnitStatusUnitArmor" name="ArmorValue">
						<Anchor relative="$parent"/>
						<UnitDamageType val="Hero"/>
						<DamageKind val="Basic"/>
					</Frame>
					<StateGroup name="ValueCheck">
						<DefaultState val="other"/>
						<State name="isZero">
							<When type="Property" frame="$this/ArmorValue" CurrentPhysicalArmor="0"/>
							<Action type="SetProperty" frame="$parent/PhysicalHeroArmorImage" visible="false"/>
							<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
						</State>
						<State name="other">
							<Action type="SetProperty" frame="$parent/PhysicalHeroArmorImage" visible="true"/>
							<Action type="SetProperty" frame="$this/StatusLabel" visible="true"/>
						</State>
					</StateGroup>
				</Frame>
				
				<!-- damage -->
				<Frame type="Image" name="DamageImage">
					<Anchor side="Top" relative="$PortraitPanel" pos="Min" offset="104"/>
					<Anchor side="Left" relative="$PortraitPanel" pos="Min" offset="-4"/>
					<Width val="100"/>
					<Height val="100"/>
					<Texture val="Assets\Textures\storm_ui_play_filter_assassin-on.dds"/>
					<ColorAdjustMode val="Colorize"/>
					<LightAdjustColor val="#ColorWhite"/>
					<IgnoreParentColor val="true"/>
					<Color val="888888"/>
					<Visible val="{$parent/DamageValueLabel/@Visible}"/>
					<DarkAdjustColor val="cecece"/>
					<Rotation val="-97"/>
				</Frame>
				
				<Frame type="UnitStatusDamageLabel" name="BaseDamageValueLabel">
					<Anchor side="Top" relative="$parent/DamageImage" pos="Min" offset="9999"/>
					<Anchor side="Left" relative="$parent/DamageImage" pos="Min" offset="9999"/>
					<Anchor side="Right" relative="$parent/DamageImage" pos="Max" offset="9999"/>
					<Anchor side="Bottom" relative="$parent/DamageImage" pos="Max" offset="9999"/>
					<Handle val="SelectedUnitBaseDamageLabel"/>
					<HideMax val="True"/>
					<ShowMaxZero val="true"/>
					<ShowHeroicMultiplier val="false"/>
					<ShowMinionMultiplier val="false"/>
					<ShowStructureMultiplier val="false"/>
					<FractionDigits val="1"/>
					<RoundMode val="None"/>
					<Frame type="Label" name="StatusLabel">
						<Anchor relative="$parent"/>
					</Frame>
				</Frame>
				<Frame type="UnitStatusDamageLabel" name="MinionDamageValueLabel">
					<Anchor side="Top" relative="$parent/DamageImage" pos="Min" offset="9999"/>
					<Anchor side="Left" relative="$parent/DamageImage" pos="Min" offset="9999"/>
					<Anchor side="Right" relative="$parent/DamageImage" pos="Max" offset="9999"/>
					<Anchor side="Bottom" relative="$parent/DamageImage" pos="Max" offset="9999"/>
					<Handle val="SelectedUnitMinionDamageLabel"/>
					<HideMax val="True"/>
					<ShowMaxZero val="true"/>
					<ShowHeroicMultiplier val="false"/>
					<ShowMinionMultiplier val="true"/>
					<ShowStructureMultiplier val="false"/>
					<FractionDigits val="1"/>
					<RoundMode val="None"/>
					<Frame type="Label" name="StatusLabel">
						<Anchor relative="$parent"/>
					</Frame>
				</Frame>
				<Frame type="UnitStatusDamageLabel" name="StructureDamageValueLabel">
					<Anchor side="Top" relative="$parent/DamageImage" pos="Min" offset="9999"/>
					<Anchor side="Left" relative="$parent/DamageImage" pos="Min" offset="9999"/>
					<Anchor side="Right" relative="$parent/DamageImage" pos="Max" offset="9999"/>
					<Anchor side="Bottom" relative="$parent/DamageImage" pos="Max" offset="9999"/>
					<Handle val="SelectedUnitStructureDamageLabel"/>
					<HideMax val="True"/>
					<ShowMaxZero val="true"/>
					<ShowHeroicMultiplier val="false"/>
					<ShowMinionMultiplier val="false"/>
					<ShowStructureMultiplier val="true"/>
					<FractionDigits val="1"/>
					<RoundMode val="None"/>
					<Frame type="Label" name="StatusLabel">
						<Anchor relative="$parent"/>
					</Frame>
				</Frame>
				<Frame type="UnitStatusDamageLabel" name="HeroDamageValueLabel">
					<Anchor side="Top" relative="$parent/DamageImage" pos="Min" offset="9999"/>
					<Anchor side="Left" relative="$parent/DamageImage" pos="Min" offset="9999"/>
					<Anchor side="Right" relative="$parent/DamageImage" pos="Max" offset="9999"/>
					<Anchor side="Bottom" relative="$parent/DamageImage" pos="Max" offset="9999"/>
					<Handle val="SelectedUnitHeroDamageLabel"/>
					<HideMax val="True"/>
					<ShowMaxZero val="true"/>
					<ShowHeroicMultiplier val="true"/>
					<ShowMinionMultiplier val="false"/>
					<ShowStructureMultiplier val="false"/>
					<FractionDigits val="1"/>
					<RoundMode val="None"/>
					<Frame type="Label" name="StatusLabel">
						<Anchor relative="$parent"/>
					</Frame>
				</Frame>
				<Frame type="UnitStatusDamageLabel" name="DamageValueLabel">
					<Anchor side="Top" relative="$parent/DamageImage" pos="Min" offset="-2"/>
					<Anchor side="Left" relative="$parent/DamageImage" pos="Min" offset="6"/>
					<Anchor side="Right" relative="$parent/DamageImage" pos="Max" offset="6"/>
					<Anchor side="Bottom" relative="$parent/DamageImage" pos="Max" offset="-2"/>
					<HideMax val="True"/>
					<!--<ShowGrouping val="true"/>
					<VisibleWhenUserControlled val="true"/>-->
					<ShowMaxZero val="false"/>					
					<ShowHeroicMultiplier val="true"/>
					<ShowMinionMultiplier val="false"/>
					<ShowStructureMultiplier val="false"/>
					<Frame type="Label" name="StatusLabel">
						<Anchor relative="$parent"/>
						<Style val="Ahli_Portrait_MiniStat"/>
					</Frame>
				    <AcceptsMouseTooltip val="true" />
					<Tooltip val="{TooltipFormatFrame/@Text}"/>
					<TooltipAnchorFrame val="$parent/TooltipAnchorFrame"/>
					<Frame type="TextFormatFrame" name="TooltipFormatFrame">
						<Anchor relative="$parent"/>
						<FormatText val="@Ahli/portraitDamageTooltip"/>
						<Replacement index="0" val="{$SelectedUnitHeroDamageLabel/StatusLabel/@Text}"/>
						<ReplacedName index="0" val="exp2"/>
						<Replacement index="1" val="{$SelectedUnitBaseDamageLabel/StatusLabel/@Text}"/>
						<ReplacedName index="1" val="exp1"/>
						<Replacement index="2" val="{$SelectedUnitMinionDamageLabel/StatusLabel/@Text}"/>
						<ReplacedName index="2" val="exp3"/>
						<Replacement index="3" val="{$SelectedUnitStructureDamageLabel/StatusLabel/@Text}"/>
						<ReplacedName index="3" val="exp4"/>
					</Frame>
				</Frame>
				<Frame type="Frame" name="TooltipAnchorFrame">
				  <Anchor side="Top" relative="$parent/$parent" pos="Min" offset="2"/>
				  <Anchor side="Left" relative="$parent" pos="Min" offset="-1"/>
				  <Anchor side="Bottom" relative="$parent/$parent" pos="Max" offset="-2"/>
				  <Width val="10"/>
				  <TooltipAnchorPosition val="TopToBottom | LeftToLeft"/>
				</Frame>
				
				<!--
				<Frame type="Label" name="AttackDamageLabel">
					<Anchor side="Top" relative="$parent/EnergyBar" pos="Max" offset="10"/>
					<Anchor side="Left" relative="$parent/EnergyBar" pos="Min" offset="0"/>
					<Text val="@UI/HeroCharacterSheetPanel/AttackDamage"/>
					<Style val="AhliUnitStatTitle"/>
					<CollapseLayout val="true"/>
					<Visible val="{$parent/UnitStatusDamageLabel/@Visible}"/>
					<Style val="HeroStatNameLabel"/>
				</Frame>
				<Frame type="UnitStatusDamageLabel" name="UnitStatusDamageLabel" template="_BottomLeft/UnitStatusLabelTemplate">
					<Anchor side="Top" relative="$parent/AttackDamageLabel" pos="Min" offset="0"/>
					<Anchor side="Right" relative="$parent/EnergyBar" pos="Max" offset="0"/>
					<Width val="148"/>
					<Height val="24"/>
					<ShowMaxZero val="false"/>
					<CollapseLayout val="true"/>
					
					<Frame type="Label" name="StatusLabel">
						<Anchor relative="$parent"/>
						<Style val="AhliUnitStatValue"/>
					</Frame>
				</Frame>-->
				
				<!-- PlayerHeroSelectedTalentTreeFrame not functional 
				<Frame type="PlayerHeroSelectedTalentTreeFrame" name="HeroSelectedTalentTreeFrame" template="HeroLeaderPanel/PlayerHeroSelectedTalentTreeFrameTemplate">
					<Anchor side="Top" relative="$parent" pos="Min" offset="200"/>
					<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
					<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
					<Anchor side="Bottom" relative="$this" pos="Min" offset="0"/>
					<Height val="80"/>
					<Frame type="UnitStatusTalentIcon" name="TalentTreeIcon1">
						<Anchor side="Top" relative="$parent" pos="Mid" offset="0"/>
						<Anchor side="Bottom" relative="$parent" pos="Mid" offset="0"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
						<Anchor side="Right" relative="$this" pos="Min" offset="0"/>
					</Frame>
					<Frame type="UnitStatusTalentIcon" name="TalentTreeIcon2">
						<Anchor side="Top" relative="$parent" pos="Mid" offset="0"/>
						<Anchor side="Bottom" relative="$parent" pos="Mid" offset="0"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="80"/>
						<Anchor side="Right" relative="$this" pos="Min" offset="0"/>
					</Frame>
					<Frame type="UnitStatusTalentIcon" name="TalentTreeIcon3">
						<Anchor side="Top" relative="$parent" pos="Mid" offset="0"/>
						<Anchor side="Bottom" relative="$parent" pos="Mid" offset="0"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="160"/>
						<Anchor side="Right" relative="$this" pos="Min" offset="0"/>
					</Frame>
					<Frame type="UnitStatusTalentIcon" name="TalentTreeIcon4">
						<Anchor side="Top" relative="$parent" pos="Mid" offset="0"/>
						<Anchor side="Bottom" relative="$parent" pos="Mid" offset="0"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="240"/>
						<Anchor side="Right" relative="$this" pos="Min" offset="0"/>
					</Frame>
					<Frame type="UnitStatusTalentIcon" name="TalentTreeIcon5">
						<Anchor side="Top" relative="$parent" pos="Mid" offset="0"/>
						<Anchor side="Bottom" relative="$parent" pos="Mid" offset="0"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="320"/>
						<Anchor side="Right" relative="$this" pos="Min" offset="0"/>
					</Frame>
					<Frame type="UnitStatusTalentIcon" name="TalentTreeIcon6">
						<Anchor side="Top" relative="$parent" pos="Mid" offset="0"/>
						<Anchor side="Bottom" relative="$parent" pos="Mid" offset="0"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="400"/>
						<Anchor side="Right" relative="$this" pos="Min" offset="0"/>
					</Frame>
					<Frame type="UnitStatusTalentIcon" name="TalentTreeIcon7">
						<Anchor side="Top" relative="$parent" pos="Mid" offset="0"/>
						<Anchor side="Bottom" relative="$parent" pos="Mid" offset="0"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="480"/>
						<Anchor side="Right" relative="$this" pos="Min" offset="0"/>
					</Frame>
				</Frame>-->
				
				<!-- Hero-specific UI when selected -->
				<!-- HeroSpecificUIArray Location="Status" -->
	<!--			<Frame type="Frame" name="HeroSpecificStatusContainer">
					<Anchor relative="$GameUI/UIContainer/ConsoleUIContainer/HeroSpecificStatusContainer"/>-->
					
					<!--<Frame type="SelectionUnitStatusPanel" name="Tyrande" template="Tyrande/TyrandeFrame">
					</Frame>
					<Frame type="SelectionUnitStatusPanel" name="Uther" template="Uther/UtherFrame">
					</Frame>
					<Frame type="SelectionUnitStatusPanel" name="Tychus" template="Tychus/TychusFrame">
					</Frame>
					<Frame type="SelectionUnitStatusPanel" name="Illidan" template="Illidan/IllidanFrame">
					</Frame>
					<Frame type="SelectionUnitStatusPanel" name="Kerrigan" template="Kerrigan/KerriganFrame">
					</Frame>
					<Frame type="SelectionUnitStatusPanel" name="Sonya" template="Sonya/SonyaFrame">
					</Frame>
					<Frame type="SelectionUnitStatusPanel" name="Nova" template="Nova/NovaFrame">
					</Frame>
					<Frame type="SelectionUnitStatusPanel" name="Malfurion" template="Malfurion/MalfurionFrame">
					</Frame>
					<Frame type="SelectionUnitStatusPanel" name="Zeratul" template="Zeratul/ZeratulFrame">
					</Frame>
					<Frame type="SelectionUnitStatusPanel" name="ETC" template="ETC/ETCFrame">
					</Frame>
					<Frame type="SelectionUnitStatusPanel" name="Diablo" template="Diablo/DiabloFrame">
					</Frame>
					<Frame type="SelectionUnitStatusPanel" name="Arthas" template="Arthas/ArthasFrame">
					</Frame>
					<Frame type="SelectionUnitStatusPanel" name="Valla" template="Valla/VallaFrame">
					</Frame>-->
					<!--<Frame type="SelectionUnitStatusPanel" name="Greymane" template="Greymane/GreymaneFrame">
					</Frame>-->
					<!--<Frame type="SelectionUnitStatusPanel" name="Jaina" template="Jaina/JainaFrame">
					</Frame>-->
					<!--<Frame type="SelectionUnitStatusPanel" name="Xul" template="Xul/XulFrame">
					</Frame>-->
					<!--<Frame type="SelectionUnitStatusPanel" name="Nazeebo" template="Nazeebo/NazeeboFrame">
					</Frame>-->
					<!--<Frame type="SelectionUnitStatusPanel" name="LiMing" template="LiMing/LiMingPowerHungryFrame">
					</Frame>-->
					<!--<Frame type="SelectionUnitStatusPanel" name="Butcher" template="Butcher/ButcherFrame">
					</Frame>-->
					<!-- TODO: fix progress bar with new dataref tech?
					<Frame type="SelectionUnitStatusPanel" name="Alarak" template="Alarak/AlarakFrame">
						<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
							<Frame type="Image" name="AlarakSadismMeterBackGround">
								<Alpha val="0"/>
							</Frame>
							<Frame type="ProgressBar" name="AlarakSadismProgressBar">
								<Alpha val="0"/>
							</Frame>
							<Frame type="Frame" name="ProgressMask">
								<Alpha val="0"/>
							</Frame>
							<Frame type="Frame" name="ProgressGlowMask1">
								<Alpha val="0"/>
							</Frame>
							<Frame type="Frame" name="ProgressGlowMask2">
								<Alpha val="0"/>
							</Frame>
							<Frame type="Frame" name="ProgressGlowMask3">
								<Alpha val="0"/>
							</Frame>
							<Frame type="Image" name="ExtraGlowImage">
								<Alpha val="0"/>
							</Frame>
							<Frame type="Label" name="SadismLabel">
								<Text val="@Ahli/AlarakSadismLabel"/>
							</Frame>
							<Frame type="Label" name="SadismLabelPercent">
							</Frame>
							<Frame type="BehaviorIcon" name="SadismTooltipFrame">
								<Anchor side="Top" relative="$parent/SadismLabel" pos="Min" offset="0"/>
								<Anchor side="Left" relative="$parent/SadismLabel" pos="Min" offset="0"/>
								<Anchor side="Right" relative="$parent/SadismLabelPercent" pos="Max" offset="0"/>
								<Anchor side="Bottom" relative="$parent/SadismLabelPercent" pos="Max" offset="0"/>
							</Frame>
						</Frame>
					</Frame> -->
					<!-- cutscene frame + name label are not updated
					<Frame type="SelectionUnitStatusPanel" name="Auriel" template="Auriel/AurielBestowHopeFrame">
					</Frame> -->
					
					<!-- TODO: does that work? it should show cooldown of gall's movement ability 
					<Frame type="SelectionUnitStatusPanel" name="Cho" template="ChoGall/ChoFrame">
					</Frame>-->
					<!-- it's just a camera locking button
					<Frame type="SelectionUnitStatusPanel" name="Gall" template="ChoGall/GallFrame">
					</Frame>-->
					
					<!-- <Frame type="SelectionUnitStatusPanel" name="Dehaka" template="Dehaka/DehakaFrame">
					</Frame>-->
					<!-- does not work, displayed value set by triggers
					<Frame type="SelectionUnitStatusPanel" name="DVa" template="DVa/DVaMechDefenceMatrixFrame">
					</Frame> -->
					<!--<Frame type="SelectionUnitStatusPanel" name="Genji" template="Genji/GenjiFrame">
					</Frame> -->
					<!-- FIX: background image does not become visible when selection changed while guldan has stacks (not sure if working properly... sometimes maybe) -->
					<!-- TODO: is assumed to be buggy with selection changes -->
					<!--<Frame type="SelectionUnitStatusPanel" name="Guldan" template="_Guldan/GuldanRampantHellfireFrame">
					</Frame>-->
					<!-- <Frame type="SelectionUnitStatusPanel" name="Lucio" template="Lucio/LucioFrame">
					</Frame> -->
					<!-- only alters some stun stuff
					<Frame type="SelectionUnitStatusPanel" name="Malthael" template="Malthael/MalthaelFrame">
					</Frame>-->
					<!--<Frame type="SelectionUnitStatusPanel" name="Samuro" template="Samuro/SamuroFrame">
					</Frame>-->
					<!--<Frame type="SelectionUnitStatusPanel" name="Stukov" template="Stukov/StukovFrame">
					</Frame>-->
					<!-- custom implementation to try to fix the ending animation bug when selection changes
					<Frame type="SelectionUnitStatusPanel" name="Ragnaros" template="_TheFirelords/RagnarosMoltenPowerFrame">
					</Frame> -->
					<!-- game creates this already, info used to be in energy bar
					<Frame type="SelectionUnitStatusPanel" name="Tracer" template="Tracer/TracerWeaponandAmmoFrame">
					</Frame>-->
					<!--<Frame type="SelectionUnitStatusPanel" name="Valeera" template="Valeera/ValeeraFrame">
					</Frame>-->
					<!--<Frame type="SelectionUnitStatusPanel" name="Varian" template="Varian/VarianFrame">
					</Frame>-->
					<!-- edited to show guillotine and damage approximation -->
					<!--<Frame type="SelectionUnitStatusPanel" name="Zuljin" template="Zuljin/ZuljinTraitFrame">
						<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
							<Frame type="Label" name="ZuljinGuillotineValueLabel">
								<Unclipped val="true"/>
								<Text val="@Ahli/ZuljinGuillotineDamage"/>
							</Frame>
							<Frame type="Frame" name="ZuljinGuillotineParent">
								<Handle val="ZuljinGuillotinePanel"/>
								<Frame type="Image" name="ZuljinGuillotineIcon">
									<Unclipped val="true"/>
									<Frame type="BehaviorIcon" name="BehaviorTooltipFrame">
										<Unclipped val="true"/>
									</Frame>
								</Frame>
							</Frame>
							<Frame type="UnitStatusValidatorAnimElement" name="HealthTrackerValidators">
								<Anchor relative="$parent"/>
								
								<Animation name="ShowGuillotine">
									<Event event="Reset" action="Stop"/>
									<Event event="ZuljinHasGuillotineandBelow50Health" action="Restart, Play"/>
									<Event event="ZuljinHasGuillotineandAbove50Health" action="Restart, Play"/>
									<Event event="ZuljinHasNotGuillotineandBelow50Health" action="Stop"/>
									<Event event="ZuljinHasNotGuillotineandAbove50Health" action="Stop"/>
									
									<Controller type="Visibility" end="Pause" frame="$parent/ZuljinGuillotineParent">
										<Key type="Bool" time="0" value="True"/>
									</Controller>
									<Controller type="Visibility" end="Pause" frame="$parent/ZuljinGuillotineValueLabel">
										<Key type="Bool" time="0" value="True"/>
									</Controller>
								</Animation>
							</Frame>
						</Frame>
					</Frame>-->
					<!--<Frame type="SelectionUnitStatusPanel" name="Garrosh" template="Garrosh/GarroshTraitFrame">
					</Frame>-->
					<!--<Frame type="SelectionUnitStatusPanel" name="KelThuzad" template="KelThuzad/KelthuzadTraitFrame">
					</Frame>-->
					<!--<Frame type="SelectionUnitStatusPanel" name="Leoric" template="Leoric/LeoricTraitFrame">
						<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
							<Frame type="Frame" name="LeoricCheatDeathFrame">
								<Anchor side="Top" relative="$parent" pos="Max" offset="9999"/>
								<Anchor side="Left" relative="$parent" pos="Max" offset="9999"/>
								<Anchor side="Bottom" relative="$parent" pos="Max" offset="9999"/>
								<Anchor side="Right" relative="$parent" pos="Max" offset="9999"/>
								<Alpha val="0"/>
								<Visible val="False"/>
								<Frame type="Image" name="LeoricTraitImage">
									<Anchor side="Bottom" relative="$parent" pos="Max" offset="9999"/>
								</Frame>
							</Frame>
						</Frame>
					</Frame>-->
					<!--<Frame type="SelectionUnitStatusPanel" name="Chromie" template="Chromie/ChromieFrame">
					</Frame>
					<Frame type="SelectionUnitStatusPanel" name="Ana" template="Ana/AnaDynamicShootingFrame">
					</Frame>-->
					
					
					<!-- UI Frames not automatically created by "<HeroSpecificUIArray": -->
					<!--
					<Frame type="SelectionUnitStatusPanel" name="Thrall">
						<Height val="160"/>
						<Width val="200"/>
						<Anchor side="Bottom" relative="$parent" pos="Max" offset="-116"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="250"/>
						<AcceptsMouse val="False"/>
						<SpecificUnit val="HeroThrall"/>
							<Visible val="false"/>
						
						<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
							<Anchor relative="$parent"/>
							<AcceptsMouse val="False"/>
							<Frame type="Frame" name="Thrall" template="Thrall/ThrallTraitFrame">
							</Frame>
						</Frame>
					</Frame>
					<Frame type="SelectionUnitStatusPanel" name="Murky">
						<Height val="160"/>
						<Width val="200"/>
						<Anchor side="Bottom" relative="$parent" pos="Max" offset="-116"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="250"/>
						<AcceptsMouse val="False"/>
						<SpecificUnit val="HeroMurky"/>
							<Visible val="false"/>
						
						<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
							<Anchor relative="$parent"/>
							<AcceptsMouse val="False"/>
							<Frame type="Frame" name="Murky" template="Murky/MurkyEggFrame">
							</Frame>
						</Frame>
					</Frame>
					<Frame type="SelectionUnitStatusPanel" name="LostVikings">
						<Height val="160"/>
						<Width val="200"/>
						<Anchor side="Bottom" relative="$parent" pos="Max" offset="-116"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="250"/>
						<AcceptsMouse val="False"/>
						<SpecificUnit val="?"/>
						<Visible val="false"/>
						
						<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
							<Anchor relative="$parent"/>
							<AcceptsMouse val="False"/>
							<Frame type="Frame" name="LostVikings" template="LostVikings/LostVikingsHeroUnitStatusConsoleFrameTemplate">
								<Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
								<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
							</Frame>
						</Frame>
					</Frame>
-->

					<!-- game now creates zarya's hero UI properly for observers -->
					<!--
					<Frame type="SelectionUnitStatusPanel" name="Zarya" template="Zarya/ZaryaTraitFrame">
						<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
							<Frame type="Label" name="ZaryaTraitLabel">
								<Text val="@Ahli/ZaryaTraitDamageBoostFix"/>
							</Frame>
						</Frame>
					</Frame>-->
					<!-- game does not use it
					<Frame type="SelectionUnitStatusPanel" name="Brightwing" template="Brightwing/BrightwingFrame">
					</Frame>-->
					<!-- game does not use it
					<Frame type="SelectionUnitStatusPanel" name="Chen" template="Chen/ChenFrame">
					</Frame>-->
					<!-- game does not use it
					<Frame type="SelectionUnitStatusPanel" name="Falstad" template="Falstad/FalstadFrame">
					</Frame>-->
				<!--</Frame>-->
				
				
				<!-- stats panel -->
				<Frame type="ToggleControl" name="ToggleUnitStatsPanel">
					<Anchor relative="$parent"/>
					<Shortcut val="#Hotkey - Toggle Unit Stats"/>
					<AcceptsMouse val="false"/>
					<Visible val="false"/>
				</Frame>
				<Frame type="Frame" name="UnitStatsPanel">
					<Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
					<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
					<Width val="435"/>
					<Height val="560"/>
					<RenderPriority val="500"/>
					<!-- BUGS BUFF DISPLAY, DON'T USE VISIBILITY! <Visible val="false"/> -->
					<Alpha val="0"/>
					<Handle val="UnitDetails"/>
		
					<!-- <Animation name="Visibility">
							<Event event="Show" action="Play,ToggleDirection" frame="$parent/$parent/$parent/HeroCharacterSheetPanelContainer/HeroCharacterSheetPanel"/>
							<Event event="Hide" action="Play,ToggleDirection" frame="$parent/$parent/$parent/HeroCharacterSheetPanelContainer/HeroCharacterSheetPanel"/>
							<Event event="OnShown" action="Play,ToggleDirection" frame="$parent/$parent/$parent/HeroCharacterSheetPanelContainer/HeroCharacterSheetPanel"/>
							<Event event="OnHidden" action="Play,ToggleDirection" frame="$parent/$parent/$parent/HeroCharacterSheetPanelContainer/HeroCharacterSheetPanel"/>
						<Controller type="Fade" end="Pause">
							<Key type="Curve" time="0.0" value="128"/>
							<Key type="Curve" time="0.5" value="255"/>
						</Controller>
					</Animation> -->
					
					<!-- TODO: Fade this Frame when TalentTreeSelection is visible -->
					<!--<StateGroup name="Fade">
						<DefaultState val="Other"/>
						<State name="ForceHide">
							<When type="Property" frame="$GameUI/UIContainer/ConsoleUIContainer/FloatingCombatUnitSelectionPanel/UnitStatusFrame0/HeroTalentTreeSelectionPanel" alpha="255"/>
							<Action type="SendEvent" frame="$parent/ToggleUnitStatsPanel" event="OnHidden"/>
						</State>
						<State name="Show">
							<When type="Property" frame="$GameUI/UIContainer/ConsoleUIContainer/FloatingCombatUnitSelectionPanel/UnitStatusFrame0/HeroTalentTreeSelectionPanel" operator="LessThan" alpha="255"/>
							<When type="Property" frame="$parent/ToggleUnitStatsPanel" visible="true"/>
							<Action type="SendEvent" frame="$parent/ToggleUnitStatsPanel" event="OnShown"/>
						</State>
						<State name="Hide">
							<When type="Property" frame="$GameUI/UIContainer/ConsoleUIContainer/FloatingCombatUnitSelectionPanel/UnitStatusFrame0/HeroTalentTreeSelectionPanel" operator="LessThan" alpha="255"/>
							<When type="Property" frame="$parent/ToggleUnitStatsPanel" visible="false"/>
							<Action type="SendEvent" frame="$parent/ToggleUnitStatsPanel" event="OnHidden"/>
						</State>
						<State name="Other">
						</State>
					</StateGroup>-->

					
					<Animation name="Ahlimation">
						<Event event="Hide" action="DirectionReverse,Play"/>
						<Event event="Show" action="DirectionForward,Play"/>

						<Controller type="Fade" end="Pause">
							<Key type="Curve" time="0" value="0"/>
							<Key type="Curve" time="0.25" value="255"/>
						</Controller>
						
						<!-- Move ChatBar to the right -->
						<Controller type="Dimension" dimension="Width" relative="False" percentage="False" end="Pause" frame="$parent/$parent/$parent/$parent/FullscreenUpperContainer/ChatBarHorizOffset_B">
							<Key type="Curve" time="0" value="1" inout="Fast"/>
							<Key type="Curve" time="0.5" value="21" inout="Slow"/>
						</Controller>
					</Animation>
					
					<StateGroup name="Fade">
						<DefaultState val="Other"/>
						<State name="ForceHide">
							<When type="Property" frame="$GameUI_HeroTalentTreeSelectionPanel" visible="true"/>
							<Action type="SendEvent" event="Hide"/>
						</State>
						<State name="Show">
							<When type="Property" frame="$GameUI_HeroTalentTreeSelectionPanel" visible="false"/>
							<When type="Property" frame="$parent/ToggleUnitStatsPanel" visible="true"/>
							<Action type="SendEvent" event="Show"/>
						</State>
						<State name="Hide">
							<When type="Property" frame="$GameUI_HeroTalentTreeSelectionPanel" visible="false"/>
							<When type="Property" frame="$parent/ToggleUnitStatsPanel" visible="false"/>
							<Action type="SendEvent" event="Hide"/>
						</State>
						<State name="Other">
						</State>
					</StateGroup>
					
					<Frame type="Image" name="BorderImage">
						<Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="-15"/>
						<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
						<Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
						<Texture val="@UI/StormShopBackground"/>
						<TextureType val="Nineslice"/>
						<Unclipped val="true"/>
					</Frame>

					<Frame type="UnitStatusName" name="UnitStatusUnitName">
						<Anchor side="Top" relative="$parent" pos="Min" offset="10"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="15"/>
						<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
						<Anchor side="Bottom" relative="$this/Label" pos="Max" offset="0"/>
						<NameType val="Unit" />
						<UseNameTypeVisibilityRules val="True" />
						<Unclipped val="true"/>

						<Frame type="Label" name="Label">
							<Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
							<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
							<Style val="HeroStatsHeaderLabel"/>
							<Unclipped val="true"/>
							<Options val="NoWrapping | ScaleToPreventTruncation"/>
						</Frame>
					</Frame>
					
					
					<Frame type="Frame" name="HealthLabelA">
						<Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
						<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
						<Height val="1600"/>
						<Visible val="false"/>
						<CollapseLayout val="true"/>
					</Frame>
					<Frame type="Frame" name="HealthLabelB">
						<Anchor side="Top" relative="$parent/HealthLabelA" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
						<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
						<Height val="1600"/>
						<Visible val="false"/>
						<CollapseLayout val="true"/>
					</Frame>
					<Frame type="Frame" name="HealthLabelORgate">
						<Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
						<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
						<Anchor side="Bottom" relative="$parent/HealthLabelB" pos="Max" offset="0"/>
						
						<Frame type="Label" name="HealthLabel">
							<Anchor side="Top" relative="$parent/$parent/UnitStatusUnitName" pos="Max" offset="5"/>
							<Anchor side="Left" relative="$parent" pos="Min" offset="15"/>
							<Text val="@UI/Talents/Health"/>
							<Unclipped val="false"/>
							<Style val="HeroStatNameLabel"/>
						</Frame>
					</Frame>
					<Frame type="UnitStatusHealthLabel" name="UnitStatusHealthLabel" template="_BottomLeft/UnitStatusLabelTemplate">
						<Anchor side="Top" relative="$parent/HealthLabelORgate/HealthLabel" pos="Min" offset="0"/>
						<FractionDigits val="1"/>
						<Width val="156"/>
						<Unclipped val="true"/>
						<Visible val="false"/>
						<ShowWhileInvulnerable val="true"/>
						<Frame type="Label" name="StatusLabel">
							<Unclipped val="true"/>
						</Frame>
						<Animation name="Ahlimation">
							<Event event="OnShown" action="DirectionForward,Play"/>
							<Event event="OnHidden" action="DirectionReverse,Play"/>

							<Controller type="Visibility" end="Pause" frame="$parent/HealthLabelA">
								<Key type="Bool" time="0.0" value="false"/>
								<Key type="Bool" time="0.0" value="true"/>
							</Controller>
						</Animation>
					</Frame>
					<Frame type="Label" name="HealthRegenLabel">
						<Anchor side="Top" relative="$parent/HealthLabelORgate/HealthLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/HealthLabelORgate/HealthLabel" pos="Min" offset="0"/>
						<Text val="@UI/HeroCharacterSheetPanel/HealthRegen"/>
						<Unclipped val="true"/>
						<CollapseLayout val="true"/>
						<Visible val="false"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusHealthRegenLabel" name="UnitStatusHealthRegenLabel" template="_BottomLeft/UnitStatusLabelTemplate">
						<Anchor side="Top" relative="$parent/HealthRegenLabel" pos="Min" offset="0"/>
						<FractionDigits val="2"/>
						<Unclipped val="true"/>
						<ShowMaxZero val="false"/>
						<Frame type="Label" name="StatusLabel">
							<Unclipped val="true"/>
						</Frame>
						<Animation name="Ahlimation">
							<Event event="OnShown" action="DirectionForward,Play"/>
							<Event event="OnHidden" action="DirectionReverse,Play"/>

							<Controller type="Visibility" end="Pause" frame="$parent/HealthRegenLabel">
								<Key type="Bool" time="0.0" value="false"/>
								<Key type="Bool" time="0.0" value="true"/>
							</Controller>
							<Controller type="Visibility" end="Pause" frame="$parent/HealthLabelB">
								<Key type="Bool" time="0.0" value="false"/>
								<Key type="Bool" time="0.0" value="true"/>
							</Controller>
						</Animation>
					</Frame>
					
					<Frame type="Label" name="ShieldsLabel">
						<Anchor side="Top" relative="$parent/HealthRegenLabel" pos="Max" offset="15"/>
						<Anchor side="Left" relative="$parent/HealthRegenLabel" pos="Min" offset="0"/>
						<Text val="@e_gameUIStringShields"/>
						<Unclipped val="true"/>
						<CollapseLayout val="true"/>
						<Visible val="false"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusShieldsLabel" name="UnitStatusShieldsLabel" template="_BottomLeft/UnitStatusLabelTemplate">
						<Anchor side="Top" relative="$parent/ShieldsLabel" pos="Min" offset="0"/>
						<FractionDigits val="1"/>
						<Width val="156"/>
						<ShowMaxZero val="false"/>
						<Visible val="false"/>
						<Frame type="Label" name="StatusLabel">
							<Unclipped val="true"/>
						</Frame>
						<Animation name="Ahlimation">
							<Event event="OnShown" action="DirectionForward,Play"/>
							<Event event="OnHidden" action="DirectionReverse,Play"/>

							<Controller type="Visibility" end="Pause" frame="$parent/ShieldsLabel">
								<Key type="Bool" time="0.0" value="false"/>
								<Key type="Bool" time="0.0" value="true"/>
							</Controller>
						</Animation>
					</Frame>
					
					<Frame type="UnitStatusEnergyLabel" name="UnitStatusEnergyLabel">
						<Anchor side="Top" relative="$parent/ShieldsLabel" pos="Max" offset="15"/>
						<Anchor side="Left" relative="$parent/ShieldsLabel" pos="Min" offset="0"/>
						<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
						<Height val="27"/>
						<VisibleWhenUserControlled val="true"/>
						<ShowGrouping val="true"/>
						<RoundMode val="None"/>
						<CollapseLayout val="true"/>
						<ShowMaxZero val="false"/>
						
						<Frame type="Label" name="StatusLabel">
							<Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
							<Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
							<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
							<Width val="123"/>
							<Style val="HeroStatDescriptionLabel"/>
							<Unclipped val="true"/>
						</Frame>

						<Frame type="UnitStatusEnergyType" name="EnergyLabel">
							<Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
							<Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
							<Anchor side="Right" relative="$parent/StatusLabel" pos="Min" offset="0"/>
							
							<!-- Energy Type Label displaying actor data -->
							<Frame type="Label" name="Label">
								<Anchor relative="$parent"/>
								<Unclipped val="true"/>
								<Style val="HeroStatNameLabel"/>
								
								<Animation name="Show">
									<Event event="Show" action="Reset,Play"/>
									<Controller type="Visibility" end="Pause">
										<Key type="Bool" time="0" value="True"/>
									</Controller>
								</Animation>
								<Animation name="Hide">
									<Event event="Hide" action="Reset,Play"/>
									<Controller type="Visibility" end="Pause">
										<Key type="Bool" time="0" value="False"/>
									</Controller>
								</Animation>
							</Frame>
							
							<!-- Structure Ammunition -->
							<Frame type="Label" name="AmmunitionLabel">
								<Anchor relative="$parent"/>
								<Unclipped val="true"/>
								<Text val="@Ahli/Ammunition"/>
								<Visible val="false"/>
								<Style val="HeroStatNameLabel"/>
								
								<Animation name="Show">
									<Event event="Show" action="Reset,Play"/>
									<Controller type="Visibility" end="Pause">
										<Key type="Bool" time="0" value="True"/>
									</Controller>
								</Animation>
								<Animation name="Hide">
									<Event event="Hide" action="Reset,Play"/>
									<Controller type="Visibility" end="Pause">
										<Key type="Bool" time="0" value="False"/>
									</Controller>
								</Animation>
							</Frame>
							
							<!-- State detectors -->
							<Frame type="UnitStatusBehaviorAnim" name="Towers">
								<Anchor relative="$parent"/>
								<Behavior val="StructureAmmoMonitor"/>
								
								<Frame type="Frame" name="StructureAmmoMonitorState">
									<Anchor relative="$parent"/>
									<Visible val="false"/>
								</Frame>
								
								<Animation name="Ahlimation">
									<Event event="BehaviorCreate" action="Reset,DirectionForward,Play"/>
									<Event event="BehaviorDestroy" action="DirectionReverse,Play"/>
									
									<Controller type="Visibility" end="Pause" frame="StructureAmmoMonitorState">
										<Key type="Bool" time="0" value="false"/>
										<Key type="Bool" time="0" value="true"/>
									</Controller>
								</Animation>
							</Frame>
							<Frame type="UnitStatusBehaviorAnim" name="Tracer">
								<Anchor relative="$parent"/>
								<Behavior val="TracerReloadController"/>
								
								<Frame type="Frame" name="TracerReloadControllerState">
									<Anchor relative="$parent"/>
									<Visible val="false"/>
								</Frame>
								
								<Animation name="Ahlimation">
									<Event event="BehaviorCreate" action="Reset,DirectionForward,Play"/>
									<Event event="BehaviorDestroy" action="DirectionReverse,Play"/>
									
									<Controller type="Visibility" end="Pause" frame="TracerReloadControllerState">
										<Key type="Bool" time="0" value="false"/>
										<Key type="Bool" time="0" value="true"/>
									</Controller>
								</Animation>
							</Frame>
							
							<StateGroup name="EnergyTypeLabelSwitcher">
								<!--<DefaultState val="UnitEnergyType"/>-->
								<State name="Towers1">
									<When type="Property" frame="Towers/StructureAmmoMonitorState" visible="true"/>
									<When type="Property" frame="Tracer/TracerReloadControllerState" visible="true"/>
									<Action type="SendEvent" frame="Label" event="Hide"/>
									<Action type="SendEvent" frame="AmmunitionLabel" event="Show"/>
								</State>
								<State name="Towers2">
									<When type="Property" frame="Towers/StructureAmmoMonitorState" visible="true"/>
									<When type="Property" frame="Tracer/TracerReloadControllerState" visible="false"/>
									<Action type="SendEvent" frame="Label" event="Hide"/>
									<Action type="SendEvent" frame="AmmunitionLabel" event="Show"/>
								</State>
								<State name="Tracer">
									<When type="Property" frame="Towers/StructureAmmoMonitorState" visible="false"/>
									<When type="Property" frame="Tracer/TracerReloadControllerState" visible="true"/>
									<Action type="SendEvent" frame="Label" event="Hide"/>
									<Action type="SendEvent" frame="AmmunitionLabel" event="Show"/>
								</State>
								<State name="UnitEnergyType">
									<When type="Property" frame="Towers/StructureAmmoMonitorState" visible="false"/>
									<When type="Property" frame="Tracer/TracerReloadControllerState" visible="false"/>
									<Action type="SendEvent" frame="Label" event="Show"/>
									<Action type="SendEvent" frame="AmmunitionLabel" event="Hide"/>
								</State>
							</StateGroup>
						</Frame>
					</Frame>
					<Frame type="UnitStatusEnergyRegenLabel" name="UnitStatusEnergyRegenLabel">
						<Anchor side="Top" relative="$parent/UnitStatusEnergyLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/UnitStatusEnergyLabel" pos="Min" offset="0"/>
						<Anchor side="Right" relative="$parent/UnitStatusEnergyLabel" pos="Max" offset="0"/>
						<Height val="27"/>
						<VisibleWhenUserControlled val="true"/>
						<ShowGrouping val="true"/>
						<RoundMode val="None"/>
						<CollapseLayout val="true"/>
						<FractionDigits val="2"/>
						<ShowMaxZero val="false"/>
						
						<Frame type="Label" name="StatusLabel">
							<Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
							<Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
							<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
							<Width val="123"/>
							<Style val="HeroStatDescriptionLabel"/>
							<Unclipped val="true"/>
						</Frame>

						<Frame type="Label" name="EnergyRegenLabel">
							<Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
							<Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
							<Anchor side="Right" relative="$parent/StatusLabel" pos="Min" offset="0"/>
							<Text val="@UI/HeroCharacterSheetPanel/EnergyRegen"/>
							<Unclipped val="true"/>
							<Style val="HeroStatNameLabel"/>
						</Frame>
					</Frame>
					<!-- This is a hidden UnitStatusEnergyLabel used purely for padding and collapsing -->
					<Frame type="UnitStatusEnergyLabel" name="EnergyRegenPadding">
						<Anchor side="Top" relative="$parent/UnitStatusEnergyRegenLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/UnitStatusEnergyRegenLabel" pos="Min" offset="0"/>
						<Anchor side="Right" relative="$parent/UnitStatusEnergyRegenLabel" pos="Max" offset="0"/>
						<Height val="15"/>
						<VisibleWhenUserControlled val="true"/>
						<ShowGrouping val="true"/>
						<RoundMode val="None"/>
						<CollapseLayout val="true"/>
						<ShowMaxZero val="false"/>

						<Frame type="Label" name="StatusLabel">
							<Anchor relative="$parent"/>
							<Visible val="false"/>
						</Frame>
					</Frame>
					
					<Frame type="Label" name="AbilityPowerLabel">
						<Anchor side="Top" relative="$parent/EnergyRegenPadding" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/EnergyRegenPadding" pos="Min" offset="0"/>
						<Text val="@UI/Talents/AbilityPower"/>
						<Unclipped val="true"/>
						<CollapseLayout val="true"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusAbilityPowerLabel" name="UnitStatusAbilityPowerLabel" template="_BottomLeft/UnitStatusLabelTemplate">
						<Anchor side="Top" relative="$parent/AbilityPowerLabel" pos="Min" offset="0"/>
						<Frame type="Label" name="StatusLabel">
							<Unclipped val="true"/>
						</Frame>
						<StateGroup name="ValueCheck">
							<DefaultState val="other"/>
							<State name="isZero">
								<When type="Property" frame="$this/StatusLabel" text="0%"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
								<Action type="SetProperty" frame="$parent/AbilityPowerLabel" visible="false"/>
							</State>
							<State name="other">
								<Action type="SetProperty" frame="$this/StatusLabel" visible="true"/>
								<Action type="SetProperty" frame="$parent/AbilityPowerLabel" visible="true"/>
							</State>
						</StateGroup>
					</Frame>
					
					<!-- might not be used anymore, but I keep it because it exists -->
					<Frame type="Label" name="CooldownReductionLabel">
						<Anchor side="Top" relative="$parent/AbilityPowerLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/AbilityPowerLabel" pos="Min" offset="0"/>
						<Text val="@UI/Talents/CooldownReduction"/>
						<Unclipped val="true"/>
						<CollapseLayout val="true"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusCooldownReductionLabel" name="UnitStatusCooldownReductionLabel" template="_BottomLeft/UnitStatusLabelTemplate">
						<Anchor side="Top" relative="$parent/CooldownReductionLabel" pos="Min" offset="0"/>
						<Frame type="Label" name="StatusLabel">
							<Unclipped val="true"/>
						</Frame>
						<StateGroup name="ValueCheck">
							<DefaultState val="other"/>
							<State name="isZero">
								<When type="Property" frame="$this/StatusLabel" text="0%"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
								<Action type="SetProperty" frame="$parent/CooldownReductionLabel" visible="false"/>
							</State>
							<State name="other">
								<Action type="SetProperty" frame="$this/StatusLabel" visible="true"/>
								<Action type="SetProperty" frame="$parent/CooldownReductionLabel" visible="true"/>
							</State>
						</StateGroup>
					</Frame>
					
					<Frame type="Label" name="AbilityArmorLabel">
						<Anchor side="Top" relative="$parent/CooldownReductionLabel" pos="Max" offset="15"/>
						<Anchor side="Left" relative="$parent/CooldownReductionLabel" pos="Min" offset="0"/>
						<Text val="@UI/HeroCharacterSheetPanel/ArmorAbility"/>
						<Unclipped val="true"/>
						<CollapseLayout val="true"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusLabel" name="AbilityArmorValueLabel" template="_BottomLeft/UnitStatusLabelTemplate">
						<Anchor side="Top" relative="$parent/AbilityArmorLabel" pos="Min" offset="0"/>
						<CurrentValue val="{$this/ArmorValue/@CurrentAbilityArmor}"/>
						<MaxValue val="1000"/>
						<HideMax val="True"/>
						<Frame type="Label" name="StatusLabel">
							<Unclipped val="true"/>
						</Frame>
						<Frame type="UnitStatusUnitArmor" name="ArmorValue">
							<Anchor relative="$parent" offset="-5"/>
							<UnitDamageType val="Hero"/>
							<DamageKind val="Ability"/>
						</Frame>
						<StateGroup name="ValueCheck">
							<DefaultState val="other"/>
							<State name="isZero">
								<When type="Property" frame="$this/ArmorValue" CurrentAbilityArmor="0"/>
								<Action type="SetProperty" frame="$parent/AbilityArmorLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="other">
								<Action type="SetProperty" frame="$parent/AbilityArmorLabel" visible="true"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="true"/>
							</State>
						</StateGroup>
					</Frame>
					
					<Frame type="Label" name="PhysicalArmorLabel">
						<Anchor side="Top" relative="$parent/AbilityArmorLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/AbilityArmorLabel" pos="Min" offset="0"/>
						<Text val="@UI/HeroCharacterSheetPanel/ArmorPhysical"/>
						<Unclipped val="true"/>
						<CollapseLayout val="true"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusLabel" name="PhysicalArmorValueLabel" template="_BottomLeft/UnitStatusLabelTemplate">
						<Anchor side="Top" relative="$parent/PhysicalArmorLabel" pos="Min" offset="0"/>
						<CurrentValue val="{$this/ArmorValue/@CurrentPhysicalArmor}"/>
						<MaxValue val="1000"/>
						<HideMax val="True"/>
						<Frame type="Label" name="StatusLabel">
							<Unclipped val="true"/>
						</Frame>
						<Frame type="UnitStatusUnitArmor" name="ArmorValue">
							<Anchor relative="$parent" offset="-5"/>
							<UnitDamageType val="Minion"/>
							<DamageKind val="Basic"/>
						</Frame>
						<StateGroup name="ValueCheck">
							<DefaultState val="other"/>
							<State name="isZero">
								<When type="Property" frame="$this/ArmorValue" CurrentPhysicalArmor="0"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="other">
								<Action type="SetProperty" frame="$parent/PhysicalArmorLabel" visible="true"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="true"/>
							</State>
						</StateGroup>
					</Frame>
					<Frame type="Label" name="PhysicalArmorHeroOnlyLabel">
						<Anchor side="Top" relative="$parent/PhysicalArmorLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/PhysicalArmorLabel" pos="Min" offset="0"/>
						<Text val="@UI/HeroCharacterSheetPanel/ArmorPhysicalHeroOnly"/>
						<Unclipped val="true"/>
						<CollapseLayout val="true"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusLabel" name="PhysicalArmorHeroOnlyValueLabel" template="_BottomLeft/UnitStatusLabelTemplate">
						<Anchor side="Top" relative="$parent/PhysicalArmorHeroOnlyLabel" pos="Min" offset="0"/>
						<CurrentValue val="{$this/ArmorValue/@CurrentPhysicalArmor}"/>
						<MaxValue val="1000"/>
						<HideMax val="True"/>
						<Frame type="Label" name="StatusLabel">
							<Unclipped val="true"/>
						</Frame>
						<Frame type="UnitStatusUnitArmor" name="ArmorValue">
							<Anchor relative="$parent" offset="-5"/>
							<UnitDamageType val="Hero"/>
							<DamageKind val="Basic"/>
						</Frame>
						<StateGroup name="ValueCheck">
							<DefaultState val="other"/>
							<State name="isZero">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="0"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<!--<State name="equalToGenericArmor">
								<When type="Property" frame="$this/ArmorValue" operator="notEqual" CurrentPhysicalArmor="0"/>
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="{($parent/PhysicalArmorValueLabel/ArmorValue/@CurrentPhysicalArmor)}"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>-->
							<State name="equalToGenericArmor1">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="1"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="1"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor2">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="2"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="2"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor3">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="3"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="3"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor4">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="4"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="4"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor5">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="5"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="5"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor6">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="6"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="6"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor7">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="7"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="7"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor8">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="8"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="8"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor9">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="9"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="9"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor10">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="10"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="10"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor11">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="11"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="11"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor12">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="12"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="12"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor13">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="13"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="13"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor14">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="14"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="14"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor15">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="15"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="15"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor16">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="16"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="16"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor17">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="17"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="17"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor18">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="18"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="18"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor19">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="19"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="19"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor20">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="20"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="20"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor21">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="21"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="21"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor22">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="22"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="22"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor23">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="23"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="23"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor24">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="24"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="24"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor25">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="25"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="25"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor26">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="26"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="26"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor27">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="27"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="27"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor28">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="28"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="28"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor29">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="29"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="29"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor30">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="30"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="30"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor31">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="31"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="31"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor32">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="32"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="32"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor33">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="33"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="33"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor34">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="34"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="34"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor35">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="35"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="35"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor36">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="36"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="36"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor37">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="37"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="37"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor38">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="38"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="38"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor39">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="39"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="39"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor40">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="40"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="40"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor41">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="41"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="41"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor42">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="42"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="42"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor43">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="43"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="43"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor44">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="44"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="44"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor45">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="45"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="45"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor46">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="46"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="46"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor47">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="47"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="47"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor48">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="48"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="48"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor49">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="49"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="49"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor50">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="50"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="50"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor51">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="51"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="51"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor52">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="52"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="52"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor53">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="53"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="53"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor54">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="54"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="54"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor55">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="55"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="55"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor56">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="56"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="56"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor57">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="57"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="57"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor58">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="58"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="58"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor59">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="59"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="59"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor60">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="60"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="60"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor61">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="61"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="61"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor62">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="62"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="62"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor63">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="63"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="63"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor64">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="64"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="64"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor65">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="65"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="65"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor66">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="66"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="66"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor67">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="67"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="67"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor68">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="68"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="68"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor69">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="69"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="69"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor70">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="70"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="70"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor71">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="71"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="71"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor72">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="72"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="72"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor73">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="73"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="73"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor74">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="74"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="74"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmor75">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="75"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="75"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM1">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-1"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-1"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM2">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-2"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-2"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM3">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-3"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-3"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM4">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-4"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-4"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM5">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-5"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-5"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM6">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-6"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-6"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM7">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-7"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-7"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM8">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-8"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-8"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM9">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-9"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-9"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM10">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-10"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-10"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM11">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-11"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-11"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM12">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-12"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-12"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM13">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-13"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-13"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM14">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-14"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-14"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM15">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-15"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-15"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM16">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-16"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-16"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM17">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-17"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-17"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM18">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-18"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-18"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM19">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-19"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-19"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM20">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-20"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-20"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM21">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-21"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-21"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM22">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-22"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-22"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM23">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-23"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-23"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM24">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-24"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-24"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM25">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-25"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-25"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM26">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-26"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-26"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM27">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-27"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-27"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM28">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-28"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-28"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM29">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-29"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-29"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM30">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-30"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-30"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM31">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-31"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-31"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM32">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-32"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-32"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM33">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-33"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-33"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM34">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-34"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-34"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM35">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-35"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-35"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM36">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-36"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-36"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM37">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-37"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-37"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM38">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-38"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-38"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM39">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-39"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-39"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM40">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-40"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-40"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM41">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-41"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-41"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM42">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-42"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-42"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM43">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-43"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-43"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM44">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-44"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-44"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM45">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-45"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-45"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM46">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-46"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-46"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM47">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-47"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-47"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM48">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-48"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-48"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM49">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-49"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-49"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM50">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-50"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-50"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM51">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-51"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-51"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM52">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-52"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-52"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM53">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-53"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-53"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM54">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-54"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-54"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM55">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-55"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-55"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM56">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-56"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-56"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM57">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-57"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-57"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM58">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-58"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-58"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM59">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-59"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-59"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM60">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-60"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-60"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM61">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-61"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-61"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM62">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-62"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-62"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM63">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-63"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-63"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM64">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-64"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-64"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM65">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-65"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-65"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM66">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-66"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-66"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM67">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-67"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-67"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM68">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-68"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-68"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM69">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-69"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-69"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM70">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-70"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-70"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM71">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-71"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-71"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM72">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-72"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-72"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM73">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-73"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-73"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM74">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-74"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-74"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="equalToGenericArmorM75">
								<When type="Property" frame="$this/ArmorValue" operator="Equal" CurrentPhysicalArmor="-75"/>
								<When type="Property" frame="$parent/PhysicalArmorValueLabel/ArmorValue" operator="Equal" CurrentPhysicalArmor="-75"/>
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
							</State>
							<State name="other">
								<Action type="SetProperty" frame="$parent/PhysicalArmorHeroOnlyLabel" visible="true"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="true"/>
							</State>
						</StateGroup>
					</Frame>
					
					<Frame type="Label" name="AttackRangeLabel">
						<Anchor side="Top" relative="$parent/PhysicalArmorHeroOnlyLabel" pos="Max" offset="15"/>
						<Anchor side="Left" relative="$parent/PhysicalArmorHeroOnlyLabel" pos="Min" offset="0"/>
						<Text val="@UI/HeroCharacterSheetPanel/AttackRange"/>
						<Unclipped val="true"/>
						<CollapseLayout val="true"/>
						<Visible val="false"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusAttackRangeLabel" name="UnitStatusAttackRangeLabel" template="_BottomLeft/UnitStatusLabelTemplate">
						<Anchor side="Top" relative="$parent/AttackRangeLabel" pos="Min" offset="0"/>
						<FractionDigits val="1"/>
						<ShowMaxZero val="false"/>
						<Visible val="false"/>
						<Frame type="Label" name="StatusLabel">
							<Unclipped val="true"/>
						</Frame>
						<Animation name="Ahlimation">
							<Event event="OnShown" action="DirectionForward,Play"/>
							<Event event="OnHidden" action="DirectionReverse,Play"/>

							<Controller type="Visibility" end="Pause" frame="$parent/AttackRangeLabel">
								<Key type="Bool" time="0.0" value="false"/>
								<Key type="Bool" time="0.0" value="true"/>
							</Controller>
						</Animation>
					</Frame>
					
					<Frame type="Label" name="AttackDamageLabel">
						<Anchor side="Top" relative="$parent/AttackRangeLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/AttackRangeLabel" pos="Min" offset="0"/>
						<Text val="@UI/Talents/AttackDamage"/>
						<Unclipped val="true"/>
						<CollapseLayout val="true"/>
						<Visible val="false"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusDamageLabel" name="UnitStatusDamageLabel" template="_BottomLeft/UnitStatusLabelTemplate">
						<Anchor side="Top" relative="$parent/AttackDamageLabel" pos="Min" offset="0"/>
						<FractionDigits val="1"/>
						<ShowMaxZero val="false"/>
						<Visible val="false"/>
						<ShowHeroicMultiplier val="true"/>
						<ShowMinionMultiplier val="false"/>
						<ShowStructureMultiplier val="false"/>
						<Frame type="Label" name="StatusLabel">
							<Unclipped val="true"/>
						</Frame>
						
						<Animation name="Ahlimation">
							<Event event="OnShown" action="DirectionForward,Play"/>
							<Event event="OnHidden" action="DirectionReverse,Play"/>

							<Controller type="Visibility" end="Pause" frame="$parent/AttackDamageLabel">
								<Key type="Bool" time="0.0" value="false"/>
								<Key type="Bool" time="0.0" value="true"/>
							</Controller>
						</Animation>
					</Frame>
					
					<Frame type="Label" name="AttackSpeedLabel">
						<Anchor side="Top" relative="$parent/AttackDamageLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/AttackDamageLabel" pos="Min" offset="0"/>
						<Text val="@UI/HeroCharacterSheetPanel/AttackSpeed"/>
						<Unclipped val="true"/>
						<CollapseLayout val="true"/>
						<Visible val="false"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusAttackSpeedLabel" name="UnitStatusAttackSpeedLabel" template="_BottomLeft/UnitStatusLabelTemplate">
						<Anchor side="Top" relative="$parent/AttackSpeedLabel" pos="Min" offset="0"/>
						<FractionDigits val="2"/>
						<ShowMaxZero val="false"/>
						<Visible val="false"/>
						<Frame type="Label" name="StatusLabel">
							<Unclipped val="true"/>
						</Frame>
						<Animation name="Ahlimation">
							<Event event="OnShown" action="DirectionForward,Play"/>
							<Event event="OnHidden" action="DirectionReverse,Play"/>

							<Controller type="Visibility" end="Pause" frame="$parent/AttackSpeedLabel">
								<Key type="Bool" time="0.0" value="false"/>
								<Key type="Bool" time="0.0" value="true"/>
							</Controller>
						</Animation>
					</Frame>
					
					<Frame type="Label" name="LifeStealLabel">
						<Anchor side="Top" relative="$parent/AttackSpeedLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/AttackSpeedLabel" pos="Min" offset="0"/>
						<Text val="@UI/HeroCharacterSheetPanel/LifeSteal"/>
						<Unclipped val="true"/>
						<CollapseLayout val="true"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusLifeStealLabel" name="UnitStatusLifeStealLabel" template="_BottomLeft/UnitStatusLabelTemplate">
						<Anchor side="Top" relative="$parent/LifeStealLabel" pos="Min" offset="0"/>
						<FractionDigits val="0"/>
						<Frame type="Label" name="StatusLabel">
							<Unclipped val="true"/>
						</Frame>
						<StateGroup name="ValueCheck">
							<DefaultState val="other"/>
							<State name="isZero">
								<When type="Property" frame="$this/StatusLabel" text="0%"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
								<Action type="SetProperty" frame="$parent/LifeStealLabel" visible="false"/>
							</State>
							<State name="other">
								<Action type="SetProperty" frame="$this/StatusLabel" visible="true"/>
								<Action type="SetProperty" frame="$parent/LifeStealLabel" visible="true"/>
							</State>
						</StateGroup>
					</Frame>
					
					<Frame type="Label" name="StructureDamageLabel">
						<Anchor side="Top" relative="$parent/LifeStealLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/LifeStealLabel" pos="Min" offset="0"/>
						<Text val="@UI/HeroCharacterSheetPanel/StructureDamage"/>
						<Unclipped val="true"/>
						<CollapseLayout val="true"/>
						<Visible val="false"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusDamageLabel" name="UnitStatusStructureDamageLabel" template="_BottomLeft/UnitStatusLabelTemplate">
						<Anchor side="Top" relative="$parent/StructureDamageLabel" pos="Min" offset="0"/>
						<FractionDigits val="1"/>
						<ShowMaxZero val="false"/>
						<Visible val="false"/>
						<ShowHeroicMultiplier val="false"/>
						<ShowMinionMultiplier val="false"/>
						<ShowStructureMultiplier val="true"/>
						<Frame type="Label" name="StatusLabel">
							<Unclipped val="true"/>
						</Frame>
						<StateGroup name="ValueCheck">
							<DefaultState val="other"/>
							<!-- TEST does not work... how can text of two frames be compared?
							<State name="isNotEqual">
								<When type="Property" frame="$this" visible="true"/>
								<When type="Property" frame="$this/StatusLabel" text="{$parent/UnitStatusDamageLabel/StatusLabel/@Text}"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
								<Action type="SetProperty" frame="$parent/StructureDamageLabel" visible="false"/>
							</State> -->
							<State name="isMaxZero">
								<When type="Property" frame="$this" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
								<Action type="SetProperty" frame="$parent/StructureDamageLabel" visible="false"/>
							</State>
							<State name="other">
								<Action type="SetProperty" frame="$this/StatusLabel" visible="true"/>
								<Action type="SetProperty" frame="$parent/StructureDamageLabel" visible="true"/>
							</State>
						</StateGroup>
					</Frame>
					
					<Frame type="Label" name="MoveSpeedLabel">
						<Anchor side="Top" relative="$parent/StructureDamageLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/StructureDamageLabel" pos="Min" offset="0"/>
						<Text val="@UI/Talents/MovementSpeed"/>
						<Unclipped val="true"/>
						<CollapseLayout val="true"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusMoveSpeedLabel" name="UnitStatusMoveSpeedLabel" template="_BottomLeft/UnitStatusLabelTemplate">
						<Anchor side="Top" relative="$parent/MoveSpeedLabel" pos="Min" offset="0"/>
						<ShowMaxZero val="false"/>
						<Frame type="Label" name="StatusLabel">
							<Unclipped val="true"/>
						</Frame>
						<StateGroup name="ValueCheck">
							<DefaultState val="other"/>
							<State name="isNormal">
								<When type="Property" frame="$this" visible="true"/>
								<When type="Property" frame="$this/StatusLabel" text="100%"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
								<Action type="SetProperty" frame="$parent/MoveSpeedLabel" visible="false"/>
							</State>
							<State name="isImmobile">
								<When type="Property" frame="$this" visible="false"/>
								<Action type="SetProperty" frame="$this/StatusLabel" visible="false"/>
								<Action type="SetProperty" frame="$parent/MoveSpeedLabel" visible="false"/>
							</State>
							<State name="other">
								<Action type="SetProperty" frame="$this/StatusLabel" visible="true"/>
								<Action type="SetProperty" frame="$parent/MoveSpeedLabel" visible="true"/>
							</State>
						</StateGroup>
					</Frame>
					
					<!-- Kills label not working?
					<Frame type="Label" name="KillsLabel">
						<Anchor side="Top" relative="$parent/MoveSpeedLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/MoveSpeedLabel" pos="Min" offset="0"/>
						<Text val="Kills"/>
						<Unclipped val="true"/>
						<CollapseLayout val="true"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusKills" name="UnitStatusKillsLabel" template="_BottomLeft/UnitStatusLabelTemplate">
						<Anchor side="Top" relative="$parent/KillsLabel" pos="Min" offset="0"/>
						<Frame type="Label" name="StatusLabel">
							<Unclipped val="true"/>
						</Frame>
					</Frame> -->

					<!-- Level label not working?
					<Frame type="Label" name="LevelLabel">
						<Anchor side="Top" relative="$parent/KillsLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/KillsLabel" pos="Min" offset="0"/>
						<Text val="Level"/>
						<Unclipped val="true"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusLevel" name="UnitStatusLevelLabel" template="_BottomLeft/UnitStatusLabelTemplate">
						<Anchor side="Top" relative="$parent/LevelLabel" pos="Min" offset="0"/>
						<Frame type="Label" name="StatusLabel">
							<Unclipped val="true"/>
						</Frame>
					</Frame> -->
					
					<!-- no mineral field in heroes
					<Frame type="Label" name="ResourcesRemainingLabel">
						<Anchor side="Top" relative="$parent/LevelLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/LevelLabel" pos="Min" offset="0"/>
						<Text val="RecourcesRemaining"/>
						<Unclipped val="true"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusResourcesRemaining" name="UnitStatusResourcesRemaining">
						<Anchor side="Top" relative="$parent/ResourcesRemainingLabel" pos="Min" offset="0"/>
						<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
						<Width val="123"/>
						<Height val="27"/>
						<VisibleToOwner val="true"/>
						<VisibleWhenUserControlled val="true"/>
						<Frame type="Label" name="StatusLabel">
							<Anchor relative="$parent"/>
							<Unclipped val="true"/>
						</Frame>
					</Frame> -->
					
					<Frame type="Label" name="CarriedMechanicLabel">
						<Anchor side="Top" relative="$parent/MoveSpeedLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/MoveSpeedLabel" pos="Min" offset="0"/>
						<Text val="@ScoreValue/Name/CarriedMechanic"/>
						<Unclipped val="true"/>
						<CollapseLayout val="true"/>
						<Visible val="false"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusBehaviorIcon" name="UnitStatusCarriedMechanicLabel">
						<Anchor side="Top" relative="$parent/CarriedMechanicLabel" pos="Min" offset="0"/>
						<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
						<Width val="123"/>
						<Height val="27"/>
						<Behavior val="MapMechanicStack"/>
						<VisibleToOwner val="true"/>
						<VisibleToAlly val="true"/>
						<VisibleToEnemy val="true"/>

						<Frame type="BehaviorIcon" name="BehaviorIcon">
							<Anchor relative="$parent"/>
							<MinStackCountDisplayed val="1"/>

							<Frame type="Image" name="IconImage">
								<Anchor side="Top" relative="$parent" pos="Mid" offset="0"/>
								<Anchor side="Bottom" relative="$parent" pos="Mid" offset="0"/>
								<Anchor side="Left" relative="$parent/StackLabel" pos="Max" offset="2"/>
								<Width val="27"/>
								<Height val="27"/>
								<LayerCount val="2"/>
								<LayerVisible index="0" val="false"/>
								<ImageMaskTexture val="@UI/StormHeroConsoleCircleButtonMask"/>
								<Animation name="Ahlimation">
									<Event event="OnShown" action="DirectionForward,Play"/>
									<Event event="OnHidden" action="DirectionReverse,Play"/>

									<Controller type="Visibility" end="Pause" frame="$parent/$parent/$parent/CarriedMechanicLabel">
										<Key type="Bool" time="0.0" value="false"/>
										<Key type="Bool" time="0.0" value="true"/>
									</Controller>
								</Animation>
							</Frame>

							<Frame type="Label" name="StackLabel">
								<Anchor side="Top" relative="$parent" pos="Mid" offset="0"/>
								<Anchor side="Bottom" relative="$parent" pos="Mid" offset="0"/>
								<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
								<Style val="HeroStatDescriptionLabel"/>
								<Unclipped val="true"/>
								<Text val="42"/>
							</Frame>
							
						</Frame>
					</Frame>
					
					<!-- ShieldedHealth (duplicated info)
					<Frame type="Label" name="VitalityLabel">
						<Anchor side="Top" relative="$parent/CarriedMechanicLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/CarriedMechanicLabel" pos="Min" offset="0"/>
						<Text val="Vitality"/>
						<Unclipped val="true"/>
						<CollapseLayout val="true"/>
						<Visible val="false"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusShieldedHealthLabel" name="UnitStatusVitalityLabel" template="_BottomLeft/UnitStatusLabelTemplate">
						<Anchor side="Top" relative="$parent/VitalityLabel" pos="Min" offset="0"/>
						<FractionDigits val="1"/>
						<Width val="156"/>
						<Visible val="false"/>
						<Frame type="Label" name="StatusLabel">
							<Unclipped val="true"/>
						</Frame>
						<Animation name="Ahlimation">
							<Event event="OnShown" action="DirectionForward,Play"/>
							<Event event="OnHidden" action="DirectionReverse,Play"/>

							<Controller type="Visibility" end="Pause" frame="$parent/VitalityLabel">
								<Key type="Bool" time="0.0" value="false"/>
								<Key type="Bool" time="0.0" value="true"/>
							</Controller>
						</Animation>
					</Frame>
					-->

					<!-- KillStreak -->
					<Frame type="Label" name="KillStreakLabel">
						<Anchor side="Top" relative="$parent/CarriedMechanicLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/CarriedMechanicLabel" pos="Min" offset="0"/>
						<Text val="@ScoreValue/Name/KillStreak"/>
						<Unclipped val="true"/>
						<CollapseLayout val="true"/>
						<Visible val="{$parent/UnitStatusKillStreakLabel/ScoreValueFrame0/Label/@Visible}"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusScoreValue" name="UnitStatusKillStreakLabel">
						<Anchor side="Top" relative="$parent/KillStreakLabel" pos="Min" offset="0"/>
						<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
						<Width val="123"/>
						<Height val="27"/>
						
						<Frame type="ScoreValueLabelFrame" name="ScoreValueFrame0">
							<Anchor side="Top" relative="$parent" pos="Mid" offset="0"/>
							<Anchor side="Bottom" relative="$parent" pos="Mid" offset="0"/>
							<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
							<Width val="123"/>
							<Height val="27"/>
							<ScoreValueLink val="KillStreak"/>
							<HideZero val="true"/>
							<Unclipped val="true"/>
							<Frame type="Label" name="Label">
								<Anchor relative="$parent"/>
								<Style val="HeroStatDescriptionLabel"/>
								<Unclipped val="true"/>
							</Frame>
						</Frame>
					</Frame>
					
					<!-- TimeSpentDead of Player (DOES NOT SEEM TO GIVE ME PLAYERID FOR CHILD FRAMES)
					<Frame type="Label" name="TimeSpentDeadLabel">
						<Anchor side="Top" relative="$parent/KillStreakLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent/KillStreakLabel" pos="Min" offset="0"/>
						<Text val="KillXP"/>
						<Unclipped val="true"/>
						<Style val="HeroStatNameLabel"/>
					</Frame>
					<Frame type="UnitStatusScoreValue" name="UnitStatusKillXP">
						<Anchor side="Top" relative="$parent/TimeSpentDeadLabel" pos="Min" offset="0"/>
						<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
						<Width val="123"/>
						<Height val="27"/>
						
						<Frame type="ScoreValueLabelFrame" name="ScoreValueFrame0">
							<Anchor relative="$parent"/>
							<ScoreValueLink val="TimeSpentDead"/>
							<HideZero val="true"/>
							<Unclipped val="true"/>
							<Frame type="Label" name="Label">
								<Anchor relative="$parent"/>
								<Style val="HeroStatDescriptionLabel"/>
								<Unclipped val="true"/>
							</Frame>
						</Frame>
					</Frame>
					-->
					
					<Frame type="Frame" name="BuffDisplayContainer">
						<Anchor side="Top" relative="$parent/KillStreakLabel" pos="Max" offset="0"/>
						<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
						<Height val="52"/>
						<Width val="600"/>
						
						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplayStasis" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent" pos="Min" offset="10"/>
							<Validator val="TargetIsStasis"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="E5BE07"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="@UI/State/StasisIcon"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="@UI/State/Stasis"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="TargetIsStasis" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>
						
						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplayTimeStop" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplayStasis" pos="Max" offset="0"/>
							<Validator val="TargetIsTimeStopped"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="CC0000"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="@UI/State/TimeStopIcon"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="@UI/State/TimeStop"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="TargetIsTimeStopped" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>

						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplayInvulnerable" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplayTimeStop" pos="Max" offset="0"/>
							<Validator val="TargetIsInvulnerable"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="C67B06"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="@UI/State/InvulnerableIcon"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="@UI/State/Invulnerable"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="TargetIsInvulnerable" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>

						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplayUnstoppable" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplayInvulnerable" pos="Max" offset="0"/>
							<Validator val="TargetIsUnstoppableCategory"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="B163ED"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="@UI/State/UnstoppableIcon"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="@UI/State/Unstoppable"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="TargetIsUnstoppableCategory" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>

						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplayStunned" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplayUnstoppable" pos="Max" offset="0"/>
							<Validator val="TargetIsStunned"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="E00709"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="@UI/State/StunnedIcon"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="@UI/State/Stunned"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="TargetIsStunned" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>

						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplaySleeping" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplayStunned" pos="Max" offset="0"/>
							<Validator val="TargetIsSleeping"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="1344BF"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="@UI/State/SleepingIcon"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="@UI/State/Sleeping"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="TargetIsSleeping" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>

						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplayRooted" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplaySleeping" pos="Max" offset="0"/>
							<Validator val="TargetIsRooted"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="008000"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="@UI/State/RootedIcon"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="@UI/State/Rooted"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="TargetIsRooted" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>

						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplayPolymorphed" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplayRooted" pos="Max" offset="0"/>
							<Validator val="TargetIsPolymorphed"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="FFFFFF"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="@UI/State/PolymorphedIcon"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="@UI/State/Polymorphed"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="TargetIsPolymorphed" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>

						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplaySilenced" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplayPolymorphed" pos="Max" offset="0"/>
							<Validator val="TargetIsSilenced"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="3176E7"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="@UI/State/SilencedIcon"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="@UI/State/Silenced"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="TargetIsSilenced" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>

						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplayBlinded" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplaySilenced" pos="Max" offset="0"/>
							<Validator val="TargetIsBlinded"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="7F7F7F"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="@UI/State/BlindedIcon"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="@UI/State/Blinded"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="TargetIsBlinded" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>

						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplaySlowed" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplayBlinded" pos="Max" offset="0"/>
							<Validator val="TargetIsSlowed"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="00FFFF"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="Assets\Textures\ui_heroselect_herostatsiconbig_speed.dds"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="@UI/State/Slowed"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="TargetIsSlowed" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>

						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplayTaunted" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplaySlowed" pos="Max" offset="0"/>
							<Validator val="TargetIsTaunted"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="D28400"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="@UI/State/TauntedIcon"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="@UI/State/Taunted"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="TargetIsTaunted" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>

						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplayFeared" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplayTaunted" pos="Max" offset="0"/>
							<Validator val="TargetIsFeared"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="5D06AE"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="@UI/State/FearedIcon"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="@UI/State/Feared"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="TargetIsFeared" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>

						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplayMindControlled" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplayFeared" pos="Max" offset="0"/>
							<Validator val="CasterIsMindControlled"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="5D06AE"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="@UI/State/MindControlled"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="@UI/State/MindControlled"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="CasterIsMindControlled" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>

						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplayProtected" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplayMindControlled" pos="Max" offset="0"/>
							<Validator val="TargetIsProtected"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="C67B06"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="@UI/State/ProtectedIcon"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="@UI/State/Protected"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="TargetIsProtected" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>

						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplayAbsorbing" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplayProtected" pos="Max" offset="0"/>
							<Validator val="CasterIsAbsorbing"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="EB00B7"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="@UI/State/AbsorbingIcon"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="@UI/State/Absorbing"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="TargetIsStunned" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>
						
						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplayUnkillable" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplayProtected" pos="Max" offset="0"/>
							<Validator val="CasterIsUnkillable"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="C67B06"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="@UI/State/UnKillableIcon"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="@UI/State/Unkillable"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="CasterIsUnkillable" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>

						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplayRevealed">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplayUnkillable" pos="Max" offset="0"/>
							<Validator val="UserCategorySourceRevealed"/>
							<Width val="52"/>
							<Height val="52"/>
							<CollapseLayout val="true"/>
							<Visible val="false"/>
							
							<Frame type="Image" name="StatusImage">
								<Anchor relative="$parent"/>
								<!-- potential images:
								storm_temp_btn-ability-protoss-hallucination.dds
								storm_temp_btn-techupgrade-terran-ocularimplants.dds -->
								<Texture val="Assets/Textures/storm_temp_btn-techupgrade-terran-ocularimplants.dds"/>
								<Color val="200,70,70"/>
								<Unclipped val="true"/>
							</Frame>

							<Animation name="Ahlimation">
								<Event event="UserCategorySourceRevealed" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>
						
						<Frame type="UnitStatusUnitHealingModifier" name="UnitStatusHealingDisplay" template="UnitStatus/UnitStatusHealingDisplayTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplayRevealed" pos="Max" offset="0"/>
							<CollapseLayout val="true"/>
							
							<Frame type="Image" name="BackgroundImage">
								<Unclipped val="true"/>
							</Frame>
							<Frame type="ProgressBar" name="DurationBar">
								<Unclipped val="true"/>
								<Frame type="Frame" name="FillImageContainer">
									<Unclipped val="true"/>
									<Frame type="Image" name="FillImage">
										<Unclipped val="true"/>
									</Frame>
								</Frame>
							</Frame>
							<Frame type="Image" name="StatusImage">
								<Unclipped val="true"/>
							</Frame>
							<Frame type="Image" name="TextFlareImage">
								<Unclipped val="true"/>
							</Frame>
							<Frame type="Label" name="StatusLabel">
								<Unclipped val="true"/>
							</Frame>
						</Frame>
						
						<Frame type="UnitStatusUnitArmor" name="UnitArmorStatusDisplay" template="UnitStatus/UnitArmorStatusDisplayTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/UnitStatusHealingDisplay" pos="Max" offset="-12"/>
							<CollapseLayout val="true"/>
							
							<Frame type="Frame" name="AllArmorFrame">
								<Frame type="Image" name="BackgroundImage">
									<Unclipped val="true"/>
								</Frame>
								<Frame type="ProgressBar" name="DurationBar">
									<Unclipped val="true"/>
									<Frame type="Frame" name="FillImageContainer">
										<Unclipped val="true"/>
										<Frame type="Image" name="FillImage">
											<Unclipped val="true"/>
										</Frame>
									</Frame>
								</Frame>
								<Frame type="Image" name="StatusImage">
									<Anchor side="Top" relative="$parent" pos="Min" offset="-8"/>
									<Unclipped val="true"/>
								</Frame>
								<Frame type="Label" name="ArmorLabel">
									<Unclipped val="true"/>
								</Frame>
							</Frame>
							<Frame type="Frame" name="AbilityArmorFrame">
								<Frame type="Image" name="BackgroundImage">
									<Unclipped val="true"/>
								</Frame>
								<Frame type="ProgressBar" name="DurationBar">
									<Unclipped val="true"/>
									<Frame type="Frame" name="FillImageContainer">
										<Unclipped val="true"/>
										<Frame type="Image" name="FillImage">
											<Unclipped val="true"/>
										</Frame>
									</Frame>
								</Frame>
								<Frame type="Image" name="StatusImage">
									<Anchor side="Top" relative="$parent" pos="Min" offset="-8"/>
									<Unclipped val="true"/>
								</Frame>
								<Frame type="Label" name="ArmorLabel">
									<Unclipped val="true"/>
								</Frame>
							</Frame>
							<Frame type="Frame" name="PhysicalArmorFrame">
								<Frame type="Image" name="BackgroundImage">
									<Unclipped val="true"/>
								</Frame>
								<Frame type="ProgressBar" name="DurationBar">
									<Unclipped val="true"/>
									<Frame type="Frame" name="FillImageContainer">
										<Unclipped val="true"/>
										<Frame type="Image" name="FillImage">
											<Unclipped val="true"/>
										</Frame>
									</Frame>
								</Frame>
								<Frame type="Image" name="StatusImage">
									<Anchor side="Top" relative="$parent" pos="Min" offset="-8"/>
									<Unclipped val="true"/>
								</Frame>
								<Frame type="Label" name="ArmorLabel">
									<Unclipped val="true"/>
								</Frame>
							</Frame>
						</Frame>

						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplayPushPull" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/UnitArmorStatusDisplay" pos="Max" offset="0"/>
							<Validator val="TargetIsPushPull"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="aaaaaa"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="_Assets\Textures\QQQ.dds"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="PushPull"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="TargetIsPushPull" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>
						
						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplayUnrevealableCloak" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplayPushPull" pos="Max" offset="0"/>
							<Validator val="TargetIsUnrevealable"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="aaaaaa"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="_Assets\Textures\QQQ.dds"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="UnrevealableCloak"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="TargetIsUnrevealable" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="true"/>
								</Controller>
							</Animation>
						</Frame>
						
						<!--
						<Frame type="UnitStatusValidatorAnimElement" name="BuffDisplayEvasion" template="_BottomLeft/UnitStatusDebuffTemplate">
							<Anchor side="Top" relative="$parent/BuffDisplayStasis" pos="Min" offset="0"/>
							<Anchor side="Left" relative="$parent/BuffDisplayUnrevealableCloak" pos="Max" offset="0"/>
							<Validator val="UserCategoryTargetNotEvading"/>
							<Visible val="true"/>

							<Frame type="Image" name="DebuffPlateBg">
								<Color val="aaaaaa"/>
							</Frame>
							<Frame type="Image" name="DebuffIconLeft">
								<Texture val="_Assets\Textures\QQQ.dds"/>
							</Frame>
							<Frame type="Label" name="DebuffLabel">
								<Text val="Evasion"/>
							</Frame>
							
							<Animation name="Ahlimation">
								<Event event="UserCategoryTargetNotEvading" action="Reset,Play"/>
								<Event event="NoState" action="Stop"/>
								
								<Controller type="Visibility" end="Pause">
									<Key type="Bool" time="0" value="false"/>
								</Controller>
							</Animation>
						</Frame>-->
						
						
					</Frame>
				</Frame>
				
			</Frame>
			
		</Frame>
	</Frame>
	
	
	
	
	
	<!-- Genji hero UI -->
	<Frame type="SelectionUnitStatusPanel" name="GenjiSwiftStrikeButtonCooldownOverrideFrame" file="Genji">
		<Height val="56"/>
		<Width val="56"/>
		<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
			<Frame type="UnitStatusBehaviorIcon" name="UnitStatusGenjiSwiftStrikeBehaviorIcon">
				<Frame type="BehaviorIcon" name="BehaviorIcon">
					<Frame type="ProgressBar" name="CooldownBar">
						<Anchor side="Left" relative="$parent" pos="Min" offset="20"/>
						<Height val="60"/>
						<Width val="60"/>
					</Frame>
				</Frame>
			</Frame>
		</Frame>
	 </Frame>
	<Frame type="SelectionUnitStatusPanel" name="GenjiDragonBladeQHexagonOverrideFrame" file="Genji">
		<Height val="56"/>
		<Width val="56"/>
		<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
			<Frame type="Image" name="GenjiDragonBladeDragonHexagonQ">
				<Anchor side="Top" relative="$parent" pos="Min" offset="-3"/>
				<Anchor side="Left" relative="$parent" pos="Min" offset="23"/>
				<Height val="66"/>
				<Width val="56"/>
				<!-- 112x132 <Texture val="@UI/Storm_UI_Genji_Hexagon_Dragon"/> -->
			</Frame>
		</Frame>
	 </Frame>
	<Frame type="SelectionUnitStatusPanel" name="GenjiDragonBladeRHexagonOverrideFrame" file="Genji">
		<Height val="56"/>
		<Width val="56"/>
		<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
			<Frame type="Image" name="GenjiDragonBladeDragonHexagonR">
				<Anchor side="Top" relative="$parent" pos="Min" offset="-3"/>
				<Anchor side="Left" relative="$parent" pos="Min" offset="23"/>
				<Height val="66"/>
				<Width val="56"/>
				<!-- 112x132 <Texture val="@UI/Storm_UI_Genji_Hexagon_Dragon"/> -->
			</Frame>
		</Frame>
	 </Frame>
	<Frame type="SelectionUnitStatusPanel" name="GenjiDeflectDragonClawButtonOverlayFrame" file="Genji">
		<Visible val="{$this/SelectionUnitStatusPanel/@Visible}"/>
		<Frame type="Frame" name="ProgressBarContainer">
			<Frame type="ProgressBar" name="ChargeFillProgress">
				<Anchor side="Top" relative="$parent" pos="Mid" offset="0"/>
				<Anchor side="Left" relative="$parent" pos="Mid" offset="0"/>
				<Anchor side="Bottom" relative="$parent" pos="Mid" offset="0"/>
				<Anchor side="Right" relative="$parent" pos="Mid" offset="0"/>
				<Width val="#commandButtonWidth"/>
				<Height val="#commandButtonHeight"/>
				<!-- 256x128, left half transparent, right half is button texture -> 128x128
					<Texture val="@UI/storm_ui_icon_genji_shurikens_dragonsoul_pb"/> -->
			</Frame>
		</Frame>
		<!-- FIX: to not appear when another hero is selected (alpha does not work with 2x Jaina in-game) -->
		<Frame type="SelectionUnitStatusPanel" name="SelectionUnitStatusPanel">
			<Anchor side="Top" relative="$parent" pos="Max" offset="9999"/>
			<Anchor side="Left" relative="$parent" pos="Max" offset="9999"/>
			<Width val="1"/>
			<Height val="1"/>
			<DisplayMode val="Single"/>
			<SpecificUnit val="HeroGenji"/>
		</Frame>
	 </Frame>
	<!-- Cassia hero UI -->
	<Frame type="SelectionUnitStatusPanel" name="AmazonSurgeOfLightButtonOverrideFrame" file="Amazon">
		<Height val="56"/>
		<Width val="56"/>
		<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
			<Frame type="Image" name="SurgeOfLightBackImage">
				<Height val="40"/>
				<Width val="40"/>
			</Frame>
			<Frame type="ProgressBar" name="SurgeOfLightProgressBar">
				<Anchor side="Top" relative="$parent" pos="Min" offset="-5"/>
				<Anchor side="Left" relative="$parent" pos="Min" offset="20"/>
				<Height val="40"/>
				<Width val="40"/>
				<!-- <Texture val="@UI/storm_ui_icon_Cassia_Avoidance_SurgeOfLightProgress"/>-->
			</Frame>
		</Frame>
		<!-- TODO: does not work
		<Frame type="Image" name="QQQ">
			<Anchor relative="$parent"/>
			<Texture val="_Assets\Textures\QQQ.dds"/>
			<Alpha val="128"/>
		</Frame> -->
	</Frame>
	<!-- DVa hero UI -->
	<Frame type="SelectionUnitStatusPanel" name="DVaMechCommandCardFrame" file="DVa">
		<Height val="56"/>
		<Width val="56"/>
		<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
			<!-- frame has no width/height/opposingAnchors... wtf? :D -->
			<Frame type="UnitStatusAbilCharge" name="DVaMechSelfDestructChargeFrame">
				<Anchor side="Top" relative="$parent" pos="Min" offset="11"/>
				<Anchor side="Left" relative="$parent" pos="Min" offset="33"/>
				
				<Frame type="Image" name="DVaMechSelfDestructBackgroundImage">
					<Height val="38"/>
					<Width val="35"/>
				</Frame>
				
				<Frame type="ProgressBar" name="ChargeFillProgress">
					<Height val="38"/>
					<Width val="35"/>
				</Frame>
				
				<Frame type="Label" name="ChargesLabel">
					<Anchor side="Top" relative="$parent/DVaMechSelfDestructBackgroundImage" pos="Min" offset="6"/>
					<Anchor side="Right" relative="$parent/DVaMechSelfDestructBackgroundImage" pos="Max" offset="2"/>
					<Anchor side="Left" relative="$parent/DVaMechSelfDestructBackgroundImage" pos="Min" offset="2"/>
					<Width val="0"/>
					<Style val="Storm_HUD_Tracer_Pulse_Bomb_Charge_Ahli"/>
				</Frame>
				
				<Frame type="Label" name="ChargePercentLabel">
					<Visible val="false"/>
					<Text val=""/>
				</Frame>
				
				<Frame type="Image" name="PulseBombReadyPingImage">
					<Width val="30"/>
					<Height val="30"/>
					<Unclipped val="true"/>
				</Frame>
				
				<Animation name="Show/HideProgressBarAnims">
					<Event event="ChargesFull" action="Restart, DirectionForward, Play"/>
					<Event event="ChargesEmpty" action="Stop"/>
					<Event event="CurrentChanged_1" action="Stop"/>
					<Event event="CurrentChanged_2" action="Stop"/>
					<Event event="CurrentChanged_3" action="Stop"/>
					<Event event="CurrentChanged_4" action="Stop"/>
					<Event event="CurrentChanged_5" action="Stop"/>
					<Event event="CurrentChanged_6" action="Stop"/>
					<Event event="CurrentChanged_7" action="Stop"/>
					<Event event="CurrentChanged_8" action="Stop"/>
					<Event event="CurrentChanged_9" action="Stop"/>
					<Event event="CurrentChanged_10" action="Stop"/>
					<Event event="CurrentChanged_11" action="Stop"/>
					<Event event="CurrentChanged_12" action="Stop"/>
					<Event event="CurrentChanged_13" action="Stop"/>
					<Event event="CurrentChanged_14" action="Stop"/>
					<Event event="CurrentChanged_15" action="Stop"/>
					<Event event="CurrentChanged_16" action="Stop"/>
					<Event event="CurrentChanged_17" action="Stop"/>
					<Event event="CurrentChanged_18" action="Stop"/>
					<Event event="CurrentChanged_19" action="Stop"/>
					<Event event="CurrentChanged_20" action="Stop"/>
					<Event event="CurrentChanged_21" action="Stop"/>
					<Event event="CurrentChanged_22" action="Stop"/>
					<Event event="CurrentChanged_23" action="Stop"/>
					<Event event="CurrentChanged_24" action="Stop"/>
					<Event event="CurrentChanged_25" action="Stop"/>
					<Event event="CurrentChanged_26" action="Stop"/>
					<Event event="CurrentChanged_27" action="Stop"/>
					<Event event="CurrentChanged_28" action="Stop"/>
					<Event event="CurrentChanged_29" action="Stop"/>
					<Event event="CurrentChanged_30" action="Stop"/>
					<Event event="CurrentChanged_31" action="Stop"/>
					<Event event="CurrentChanged_32" action="Stop"/>
					<Event event="CurrentChanged_33" action="Stop"/>
					<Event event="CurrentChanged_34" action="Stop"/>
					<Event event="CurrentChanged_35" action="Stop"/>
					<Event event="CurrentChanged_36" action="Stop"/>
					<Event event="CurrentChanged_37" action="Stop"/>
					<Event event="CurrentChanged_38" action="Stop"/>
					<Event event="CurrentChanged_39" action="Stop"/>
					<Event event="CurrentChanged_40" action="Stop"/>
					<Event event="CurrentChanged_41" action="Stop"/>
					<Event event="CurrentChanged_42" action="Stop"/>
					<Event event="CurrentChanged_43" action="Stop"/>
					<Event event="CurrentChanged_44" action="Stop"/>
					<Event event="CurrentChanged_45" action="Stop"/>
					<Event event="CurrentChanged_46" action="Stop"/>
					<Event event="CurrentChanged_47" action="Stop"/>
					<Event event="CurrentChanged_48" action="Stop"/>
					<Event event="CurrentChanged_49" action="Stop"/>
					<Event event="CurrentChanged_50" action="Stop"/>
					<Event event="CurrentChanged_51" action="Stop"/>
					<Event event="CurrentChanged_52" action="Stop"/>
					<Event event="CurrentChanged_53" action="Stop"/>
					<Event event="CurrentChanged_54" action="Stop"/>
					<Event event="CurrentChanged_55" action="Stop"/>
					<Event event="CurrentChanged_56" action="Stop"/>
					<Event event="CurrentChanged_57" action="Stop"/>
					<Event event="CurrentChanged_58" action="Stop"/>
					<Event event="CurrentChanged_59" action="Stop"/>
					<Event event="CurrentChanged_60" action="Stop"/>
					<Event event="CurrentChanged_61" action="Stop"/>
					<Event event="CurrentChanged_62" action="Stop"/>
					<Event event="CurrentChanged_63" action="Stop"/>
					<Event event="CurrentChanged_64" action="Stop"/>
					<Event event="CurrentChanged_65" action="Stop"/>
					<Event event="CurrentChanged_66" action="Stop"/>
					<Event event="CurrentChanged_67" action="Stop"/>
					<Event event="CurrentChanged_68" action="Stop"/>
					<Event event="CurrentChanged_69" action="Stop"/>
					<Event event="CurrentChanged_70" action="Stop"/>
					<Event event="CurrentChanged_71" action="Stop"/>
					<Event event="CurrentChanged_72" action="Stop"/>
					<Event event="CurrentChanged_73" action="Stop"/>
					<Event event="CurrentChanged_74" action="Stop"/>
					<Event event="CurrentChanged_75" action="Stop"/>
					<Event event="CurrentChanged_76" action="Stop"/>
					<Event event="CurrentChanged_77" action="Stop"/>
					<Event event="CurrentChanged_78" action="Stop"/>
					<Event event="CurrentChanged_79" action="Stop"/>
					<Event event="CurrentChanged_80" action="Stop"/>
					<Event event="CurrentChanged_81" action="Stop"/>
					<Event event="CurrentChanged_82" action="Stop"/>
					<Event event="CurrentChanged_83" action="Stop"/>
					<Event event="CurrentChanged_84" action="Stop"/>
					<Event event="CurrentChanged_85" action="Stop"/>
					<Event event="CurrentChanged_86" action="Stop"/>
					<Event event="CurrentChanged_87" action="Stop"/>
					<Event event="CurrentChanged_88" action="Stop"/>
					<Event event="CurrentChanged_89" action="Stop"/>
					<Event event="CurrentChanged_90" action="Stop"/>
					<Event event="CurrentChanged_91" action="Stop"/>
					<Event event="CurrentChanged_92" action="Stop"/>
					<Event event="CurrentChanged_93" action="Stop"/>
					<Event event="CurrentChanged_94" action="Stop"/>
					<Event event="CurrentChanged_95" action="Stop"/>
					<Event event="CurrentChanged_96" action="Stop"/>
					<Event event="CurrentChanged_97" action="Stop"/>
					<Event event="CurrentChanged_98" action="Stop"/>
					<Event event="CurrentChanged_99" action="Stop"/>

					<Controller type="Visibility" name="Visibility_4" end="Pause" Frame="ChargePercentLabel">
					</Controller>
					<Controller type="Visibility" name="Visibility_5" end="Pause" frame="PulseBombReadyPingImage">
					</Controller>
				</Animation>
			</Frame>
		</Frame>
	</Frame>
	<!-- Tracer hero UI -->
	<Frame type="SelectionUnitStatusPanel" name="TracerPulseBombChargeButtonOverrideFrame" file="Tracer">
		<Height val="56"/>
		<Width val="56"/>
		<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
			<!-- frame has no width/height/opposingAnchors... wtf? :D -->
			<Frame type="UnitStatusAbilCharge" name="TracerPulseBombChargeFrame">
				<Anchor side="Top" relative="$parent" pos="Mid" offset="0"/>
				<Anchor side="Left" relative="$parent" pos="Mid" offset="0"/>
				<Anchor side="Bottom" relative="$parent" pos="Mid" offset="0" />
				<Anchor side="Right" relative="$parent" pos="Mid" offset="0" />
				<Height val="38" />
				<Width val="34" />
				
				<Frame type="Image" name="TracerPulseBombBackgroundImage">
				</Frame>
				
				<Frame type="ProgressBar" name="ChargeFillProgress">
					<Height val="38"/>
					<Width val="34"/>
				</Frame>
				
				<Frame type="Label" name="ChargesLabel">
					<Anchor side="Top" relative="$parent/TracerPulseBombBackgroundImage" pos="Min" offset="6"/>
					<Anchor side="Right" relative="$parent/TracerPulseBombBackgroundImage" pos="Max" offset="2"/>
					<Anchor side="Left" relative="$parent/TracerPulseBombBackgroundImage" pos="Min" offset="2"/>
					<Anchor side="Bottom" relative="$this" pos="Max" offset="0"/>
					<Style val="Storm_HUD_Tracer_Pulse_Bomb_Charge_Ahli"/>
				</Frame>
				
				<Frame type="Label" name="ChargePercentLabel">
					<Visible val="false"/>
					<Text val=""/>
				</Frame>
				
				<Frame type="Image" name="PulseBombReadyPingImage">
					<Width val="40"/>
					<Height val="40"/>
					<Unclipped val="true"/>
				</Frame>
				
				<Animation name="Show/HideProgressBarAnims">
					<Event event="ChargesFull" action="Restart, DirectionForward, Play"/>
					<Event event="ChargesEmpty" action="Stop"/>
					<Event event="CurrentChanged_1" action="Stop"/>
					<Event event="CurrentChanged_2" action="Stop"/>
					<Event event="CurrentChanged_3" action="Stop"/>
					<Event event="CurrentChanged_4" action="Stop"/>
					<Event event="CurrentChanged_5" action="Stop"/>
					<Event event="CurrentChanged_6" action="Stop"/>
					<Event event="CurrentChanged_7" action="Stop"/>
					<Event event="CurrentChanged_8" action="Stop"/>
					<Event event="CurrentChanged_9" action="Stop"/>
					<Event event="CurrentChanged_10" action="Stop"/>
					<Event event="CurrentChanged_11" action="Stop"/>
					<Event event="CurrentChanged_12" action="Stop"/>
					<Event event="CurrentChanged_13" action="Stop"/>
					<Event event="CurrentChanged_14" action="Stop"/>
					<Event event="CurrentChanged_15" action="Stop"/>
					<Event event="CurrentChanged_16" action="Stop"/>
					<Event event="CurrentChanged_17" action="Stop"/>
					<Event event="CurrentChanged_18" action="Stop"/>
					<Event event="CurrentChanged_19" action="Stop"/>
					<Event event="CurrentChanged_20" action="Stop"/>
					<Event event="CurrentChanged_21" action="Stop"/>
					<Event event="CurrentChanged_22" action="Stop"/>
					<Event event="CurrentChanged_23" action="Stop"/>
					<Event event="CurrentChanged_24" action="Stop"/>
					<Event event="CurrentChanged_25" action="Stop"/>
					<Event event="CurrentChanged_26" action="Stop"/>
					<Event event="CurrentChanged_27" action="Stop"/>
					<Event event="CurrentChanged_28" action="Stop"/>
					<Event event="CurrentChanged_29" action="Stop"/>
					<Event event="CurrentChanged_30" action="Stop"/>
					<Event event="CurrentChanged_31" action="Stop"/>
					<Event event="CurrentChanged_32" action="Stop"/>
					<Event event="CurrentChanged_33" action="Stop"/>
					<Event event="CurrentChanged_34" action="Stop"/>
					<Event event="CurrentChanged_35" action="Stop"/>
					<Event event="CurrentChanged_36" action="Stop"/>
					<Event event="CurrentChanged_37" action="Stop"/>
					<Event event="CurrentChanged_38" action="Stop"/>
					<Event event="CurrentChanged_39" action="Stop"/>
					<Event event="CurrentChanged_40" action="Stop"/>
					<Event event="CurrentChanged_41" action="Stop"/>
					<Event event="CurrentChanged_42" action="Stop"/>
					<Event event="CurrentChanged_43" action="Stop"/>
					<Event event="CurrentChanged_44" action="Stop"/>
					<Event event="CurrentChanged_45" action="Stop"/>
					<Event event="CurrentChanged_46" action="Stop"/>
					<Event event="CurrentChanged_47" action="Stop"/>
					<Event event="CurrentChanged_48" action="Stop"/>
					<Event event="CurrentChanged_49" action="Stop"/>
					<Event event="CurrentChanged_50" action="Stop"/>
					<Event event="CurrentChanged_51" action="Stop"/>
					<Event event="CurrentChanged_52" action="Stop"/>
					<Event event="CurrentChanged_53" action="Stop"/>
					<Event event="CurrentChanged_54" action="Stop"/>
					<Event event="CurrentChanged_55" action="Stop"/>
					<Event event="CurrentChanged_56" action="Stop"/>
					<Event event="CurrentChanged_57" action="Stop"/>
					<Event event="CurrentChanged_58" action="Stop"/>
					<Event event="CurrentChanged_59" action="Stop"/>
					<Event event="CurrentChanged_60" action="Stop"/>
					<Event event="CurrentChanged_61" action="Stop"/>
					<Event event="CurrentChanged_62" action="Stop"/>
					<Event event="CurrentChanged_63" action="Stop"/>
					<Event event="CurrentChanged_64" action="Stop"/>
					<Event event="CurrentChanged_65" action="Stop"/>
					<Event event="CurrentChanged_66" action="Stop"/>
					<Event event="CurrentChanged_67" action="Stop"/>
					<Event event="CurrentChanged_68" action="Stop"/>
					<Event event="CurrentChanged_69" action="Stop"/>
					<Event event="CurrentChanged_70" action="Stop"/>
					<Event event="CurrentChanged_71" action="Stop"/>
					<Event event="CurrentChanged_72" action="Stop"/>
					<Event event="CurrentChanged_73" action="Stop"/>
					<Event event="CurrentChanged_74" action="Stop"/>
					<Event event="CurrentChanged_75" action="Stop"/>
					<Event event="CurrentChanged_76" action="Stop"/>
					<Event event="CurrentChanged_77" action="Stop"/>
					<Event event="CurrentChanged_78" action="Stop"/>
					<Event event="CurrentChanged_79" action="Stop"/>
					<Event event="CurrentChanged_80" action="Stop"/>
					<Event event="CurrentChanged_81" action="Stop"/>
					<Event event="CurrentChanged_82" action="Stop"/>
					<Event event="CurrentChanged_83" action="Stop"/>
					<Event event="CurrentChanged_84" action="Stop"/>
					<Event event="CurrentChanged_85" action="Stop"/>
					<Event event="CurrentChanged_86" action="Stop"/>
					<Event event="CurrentChanged_87" action="Stop"/>
					<Event event="CurrentChanged_88" action="Stop"/>
					<Event event="CurrentChanged_89" action="Stop"/>
					<Event event="CurrentChanged_90" action="Stop"/>
					<Event event="CurrentChanged_91" action="Stop"/>
					<Event event="CurrentChanged_92" action="Stop"/>
					<Event event="CurrentChanged_93" action="Stop"/>
					<Event event="CurrentChanged_94" action="Stop"/>
					<Event event="CurrentChanged_95" action="Stop"/>
					<Event event="CurrentChanged_96" action="Stop"/>
					<Event event="CurrentChanged_97" action="Stop"/>
					<Event event="CurrentChanged_98" action="Stop"/>
					<Event event="CurrentChanged_99" action="Stop"/>

					<Controller type="Visibility" name="Visibility_4" end="Pause" Frame="ChargePercentLabel">
					</Controller>
					<Controller type="Visibility" name="Visibility_5" end="Pause" frame="PulseBombReadyPingImage">
					</Controller>
				</Animation>
			</Frame>
		</Frame>
	</Frame>
	<!-- Valeera hero UI - ValeeraSubtletyButtonOverride - TODO: does not seem to be created -->
	<Frame type="SelectionUnitStatusPanel" name="ValeeraSubtletyButtonOverride" file="Valeera">
		<Height val="56"/>
		<Width val="56"/>
<!--<Frame type="Image" name="QQQ">
	<Anchor relative="$parent"/>
	<Texture val="_Assets\Textures\QQQ.dds"/>
	<Alpha val="128"/>
</Frame>-->
		<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
			<Frame type="UnitStatusBehaviorIcon" name="UnitStatusValeeraSubtletyIcon">
				<Frame type="BehaviorIcon" name="BehaviorIcon">
					<Frame type="ProgressBar" name="CooldownBar">
						<Anchor side="Left" relative="$parent" pos="Min" offset="20"/>
						<Height val="60"/>
						<Width val="60"/>
					</Frame>
				</Frame>
			</Frame>
		</Frame>
	</Frame>
	<!-- Li Ming command card hero UI -->
	<Frame type="SelectionUnitStatusPanel" name="LiMingFrame" file="LiMing">
		<Anchor side="Bottom" relative="$parent" pos="Max" offset="-60"/>
		<Anchor side="Left" relative="$parent" pos="Min" offset="44"/>
		<Height val="140"/>
		<Width val="500"/>
		<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
			<Frame type="Image" name="MagicMissilesBonusImage">
				<Anchor side="Top" relative="$parent" pos="Min" offset="74"/>
				<Anchor side="Left" relative="$parent" pos="Min" offset="-18"/>
				<Width val="46"/>
				<Height val="28"/>
				<!-- 92x56
				<Texture val="@UI/Storm_UI_HUD_Wizard_AbilityBonus"/>-->
			</Frame>
			<Frame type="Image" name="MagicMissilesBonusPulseImage">
				<Width val="46"/>
				<Height val="28"/>
				<!-- 92x56
				<Texture val="@UI/Storm_UI_HUD_Wizard_AbilityBonus"/> -->
			</Frame>
			<Frame type="Image" name="ArcaneOrbBonusImage">
				<Anchor side="Top" relative="$parent" pos="Min" offset="74"/>
				<Anchor side="Left" relative="$parent/MagicMissilesBonusImage" pos="Max" offset="1"/>
				<Width val="46"/>
				<Height val="28"/>
				<!-- 92x56
				<Texture val="@UI/Storm_UI_HUD_Wizard_AbilityBonus"/> -->
			</Frame>
			<Frame type="Image" name="ArcaneOrbBonusPulseImage">
				<Width val="46"/>
				<Height val="28"/>
				<!-- 92x56
				<Texture val="@UI/Storm_UI_HUD_Wizard_AbilityBonus"/> -->
			</Frame>
			<Frame type="Image" name="TeleportBonusImage">
				<Anchor side="Top" relative="$parent" pos="Min" offset="74"/>
				<Anchor side="Left" relative="$parent/ArcaneOrbBonusImage" pos="Max" offset="1"/>
				<!-- 92x56
				<Texture val="@UI/Storm_UI_HUD_Wizard_AbilityBonus"/> -->
			</Frame>
			<Frame type="Image" name="TeleportBonusPulseImage">
				<Width val="46"/>
				<Height val="28"/>
				<!-- 92x56
				<Texture val="@UI/Storm_UI_HUD_Wizard_AbilityBonus"/> -->
			</Frame>
			<Frame type="Image" name="HeroicBonusImage">
				<Anchor side="Top" relative="$parent" pos="Min" offset="74"/>
				<Anchor side="Left" relative="$parent/TeleportBonusImage" pos="Max" offset="1"/>
				<Width val="46"/>
				<Height val="28"/>
				<!-- 92x56
				<Texture val="@UI/Storm_UI_HUD_Wizard_AbilityBonus"/> -->
			</Frame>
			<Frame type="Image" name="HeroicBonusPulseImage">
				<Width val="46"/>
				<Height val="28"/>
				<!-- 92x56
				<Texture val="@UI/Storm_UI_HUD_Wizard_AbilityBonus"/> -->
			</Frame>
		</Frame>
	</Frame>
	<!-- Garrosh hero UI button -->
	<Frame type="UnitStatusFrame" name="BodyCheckButtonOverlayFrame" file="Garrosh">
		<Visible val="{$this/SelectionUnitStatusPanel/@Visible}"/>
		<Frame type="Image" name="BodyCheckGlowImage">
			<Anchor side="Top" relative="$parent" pos="Mid" offset="0"/>
			<Anchor side="Bottom" relative="$parent" pos="Mid" offset="0"/>
			<Anchor side="Left" relative="$parent" pos="Mid" offset="0"/>
			<Anchor side="Right" relative="$parent" pos="Mid" offset="0"/>
			<!--<Texture val="@UI/Storm_UI_InGame_AbilityButton_Active_Add"/>-->
			<Width val="#commandButtonActivateEffectWidth"/>
			<Height val="#commandButtonActivateEffectHeight"/>
		</Frame>
		<Frame type="Image" name="BodyCheckGlowImage2">
			<Anchor side="Top" relative="$parent" pos="Mid" offset="0"/>
			<Anchor side="Bottom" relative="$parent" pos="Mid" offset="0"/>
			<Anchor side="Left" relative="$parent" pos="Mid" offset="0"/>
			<Anchor side="Right" relative="$parent" pos="Mid" offset="0"/>
			<!--<Texture val="@UI/Storm_UI_InGame_AbilityButton_Active_Add"/>-->
			<Width val="#commandButtonActivateEffectWidth"/>
			<Height val="#commandButtonActivateEffectHeight"/>
		</Frame>
		<!-- FIX: to not appear when another hero is selected -->
		<Frame type="SelectionUnitStatusPanel" name="SelectionUnitStatusPanel">
			<Anchor side="Top" relative="$parent" pos="Max" offset="9999"/>
			<Anchor side="Left" relative="$parent" pos="Max" offset="9999"/>
			<Width val="1"/>
			<Height val="1"/>
			<DisplayMode val="Single"/>
			<SpecificUnit val="HeroGarrosh"/>
		</Frame>
	</Frame>
	<!-- Jaina hero UI button -->
	<Frame type="UnitStatusFrame" name="JainaIceBlockButtonOverlayFrame" file="Jaina">
		<Visible val="{$this/SelectionUnitStatusPanel/@Visible}"/>
		<Frame type="Frame" name="JainaIceBlockContrainerFrame">
			<Frame type="UnitStatusBehaviorIcon" name="JainaIceBlockBehaviorIcon">
				<Frame type="BehaviorIcon" name="BehaviorIcon">
					<Frame type="ProgressBar" name="JainaIceBlockProgress">
						<Width val="#commandButtonWidth"/>
						<Height val="#commandButtonHeight"/>
					</Frame>
				</Frame>
			</Frame>
		</Frame>
		<!-- FIX: to not appear when another hero is selected (alpha does not work with 2x Jaina in-game) -->
		<Frame type="SelectionUnitStatusPanel" name="SelectionUnitStatusPanel">
			<Anchor side="Top" relative="$parent" pos="Max" offset="9999"/>
			<Anchor side="Left" relative="$parent" pos="Max" offset="9999"/>
			<Width val="1"/>
			<Height val="1"/>
			<DisplayMode val="Single"/>
			<SpecificUnit val="HeroJaina"/>
		</Frame>
	</Frame>
	<!-- Zul'jin - fix guillotine visibility + damage approximation (updates faster than actual dmg value) -->
	<Frame type="SelectionUnitStatusPanel" name="ZuljinTraitFrame" file="Zuljin">
		<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
			<Frame type="Label" name="ZuljinGuillotineValueLabel">
				<Text val="@Ahli/ZuljinGuillotineDamage"/>
			</Frame>
			<Frame type="UnitStatusValidatorAnimElement" name="GuillotineDetector">
				<Anchor relative="$parent"/>
				<Validator val="ZuljinHasNotGuillotineandBelow50Health"/>
				<Validator val="ZuljinHasNotGuillotineandAbove50Health"/>
				<Validator val="ZuljinHasGuillotineandBelow50Health"/>
				<Validator val="ZuljinHasGuillotineandAbove50Health"/>
				
				<Animation name="ShowGuillotine">
					<Event event="Reset" action="Stop"/>
					<Event event="ZuljinHasNotGuillotineandBelow50Health" action="Stop"/>
					<Event event="ZuljinHasNotGuillotineandAbove50Health" action="Stop"/>
					<Event event="ZuljinHasGuillotineandBelow50Health" action="Restart, Play"/>
					<Event event="ZuljinHasGuillotineandAbove50Health" action="Restart, Play"/>
					
					<Controller type="Visibility" end="Pause" frame="$parent/ZuljinGuillotineParent">
						<Key type="Bool" time="0" value="True"/>
					</Controller>
					<Controller type="Visibility" end="Pause" frame="$parent/ZuljinGuillotineValueLabel">
						<Key type="Bool" time="0" value="True"/>
					</Controller>
				</Animation>
			</Frame>
		</Frame>
	</Frame>
	<!-- Zarya - fix label value -->
	<Frame type="SelectionUnitStatusPanel" name="ZaryaTraitFrame" file="Zarya">
		<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
			<Frame type="Label" name="ZaryaTraitLabel">
				<!-- <Text val="@Ahli/ZaryaTraitDamageBoostFix"/> DOES NOT WORK ANYMORE -->
				<Visible val="false"/>
			</Frame>
			<Frame type="Label" name="ZaryaTraitLabel2" template="Zarya/ZaryaTraitFrame/UnitStatusFrame0/ZaryaTraitLabel">
				<Text val="@Ahli/ZaryaTraitDamageBoostFix" />
			</Frame>
		</Frame>
	</Frame>
	<!-- Alarak - fix label value,  -->
	<!-- TODO: fix progress bar with new dataref tech? -->
	<Frame type="SelectionUnitStatusPanel" name="AlarakFrame" file="Alarak">
		<Frame type="UnitStatusFrame" name="UnitStatusFrame0">
			<Frame type="Image" name="AlarakSadismMeterBackGround">
				<Alpha val="0"/>
			</Frame>
			<Frame type="ProgressBar" name="AlarakSadismProgressBar">
				<Alpha val="0"/>
			</Frame>
			<Frame type="Frame" name="ProgressMask">
				<Alpha val="0"/>
			</Frame>
			<Frame type="Frame" name="ProgressGlowMask1">
				<Alpha val="0"/>
			</Frame>
			<Frame type="Frame" name="ProgressGlowMask2">
				<Alpha val="0"/>
			</Frame>
			<Frame type="Frame" name="ProgressGlowMask3">
				<Alpha val="0"/>
			</Frame>
			<Frame type="Image" name="ExtraGlowImage">
				<Alpha val="0"/>
			</Frame>
			<Frame type="Label" name="SadismLabel">
				<Text val="@Ahli/AlarakSadismLabel"/>
			</Frame>
			<Frame type="BehaviorIcon" name="SadismTooltipFrame">
				<Anchor side="Top" relative="$parent/SadismLabel" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent/SadismLabel" pos="Min" offset="0"/>
				<Anchor side="Right" relative="$parent/SadismLabelPercent" pos="Max" offset="0"/>
				<Anchor side="Bottom" relative="$parent/SadismLabelPercent" pos="Max" offset="0"/>
			</Frame>
		</Frame>
	</Frame>


	<!-- observer/replay tools toggle -->
	<Frame type="Frame" name="GameUI/UIContainer/FullscreenUpperContainer" file="GameUI">
		<Frame type="ToggleControl" name="ToggleControlObserverTools">
			<Anchor side="Bottom" relative="$parent" pos="Min" offset="0"/>
			<Anchor side="Right" relative="$parent" pos="Min" offset="0"/>
			<Height val="55"/>
			<Width val="2000"/>
			<CollapseLayout val="true"/>
			<!-- <Shortcut val="#Hotkey - Toggle ObserverTools"/> -->
			<Visible val="false"/>
			<AcceptsMouse val="false"/>
			<RenderPriority val="0"/>
			
			<!-- Status Animations -->
			<Animation name="StatusControl">
				<Event event="OnShown" action="DirectionForward,Play"/>
				<Event event="OnHidden" action="DirectionReverse,Play"/>

				<Controller type="Visibility" end="Pause" frame="$parent/ObserverPanelMovingContainer/ReplayPanel">
					<Key type="Bool" time="0.0" value="false"/>
					<Key type="Bool" time="0.4999" value="false"/>
					<Key type="Bool" time="0.5" value="true"/>
					<Key type="Bool" time="1.0" value="true"/>
				</Controller>

			</Animation>
			
			<!-- OnShown => Show -->
			<Animation name="EventRedirectShow">
				<Event event="OnShown" action="Play"/>
				<Controller type="Event" end="Stop">
					<Key type="Event" time="0" event="Show"/>
				</Controller>
			</Animation>
			<!-- OnHidden => Hide -->
			<Animation name="EventRedirectHide">
				<Event event="OnHidden" action="Play"/>
				<Controller type="Event" end="Stop">
					<Key type="Event" time="0" event="Hide"/>
				</Controller>
			</Animation>
			
			<!-- Transition Animations -->
			<Animation name="TransitionAnimations">
				<Event event="Show" action="DirectionForward,Play"/>
				<Event event="Hide" action="DirectionReverse,Play"/>
				
				<Controller type="Fade" end="Pause" frame="$parent/ObserverPanelMovingContainer/ReplayPanel">
					<Key type="Curve" time="0.0" value="0"/>
					<Key type="Curve" time="0.5" value="0"/>
					<Key type="Curve" time="1.0" value="255"/>
				</Controller>
				
				<Controller type="Anchor" end="Pause" side="Left" relative="true" frame="$parent/ObserverPanelMovingContainer/ReplayPanel">
					<Key type="Curve" time="0.0" value="-300" inout="Fast"/>
					<Key type="Curve" time="0.5" value="-300" inout="Fast"/>
					<Key type="Curve" time="1.0" value="0" inout="Slow"/>
				</Controller>
				<Controller type="Anchor" end="Pause" side="Top" relative="true" frame="$parent/$parent/ConsoleUIContainer/UnitSelectionInfoVerticalPositionControl/B">
					<Key type="Curve" time="0.0" value="140" inout="Slow"/>
					<Key type="Curve" time="0.5" value="0" inout="Slow"/>
					<Key type="Curve" time="1.0" value="0" inout="Slow"/>
				</Controller>
				<!-- <Controller type="Anchor" end="Pause" side="Left" relative="true" frame="$parent/ChatBarHorizOffset_A">
					<Key type="Curve" time="0.0" value="-200" inout="Slow"/>
					<Key type="Curve" time="0.5" value="0" inout="Slow"/>
					<Key type="Curve" time="1.0" value="0" inout="Slow"/>
				</Controller> -->
				<Controller type="Dimension" dimension="Width" relative="False" percentage="False" end="Pause" frame="$parent/ChatBarHorizOffset_A">
					<Key type="Curve" time="0" value="1" inout="Fast"/>
					<Key type="Curve" time="0.5" value="201" inout="Slow"/>
					<Key type="Curve" time="1.0" value="201" inout="Slow"/>
				</Controller>
				
			</Animation>
			
			
		</Frame>		
	</Frame>
	<!-- Observer/replay panel -->
	<Frame type="Frame" name="GameUI/UIContainer/FullscreenUpperContainer/ObserverPanelStartFrame" file="GameUI">
		<Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
		<Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
		<Anchor side="Right" relative="$parent" pos="Max" offset="0"/>
		<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
	</Frame>
	<Frame type="Frame" name="GameUI/UIContainer/FullscreenUpperContainer/ObserverPanelEndFrame" file="GameUI">
		<Anchor relative="$parent/ObserverPanelStartFrame"/>
	</Frame>
	<Frame type="MovingFrame" name="GameUI/UIContainer/FullscreenUpperContainer/ObserverPanelMovingContainer" file="GameUI">
		<Anchor relative="$parent/ObserverPanelStartFrame"/>
		
		<!-- panel is put offscreen (bottom @ -100) at the start to hide the pulldown, First time showing ReplayPanel will reveal it -->
		<Frame type="ObserverPanel" name="ObserverPanel">
			<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
			<Anchor side="Top" relative="$this" pos="Min" offset="0"/>
			<Anchor side="Bottom" relative="$parent" pos="Max" offset="-100"/>
			<Width val="400"/>
			<Height val="68"/>
			<AcceptsMouse val="false"/>
			<RenderPriority val="513"/>
			
			<Frame type="Pulldown" name="ViewPulldown">
				<Anchor side="Top" relative="$parent/$parent/ReplayPanel/PlayButton" pos="Min" offset="0"/>
				<Anchor side="Left" relative="$parent/$parent/ReplayPanel/PlayButton" pos="Max" offset="0"/>
				<Anchor side="Right" relative="$this" pos="Max" offset="0"/>
				<Visible val="true"/>
				<Width val="165"/>
				<Height val="55"/>
				<Style val="AhliVisionPulldown"/>
			<!-- <Options val="NoWrapping"/> NOT ACCEPTED :X but I fixed it via reducing vertical size of ItemContainer -->
				
				<Frame type="Image" name="PulldownArrow">
					<Anchor side="Top" relative="$parent" pos="Mid" offset="0"/>
					<Anchor side="Bottom" relative="$parent" pos="Mid" offset="0"/>
					<Anchor side="Right" relative="$parent" pos="Max" offset="-10"/>
					<Rotation val="180"/>
				</Frame>
				<Frame type="Image" name="PulldownArrowHover">
					<Anchor side="Top" relative="$parent" pos="Mid" offset="0"/>
					<Anchor side="Bottom" relative="$parent" pos="Mid" offset="0"/>
					<Anchor side="Right" relative="$parent" pos="Max" offset="-10"/>
					<Rotation val="180"/>
				</Frame>
				<Frame type="Frame" name="ItemContainer">
					<Anchor side="Left" relative="$parent" pos="Min" offset="14"/>
					<Anchor side="Right" relative="$parent" pos="Max" offset="-30"/>
					<Anchor side="Top" relative="$parent" pos="Min" offset="9"/>
					<Anchor side="Bottom" relative="$parent" pos="Max" offset="-3"/>
				</Frame>
			</Frame>
			
			<Frame type="Label" name="ViewLabel">
				<Visible val="false"/>
			</Frame>
			<Frame type="Button" name="ShowStatusBarsButton">
				<Visible val="false"/>
			</Frame>
			<Frame type="Button" name="LockCameraButton">
				<Visible val="false"/>
			</Frame>
		</Frame>
		
		<Frame type="ReplayPanel" name="ReplayPanel">
			<Anchor side="Left" relative="$parent" pos="Min" offset="0"/>
			<Anchor side="Top" relative="$parent" pos="Min" offset="0"/>
			<Anchor side="Bottom" relative="$parent" pos="Max" offset="0"/>
			<Anchor side="Right" relative="$this" pos="Max" offset="0"/>
			<Width val="420"/>
			<Height val="0"/>
			<Handle val="ReplayPanel"/>
			
			<!-- default offset top: -60 -->	
			<Frame type="Image" name="BackgroundImage">
				<Anchor side="Top" relative="$parent/ProgressSlider" pos="Min" offset="-52"/>
			</Frame>
		
			<!-- default offset bottom: -10 -->
			<Frame type="Slider" name="ProgressSlider">
				<Anchor side="Bottom" relative="$parent/PlayButton" pos="Min" offset="-5"/>
			</Frame>
			<Frame type="Label" name="SpeedValue">
				<Anchor side="Bottom" relative="$parent/ProgressSlider" pos="Min" offset="-3"/>
			</Frame>
			<Frame type="Label" name="TimeValue">
				<Anchor side="Bottom" relative="$parent/ProgressSlider" pos="Min" offset="-3"/>
			</Frame>

			<Frame type="Button" name="IncSpeedButton">
				<Anchor side="Left" relative="$parent/$parent/ObserverPanel/ViewPulldown" pos="Max" offset="0"/>
			</Frame>
			<Frame type="Button" name="DecSpeedButton">
				<Anchor side="Left" relative="$parent/IncSpeedButton" pos="Max" offset="0"/>
				<Anchor side="Right" relative="$this" pos="Max" offset="0"/>
			</Frame>
			
			<Animation name="FirstTimeShown">
				<Event event="OnShown" action="Play"/>
				<!-- end="Pause" because it should only play once. It is only here to initially detect that a replay is used.
					 Unfortunately, it will also run in live games when the observer tools are toggled the first time. -->
				<Controller type="Visibility" end="Pause" frame="$parent/$parent/ToggleControlObserverTools">
					<Key type="Bool" time="0.0" value="true"/>
				</Controller>
				<Controller type="Event" end="Pause" frame="$parent/$parent/ToggleControlObserverTools">
					<Key type="Event" time="0.0" event="OnShown"/>
				</Controller>
				<Controller type="Visibility" end="Pause" frame="$parent/$parent/InterfaceControl/Menu/Container/ReplayControls/CheckImage">
					<Key type="Bool" time="0.0" value="true"/>
				</Controller>
				<Controller type="Anchor" end="Pause" side="Bottom" relative="false" frame="$parent/ObserverPanel">
					<Key type="Curve" time="0.0" value="0" inout="Fast"/>
				</Controller>
			</Animation>
			
		</Frame>
		
	</Frame>
	
	
	
	
	<!-- Show 2D UI at portrait spot when portrait invisible -->
	<Frame type="Frame" name="GameUI/WorldPanel/UnitStatusPanel" file="GameUI">
		<Frame type="Frame" name="PortraitMaskFrame">
			<Anchor relative="$INVALID"/>
			<!-- BUG: propertybinding portrait's visibility is buggy when switching from player to everyone vision (-> internal code overriding UI's logic?).
					The propertybinding is overridden.
				attempt 2: Using Portrait's stategroup or a new one here does not work, either.
			<Visible val="{$PortraitPanel/Portrait/@Visible}"/>
			attempt 3: use different portraitMaskFrame and destroy this one.
			-->
		</Frame>
		<Frame type="Frame" name="PortraitMaskFrame2" template="GameUI/PortraitMaskFrameTemplate">
			<Anchor relative="$PortraitPanel" offset="4"/>
			<Handle val="PortraitMaskFrame"/>
			<!-- Visibility controlled by Portrait -->
		</Frame>
	</Frame>
	<Frame type="Frame" name="GameUI/UIContainer/ConsoleUIContainer/HeroCharacterSheetPanelContainer/HeroCharacterSheetPanel/HeroCharacterSheetPanelContainer/PortraitMaskFrame" file="GameUI">
		<Visible val="false"/>
	</Frame>
	
</Desc>
