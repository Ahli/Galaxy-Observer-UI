<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ahli</groupId>
	<artifactId>InterfaceBuilderUI</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>




	<!-- QUICK SETTINGS -->
	<properties>
		<jarName>compile</jarName>
		<executableJavaClass>application.Main</executableJavaClass>
		<jarTargetPath>../../../../dev</jarTargetPath>
	</properties>






	<!-- deprecated by enforcer plugin, but might be read by plugins -->
	<prerequisites>
		<maven>3.0</maven>
	</prerequisites>

	<build>
		<!-- name of the generated jar -->
		<finalName>${jarName}</finalName>
		<sourceDirectory>src</sourceDirectory>
		<resources>
			<!-- copy res folder to res folder in jar -->
			<resource>
				<targetPath>res</targetPath>
				<directory>res</directory>
			</resource>
			<resource>
				<directory>settings</directory>
				<!-- no target path makes it copy into root where log4j2's files want 
					to be -->
			</resource>
			<!-- copy non java files from src -->
			<resource>
				<directory>src</directory>
				<excludes>
					<exclude>**/*.java</exclude>
					<exclude>**/*.txt</exclude>
				</excludes>
			</resource>
		</resources>

		<pluginManagement>
			<plugins>
				<plugin>
					<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-antrun-plugin -->
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
				</plugin>
				<plugin>
					<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-assembly-plugin -->
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-dependency-plugin -->
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-release-plugin -->
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
				</plugin>

				<!-- goal to execute to check for plugins and dependency updates:
					 versions:display-plugin-updates
					 versions:display-dependency-updates
				 -->
				<!-- https://mvnrepository.com/artifact/org.codehaus.mojo/versions-maven-plugin -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.5</version>
				</plugin>
			</plugins>
		</pluginManagement>



		<plugins>
			<!-- Force requirement of Maven version 3.0+ -->
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-enforcer-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M1</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>[3.0,)</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>9</source>
					<target>9</target>
					<!--<release>9</release>-->
					<excludes>
						<!-- excludes files from being put into same path as classes -->
						<exclude>**/*.txt</exclude>
					</excludes>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			
			<!-- Verifies that created target bytecode is compatible with Java API 
				level -->
<!-- 			<plugin> -->
<!-- 				https://mvnrepository.com/artifact/org.codehaus.mojo/animal-sniffer-maven-plugin -->
<!-- 				<groupId>org.codehaus.mojo</groupId> -->
<!-- 				<artifactId>animal-sniffer-maven-plugin</artifactId> -->
<!-- 				<version>1.16</version> -->
<!-- 				<executions> -->
<!-- 					<execution> -->
<!-- 						<id>check-java-version</id> -->
<!-- 						<phase>compile</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>check</goal> -->
<!-- 						</goals> -->
<!-- 						<configuration> -->
<!-- 							signature to check code against for Java API compatibility It should match the compiler's target version -->
<!-- 							<signature> -->
<!-- 								<groupId>org.codehaus.mojo.signature</groupId> -->
<!-- 								check: https://mvnrepository.com/artifact/org.codehaus.mojo.signature?sort=newest -->
<!-- 								<artifactId>java18</artifactId> -->
<!-- 								<artifactId>java17</artifactId> -->
<!-- 								<artifactId>java15</artifactId> -->
<!-- 								<artifactId>java14</artifactId> -->
<!-- 								<artifactId>java13</artifactId> -->
<!-- 								<artifactId>java12</artifactId> -->
<!-- 								<version>1.0</version> -->
<!-- 								<artifactId>java16</artifactId> -->
<!-- 								<version>1.1</version> -->
<!-- 							</signature> -->
<!-- 						</configuration> -->
<!-- 					</execution> -->
<!-- 				</executions> -->
<!-- 			</plugin> -->



			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-site-plugin -->
				<artifactId>maven-site-plugin</artifactId>
				<version>3.6</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-deploy-plugin -->
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-install-plugin -->
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5.2</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20.1</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-resources-plugin -->
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-clean-plugin -->
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>

			<!-- Remove stuff from generated jar (replaces maven-assembly-plugin) -->
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-shade-plugin -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<!-- stops generating a new pom.xml (minus its dependencies) in the 
						project that doesn't seem to be used -->
					<createDependencyReducedPom>false</createDependencyReducedPom>
					<!-- minimizeJar = remove unused classes -->
					<minimizeJar>true</minimizeJar>
					<filters>
						<filter>
							<!-- do for every artifact -->
							<artifact>*:*</artifact>
							<excludes>
								<!-- Removes META-INF/maven/ directory from generated jar -->
								<exclude>META-INF/maven/**</exclude>
							</excludes>
						</filter>
						<filter>
							<artifact>org.apache.logging.log4j:*</artifact>
							<includes>
								<!-- <include>org.apache.commons.logging.impl.LogFactoryImpl</include>-->
								<include>org/apache/logging/log4j/**</include>

								<!-- <include>Log4j-*.xsd</include> -->
								<!-- <include>Log4j-*.dtd</include> -->
								<include>META-INF/versions/**</include>
								<include>META-INF/services/**</include>
<!-- 								<include>**</include> -->
							</includes>
							<excludes>
								<exclude>org/apache/logging/log4j/core/appender/db/**</exclude>
								<exclude>org/apache/logging/log4j/core/appender/mom/**</exclude>
								<exclude>org/apache/logging/log4j/core/appender/sql/**</exclude>
								<exclude>org/apache/logging/log4j/core/appender/rewrite/**</exclude>
								<exclude>org/apache/logging/log4j/core/tools/**</exclude>
								<exclude>org/apache/logging/log4j/core/osgi/**</exclude>
								<exclude>org/apache/logging/log4j/core/parser/**</exclude>
								<exclude>org/apache/logging/log4j/core/message/**</exclude>
								<exclude>org/apache/logging/log4j/core/jackson/**</exclude>
								<exclude>org/apache/logging/log4j/core/config/json/**</exclude>
								<exclude>org/apache/logging/log4j/core/config/composite/**</exclude>
								<exclude>org/apache/logging/log4j/core/config/yaml/**</exclude>
								<exclude>org/apache/logging/log4j/core/config/plugins/convert**</exclude>
								<exclude>org/apache/logging/log4j/core/config/plugins/processor**</exclude>
								<exclude>org/apache/logging/log4j/core/config/plugins/util**</exclude>
								<exclude>org/apache/logging/log4j/core/config/plugins/validation**</exclude>
								<exclude>org/apache/logging/log4j/core/config/plugins/visitors**</exclude>
								<exclude>org/apache/logging/log4j/message**</exclude>
								<exclude>org/apache/logging/log4j/simple**</exclude>
								<exclude>org/apache/logging/log4j/spi**</exclude>
								<exclude>org/apache/logging/log4j/status**</exclude>
								<exclude>org/apache/logging/log4j/util**</exclude>
							</excludes>
						</filter>
					</filters>
					<transformers>
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
							<mainClass>${executableJavaClass}</mainClass>
						</transformer>
						<transformer
							implementation="com.github.edwgiz.mavenShadePlugin.log4j2CacheTransformer.PluginsCacheFileTransformer">
						</transformer>
					</transformers>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<finalName>${jarName}</finalName>
							<outputFile>${project.build.directory}/${jarTargetPath}/${jarName}.jar</outputFile>
						</configuration>
					</execution>
				</executions>
                <dependencies>
                    <dependency>
                        <groupId>com.github.edwgiz</groupId>
                        <artifactId>maven-shade-plugin.log4j2-cachefile-transformer</artifactId>
                        <version>2.8.1</version>
                    </dependency>
                </dependencies>
			</plugin>



		</plugins>
	</build>
	<dependencies>
		<!-- file IO stuff -->
		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>

		<!-- log4j2 -->
		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.10.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.10.0</version>
		</dependency>

		<!-- used in async logger -->
		<!-- https://mvnrepository.com/artifact/com.lmax/disruptor -->
		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
			<version>3.3.7</version>
		</dependency>

		<!-- to get stack trace as String -->
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.7</version>
		</dependency>

		<!-- IN ORDER TO MAKE ANIMAL SNIFFER IGNORE JAVAFX AS IT CANNOT HANDLE 
			IT make sure that SDK is installed and used in eclipse's settings as a JRE 
			might use another path
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>javafx</artifactId>
			<version>999.0</version>
			<systemPath>${java.home}/lib/ext/jfxrt.jar</systemPath>
			<scope>system</scope>
		</dependency> -->
		
		<!-- dependency to GalaxyLib -->
		<dependency>
			<groupId>ahli</groupId>
			<artifactId>GalaxyLib</artifactId>
			<version>1.0.0-SNAPSHOT</version>
			<scope>compile</scope>
		</dependency>
		
		
		<!-- JavaFX powerful text control -->
		<!-- https://mvnrepository.com/artifact/org.fxmisc.richtext/richtextfx -->
		<dependency>
		    <groupId>org.fxmisc.richtext</groupId>
		    <artifactId>richtextfx</artifactId>
		    <version>0.8.1</version>
		</dependency>
		
		<!-- somehow required for java9's modules stuff because some lib uses this?
		<dependency>
		    <groupId>org.reactfx</groupId>
		    <artifactId>reactfx</artifactId>
		    <version>2.0-M5</version>
		</dependency> -->
		
	</dependencies>
    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <name>Central Repository</name>
            <url>http://central.maven.org/maven2</url>
        </pluginRepository>
    </pluginRepositories>
</project>