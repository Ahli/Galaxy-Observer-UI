<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.github.ahli</groupId>
	<artifactId>observer-ui-settings-editor</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>Observer UI Settings Editor</name>

	<!-- goal to execute to check for plugins and dependency updates:
			 versions:display-plugin-updates versions:display-dependency-updates
	 -->

	<!-- QUICK SETTINGS -->
	<properties>
		<java.version>16</java.version>
		<jarName>Observer UI Settings Editor App</jarName>
		<executableJavaClass>com.ahli.hotkey_ui.application.Main</executableJavaClass>
		<jarTargetPath>../../release/Observer UI Settings Editor</jarTargetPath>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<moduleName>ObserverUiSettingsEditor</moduleName>
		<javafx.version>17-ea+9</javafx.version>
		<commons-lang3.version>3.12.0</commons-lang3.version>
		<log4j2.version>2.14.1</log4j2.version>
		<commons-io.version>2.8.0</commons-io.version>
		<commons-configuration2.version>2.7</commons-configuration2.version>
		<commons-text.version>1.9</commons-text.version>
		<commons-logging.version>1.2</commons-logging.version>
		<lmax-disruptor.version>3.4.4</lmax-disruptor.version>
		<commons-collection.version>3.2.2</commons-collection.version>
		<commons-beanutils.version>1.9.4</commons-beanutils.version>
		<vtd-xml.version>2.13.4</vtd-xml.version>
		<asm.version>9.1</asm.version>
		<eclipse-collection.version>10.4.0</eclipse-collection.version>
	</properties>

	<build>
		<!-- name of the generated jar -->
		<!--<finalName>${jarName}</finalName>-->
		<sourceDirectory>src/main/java</sourceDirectory>
		<resources>
			<!-- copy res folder to res folder in jar -->
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<plugins>
			<!-- Force requirement of Maven version 3.0+ -->
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-enforcer-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M3</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>[3.1.0,)</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<release>${java.version}</release>
					<excludes>
						<!-- excludes files from being put into same path as classes -->
						<exclude>**/*.txt</exclude>
					</excludes>
					<encoding>UTF-8</encoding>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
					<!--<compilerArgs>&#45;&#45;enable-preview</compilerArgs>-->
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm</artifactId>
						<version>${asm.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<!-- create executable jar -->
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>${executableJavaClass}</mainClass>
						</manifest>
					</archive>
					<!-- for moditect -->
					<outputDirectory>
						${project.build.directory}/modules
					</outputDirectory>

				</configuration>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-site-plugin -->
				<artifactId>maven-site-plugin</artifactId>
				<version>3.9.1</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-deploy-plugin -->
				<artifactId>maven-deploy-plugin</artifactId>
				<version>3.0.0-M1</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-install-plugin -->
				<artifactId>maven-install-plugin</artifactId>
				<version>3.0.0-M1</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-antrun-plugin -->
				<artifactId>maven-antrun-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-release-plugin -->
				<artifactId>maven-release-plugin</artifactId>
				<version>3.0.0-M4</version>
			</plugin>

			<!-- https://mvnrepository.com/artifact/org.codehaus.mojo/versions-maven-plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.8.1</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<!--<argLine>&#45;&#45;enable-preview</argLine>-->
				</configuration>
				<dependencies>
					<dependency>
						<!-- https://mvnrepository.com/artifact/org.ow2.asm/asm -->
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm</artifactId>
						<version>${asm.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-resources-plugin -->
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-clean-plugin -->
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>

			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>6.1.6</version>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<failOnError>false</failOnError>
					<assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.moditect</groupId>
				<artifactId>moditect-maven-plugin</artifactId>
				<version>1.0.0.RC1</version>
				<dependencies>
					<dependency>
						<!-- https://mvnrepository.com/artifact/org.ow2.asm/asm -->
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm</artifactId>
						<version>${asm.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>add-module-infos</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>add-module-info</goal>
						</goals>
						<configuration>
							<overwriteExistingFiles>true</overwriteExistingFiles>
							<outputDirectory>${project.build.directory}/modules</outputDirectory>
							<modules>
								<module>
									<artifact>
										<groupId>commons-io</groupId>
										<artifactId>commons-io</artifactId>
										<version>${commons-io.version}</version>
									</artifact>
									<moduleInfoSource>
										module org.apache.commons.io {
										exports org.apache.commons.io;
										exports org.apache.commons.io.filefilter;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.apache.commons</groupId>
										<artifactId>commons-text</artifactId>
										<version>${commons-text.version}</version>
									</artifact>
									<moduleInfoSource>
										module org.apache.commons.text {
										exports org.apache.commons.text;
										exports org.apache.commons.text.lookup;
										requires org.apache.commons.lang3;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.openjfx</groupId>
										<artifactId>javafx-controls</artifactId>
										<version>${javafx.version}</version>
									</artifact>
									<moduleInfoSource>
										module javafx.controlsEmpty {
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>com.lmax</groupId>
										<artifactId>disruptor</artifactId>
										<version>${lmax-disruptor.version}</version>
									</artifact>
									<moduleInfoSource>
										module com.lmax.disruptor {
										exports com.lmax.disruptor;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>commons-logging</groupId>
										<artifactId>commons-logging</artifactId>
										<version>${commons-logging.version}</version>
									</artifact>
									<moduleInfoSource>
										module org.apache.commons.logging {
										exports org.apache.commons.logging;
										exports org.apache.commons.logging.impl;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.apache.logging.log4j</groupId>
										<artifactId>log4j-core</artifactId>
										<version>${log4j2.version}</version>
									</artifact>
									<!-- opens might not be needed -->
									<moduleInfoSource>
										module org.apache.logging.log4j.core {
										exports org.apache.logging.log4j.core;
										requires org.apache.logging.log4j;
										opens org.apache.logging.log4j.core;
										exports org.apache.logging.log4j.core.util;
										opens org.apache.logging.log4j.core.util;
										exports org.apache.logging.log4j.core.tools;
										opens org.apache.logging.log4j.core.tools;
										exports org.apache.logging.log4j.core.time;
										opens org.apache.logging.log4j.core.time;
										exports org.apache.logging.log4j.core.selector;
										opens org.apache.logging.log4j.core.selector;
										exports org.apache.logging.log4j.core.script;
										opens org.apache.logging.log4j.core.script;
										exports org.apache.logging.log4j.core.pattern;
										opens org.apache.logging.log4j.core.pattern;
										exports org.apache.logging.log4j.core.parser;
										opens org.apache.logging.log4j.core.parser;
										exports org.apache.logging.log4j.core.net;
										opens org.apache.logging.log4j.core.net;
										exports org.apache.logging.log4j.core.message;
										opens org.apache.logging.log4j.core.message;
										exports org.apache.logging.log4j.core.lookup;
										opens org.apache.logging.log4j.core.lookup;
										exports org.apache.logging.log4j.core.layout;
										opens org.apache.logging.log4j.core.layout;
										exports org.apache.logging.log4j.core.jmx;
										opens org.apache.logging.log4j.core.jmx;
										exports org.apache.logging.log4j.core.impl;
										opens org.apache.logging.log4j.core.impl;
										exports org.apache.logging.log4j.core.filter;
										opens org.apache.logging.log4j.core.filter;
										exports org.apache.logging.log4j.core.config;
										opens org.apache.logging.log4j.core.config;
										exports org.apache.logging.log4j.core.async;
										opens org.apache.logging.log4j.core.async;
										exports org.apache.logging.log4j.core.appender;
										opens org.apache.logging.log4j.core.appender;
										exports org.apache.logging.log4j.core.osgi;
										opens org.apache.logging.log4j.core.osgi;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.apache.commons</groupId>
										<artifactId>commons-lang3</artifactId>
										<version>${commons-lang3.version}</version>
									</artifact>
									<moduleInfoSource>
										module org.apache.commons.lang3 {
										exports org.apache.commons.lang3;
										exports org.apache.commons.lang3.builder;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.apache.commons</groupId>
										<artifactId>commons-configuration2</artifactId>
										<version>${commons-configuration2.version}</version>
									</artifact>
									<moduleInfoSource>
										module org.apache.commons.configuration2 {
										exports org.apache.commons.configuration2;
										exports org.apache.commons.configuration2.ex;
										exports org.apache.commons.configuration2.builder.fluent;
										requires org.apache.commons.logging;
										requires org.apache.commons.beanutils;
										requires org.apache.commons.text;
										exports org.apache.commons.configuration2.builder;
										requires org.apache.commons.lang3;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>com.ximpleware</groupId>
										<artifactId>vtd-xml</artifactId>
										<version>${vtd-xml.version}</version>
									</artifact>
									<moduleInfoSource>
										module vtd.xml {
										exports com.ximpleware;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.openjfx</groupId>
										<artifactId>javafx-graphics</artifactId>
										<version>${javafx.version}</version>
									</artifact>
									<moduleInfoSource>
										module javafx.graphicsEmpty {
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.openjfx</groupId>
										<artifactId>javafx-media</artifactId>
										<version>${javafx.version}</version>
									</artifact>
									<moduleInfoSource>
										module javafx.mediaEmpty {
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.openjfx</groupId>
										<artifactId>javafx-media</artifactId>
										<version>${javafx.version}</version>
									</artifact>
									<moduleInfoSource>
										module javafx.mediaEmpty {
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.openjfx</groupId>
										<artifactId>javafx-fxml</artifactId>
										<version>${javafx.version}</version>
									</artifact>
									<moduleInfoSource>
										module javafx.fxmlEmpty {
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.openjfx</groupId>
										<artifactId>javafx-base</artifactId>
										<version>${javafx.version}</version>
									</artifact>
									<moduleInfoSource>
										module javafx.baseEmpty {
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>commons-beanutils</groupId>
										<artifactId>commons-beanutils</artifactId>
										<version>${commons-beanutils.version}</version>
									</artifact>
									<moduleInfoSource>
										module org.apache.commons.beanutils {
										exports org.apache.commons.beanutils;
										requires java.desktop;
										requires org.apache.commons.logging;
										requires java.sql;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>commons-collections</groupId>
										<artifactId>commons-collections</artifactId>
										<version>${commons-collection.version}</version>
									</artifact>
									<moduleInfoSource>
										module org.apache.commons.collections {
										exports org.apache.commons.collections;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.eclipse.collections</groupId>
										<artifactId>eclipse-collections</artifactId>
										<version>${eclipse-collection.version}</version>
									</artifact>
									<moduleInfoSource>
										module org.eclipse.collections.impl {
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.eclipse.collections</groupId>
										<artifactId>eclipse-collections-api</artifactId>
										<version>${eclipse-collection.version}</version>
									</artifact>
									<moduleInfoSource>
										module org.eclipse.collections.api {
										}
									</moduleInfoSource>
								</module>
							</modules>
						</configuration>
					</execution>
					<execution>
						<id>create-runtime-image</id>
						<phase>package</phase>
						<goals>
							<goal>create-runtime-image</goal>
						</goals>
						<configuration>
							<modulePath>
								<path>${project.build.directory}/modules</path>
							</modulePath>
							<modules>
								<module>${moduleName}</module>
							</modules>
							<!-- references toolchains.xml in ".m2" directory of the user -->
							<baseJdk>version=16,vendor=openjdk</baseJdk>
							<outputDirectory>
								${project.build.directory}/jlink-image
							</outputDirectory>
							<stripDebug>true</stripDebug>
							<compression>2</compression>
							<ignoreSigningInformation>true</ignoreSigningInformation>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.2</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/modules</outputDirectory>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
	<dependencies>
		<!-- file IO stuff -->
		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>

		<!-- log4j2 -->
		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j2.version}</version>
		</dependency>

		<!-- used in async logging -->
		<!-- https://mvnrepository.com/artifact/com.lmax/disruptor -->
		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
			<version>${lmax-disruptor.version}</version>
		</dependency>

		<!-- to get stack trace as String -->
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>

		<!-- dependency to GalaxyLib -->
		<dependency>
			<groupId>io.github.ahli</groupId>
			<artifactId>galaxy-lib</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>

		<!-- JavaFX -->
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-graphics -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-controls -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-base -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-base</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-fxml -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-media -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-media</artifactId>
			<version>${javafx.version}</version>
		</dependency>

	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!-- update dependency within configuration2 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-text</artifactId>
				<version>${commons-text.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

</project>