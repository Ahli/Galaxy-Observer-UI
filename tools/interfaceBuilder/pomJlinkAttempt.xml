<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ahli</groupId>
	<artifactId>interface-builder</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>InterfaceBuilder</name>
	<description>Application to build Observer Interface files for StarCraft II and Heroes of the Storm.</description>

	<!--
	goals:
	- list all dependencies:
		compile org.apache.maven.plugins:maven-dependency-plugin:3.1.1:resolve
	-->

	<parent>
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-parent -->
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!--<jarName>compile</jarName>-->
		<executableJavaClass>interfacebuilder.InterfaceBuilderApp</executableJavaClass>
		<jarTargetPath>../../../../dev</jarTargetPath>
		<moduleName>interfacex.builder</moduleName>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<!-- exclude junit4 as junit5 is used -->
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
				<!-- excusions to make module-info happy -->
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-jcl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<!-- Exclude Spring Boot's Default Logging to use log4j instead -->
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
				<!-- remove dependencies that are not required -->
				<exclusion>
					<groupId>org.yaml</groupId>
					<artifactId>snakeyaml</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Add Log4j2 Dependency -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<!-- Spring Development helpers
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId> MAVEN DOES NOT FIND IT RIGHT NOW
			<version>2.0.0.RC2</version>
			<optional>true</optional>
		</dependency> -->

		<!-- spring's package with jpa, hibernate -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<exclusions>
				<!-- module info test -->
				<!--<exclusion>-->
				<!--<groupId>javax.transaction</groupId>-->
				<!--<artifactId>javax.transaction-api</artifactId>-->
				<!--</exclusion>-->
			</exclusions>
		</dependency>

		<!-- JavaEE's JAXB for JPA/Hibernate -->
		<!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.4.0-b180830.0359</version>
		</dependency>

		<!-- file IO -->
		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>

		<!-- log4j2 -->
		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.11.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.11.1</version>
		</dependency>
		<!-- async logging in log4j -->
		<!-- https://mvnrepository.com/artifact/com.lmax/disruptor -->
		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
			<version>3.4.2</version>
		</dependency>

		<!-- to get stack trace as String -->
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.8.1</version>
		</dependency>

		<!-- dependency to GalaxyLib -->
		<dependency>
			<groupId>ahli</groupId>
			<artifactId>GalaxyLib</artifactId>
			<version>1.0.0-SNAPSHOT</version>
			<scope>compile</scope>
		</dependency>
		<!-- dependency to Edit CascExtractor's config file -->
		<dependency>
			<groupId>ahli</groupId>
			<artifactId>CascExplorerConfigFileEdit</artifactId>
			<version>1.0.0-SNAPSHOT</version>
			<scope>compile</scope>
		</dependency>

		<!-- JavaFX powerful text control -->
		<!-- https://mvnrepository.com/artifact/org.fxmisc.richtext/richtextfx -->
		<!--<dependency>-->
		<!--<groupId>org.fxmisc.richtext</groupId>-->
		<!--<artifactId>richtextfx</artifactId>-->
		<!--<version>0.9.1</version>-->
		<!--</dependency>-->

		<!-- JavaFX Font Awesome -->
		<!-- https://mvnrepository.com/artifact/de.jensd/fontawesomefx-fontawesome -->
		<dependency>
			<groupId>de.jensd</groupId>
			<artifactId>fontawesomefx-fontawesome</artifactId>
			<version>4.7.0-9.1.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/de.jensd/fontawesomefx-commons -->
		<dependency>
			<groupId>de.jensd</groupId>
			<artifactId>fontawesomefx-commons</artifactId>
			<version>9.1.2</version>
		</dependency>

		<!-- Embedded DB -->
		<!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.197</version>
			<scope>runtime</scope>
		</dependency>

		<!-- additional controls for javaFX -->
		<!-- https://mvnrepository.com/artifact/org.controlsfx/controlsfx
		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
			<version>9.0.0</version>
		</dependency> -->

		<!-- Testing Framework JUnit5 -->
		<!-- also: exclude junit4 in spring boot + add it as dependency to maven surefire -->
		<dependency>
			<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine -->
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- https://mvnrepository.com/artifact/org.junit.platform/junit-platform-surefire-provider -->
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-surefire-provider</artifactId>
			<version>1.3.1</version>
			<scope>test</scope>
		</dependency>
		<!-- Mockito to assist unit tests with fake-DB info -->
		<dependency>
			<!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.23.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter -->
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>2.23.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.7</version>
		</dependency>


		<!-- modules-info madness tested -->
		<dependency>
			<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations -->
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.9.7</version>
		</dependency>
		<!--<dependency>-->
		<!--&lt;!&ndash; https://mvnrepository.com/artifact/javax.transaction/javax.transaction-api &ndash;&gt;-->
		<!--<groupId>javax.transaction</groupId>-->
		<!--<artifactId>javax.transaction-api</artifactId>-->
		<!--<version>1.3</version>-->
		<!--</dependency>-->


		<!-- JDK11 JavaFX -->
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-graphics -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics</artifactId>
			<version>11.0.1-ea+1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-controls -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>11.0.1-ea+1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-base -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-base</artifactId>
			<version>11.0.1-ea+1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-fxml -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>11.0.1-ea+1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-media -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-media</artifactId>
			<version>11.0.1-ea+1</version>
		</dependency>

		<!-- test: to allow richtextfx accessing javafx internals
		 Unable to make com.sun.javafx.scene.text.TextLayout javafx.scene.text.TextFlow.getTextLayout()
		 accessible: module javafx.graphics does not "opens javafx.scene.text" to module richtextfx
		 -->
		<dependency>
			<groupId>com.nqzero</groupId>
			<artifactId>permit-reflect</artifactId>
			<version>0.3</version>
		</dependency>

	</dependencies>

	<build>
		<!-- name of the generated jar -->
		<!--<finalName>${jarName}</finalName>-->

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!--<executions>-->
				<!--<execution>-->
				<!--<goals>-->
				<!--<goal>repackage</goal>-->
				<!--</goals>-->
				<!--<configuration>-->
				<!--&lt;!&ndash;<finalName>${jarName}</finalName>&ndash;&gt;-->
				<!--<layout>JAR</layout>-->
				<!--<classifier>spring-boot</classifier>-->
				<!--<mainClass>${executableJavaClass}</mainClass>-->
				<!--&lt;!&ndash; for moditect &ndash;&gt;-->
				<!--<outputDirectory>-->
				<!--${project.build.directory}-->
				<!--</outputDirectory>-->
				<!--</configuration>-->
				<!--</execution>-->
				<!--</executions>-->
			</plugin>

			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>11</source>
					<target>11</target>
					<release>11</release>
					<excludes>
						<!-- excludes files from being put into same path as classes -->
						<exclude>**/*.txt</exclude>
					</excludes>
					<encoding>UTF-8</encoding>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
					<!-- parameters for JDK 10
					<parameters>true</parameters>
					<compilerArgument>-.-add-modules=javafx.controls,javafx.base,javafx.fxml,javafx.graphics
					</compilerArgument>-->
				</configuration>
				<dependencies>
					<dependency>
						<!-- https://mvnrepository.com/artifact/org.ow2.asm/asm -->
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm</artifactId>
						<version>7.0</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-site-plugin -->
				<artifactId>maven-site-plugin</artifactId>
				<version>3.7.1</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-deploy-plugin -->
				<artifactId>maven-deploy-plugin</artifactId>
				<version>3.0.0-M1</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-install-plugin -->
				<artifactId>maven-install-plugin</artifactId>
				<version>3.0.0-M1</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M1</version>
				<configuration>
					<!-- FIX: unit test crashing VM with modules-info -->
					<forkCount>0</forkCount>
				</configuration>
				<dependencies>
					<dependency>
						<!-- https://mvnrepository.com/artifact/org.junit.platform/junit-platform-surefire-provider -->
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-surefire-provider</artifactId>
						<version>1.3.1</version>
					</dependency>
					<dependency>
						<!-- https://mvnrepository.com/artifact/org.ow2.asm/asm -->
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm</artifactId>
						<version>7.0</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-resources-plugin -->
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-clean-plugin -->
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>

			<!-- Force requirement of Maven version 3.0+ -->
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-enforcer-plugin -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M2</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>[3.0.5,)</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>interfacebuilder.InterfaceBuilderApp</mainClass>
				</configuration>
			</plugin>

			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-antrun-plugin -->
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-assembly-plugin -->
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-release-plugin -->
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
			</plugin>

			<!-- goal to execute to check for plugins and dependency updates:
				 versions:display-plugin-updates versions:display-dependency-updates
			 -->
			<!-- https://mvnrepository.com/artifact/org.codehaus.mojo/versions-maven-plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.7</version>
			</plugin>


			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>3.3.4</version>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<failOnError>false</failOnError>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.moditect</groupId>
				<artifactId>moditect-maven-plugin</artifactId>
				<version>1.0.0.Beta1</version>
				<dependencies>
					<dependency>
						<!-- https://mvnrepository.com/artifact/org.ow2.asm/asm -->
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm</artifactId>
						<version>7.0</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>add-module-infos</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>add-module-info</goal>
						</goals>
						<configuration>
							<overwriteExistingFiles>true</overwriteExistingFiles>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<modules>
								<!--<module>-->
								<!--<artifact>-->
								<!--<groupId>ahli</groupId>-->
								<!--<artifactId>interface-builder</artifactId>-->
								<!--<version>0.0.1-SNAPSHOT</version>-->
								<!--</artifact>-->
								<!--<moduleInfoSource>-->
								<!--module interfacex.builder {-->
								<!--requires java.desktop;-->
								<!--requires java.persistence;-->
								<!--requires java.xml;-->
								<!--requires com.fasterxml.jackson.databind;-->
								<!--requires com.fasterxml.jackson.annotation;-->
								<!--//	requires controlsfx;-->
								<!--requires core;-->
								<!--requires de.jensd.fx.glyphs.fontawesome;-->
								<!--requires javafx.base;-->
								<!--requires javafx.controls;-->
								<!--requires javafx.fxml;-->
								<!--requires javafx.graphics;-->
								<!--requires org.apache.commons.configuration2;-->
								<!--requires org.apache.commons.io;-->
								<!--requires org.apache.logging.log4j;-->
								<!--requires org.apache.logging.log4j.core;-->
								<!--requires org.hibernate.orm.core;-->
								<!--//	requires richtextfx; disabled because not properly supporting jdk11-->
								<!--//	requires flowless; part of richtextfx-->
								<!--requires spring.beans;-->
								<!--requires spring.boot.autoconfigure;-->
								<!--requires spring.boot;-->
								<!--requires spring.context;-->
								<!--requires spring.core;-->
								<!--requires spring.data.commons;-->
								<!--requires spring.data.jpa;-->
								<!--requires spring.tx;-->
								<!--requires CascExplorerConfigFileEdit;-->
								<!--requires GalaxyLib;-->
								<!--requires permit.reflect;-->

								<!--// fix: spring boot not finding sqlexception-->
								<!--requires java.sql;-->
								<!--// fix spring boot not finding jaxbexception-->
								<!--requires java.xml.bind;-->
								<!--// fix spring boot not finding bytebuddy classes for hibernate configuration-->
								<!--requires net.bytebuddy;-->

								<!--// log4j export is a test to fix stylized text area appender-->
								<!--exports interfacebuilder to javafx.graphics, javafx.fxml, spring.context;-->
								<!--opens interfacebuilder to javafx.fxml, spring.core, spring.beans;-->
								<!--opens interfacebuilder.config to spring.core;-->
								<!--opens interfacebuilder.compress to org.hibernate.orm.core, spring.core;-->
								<!--opens interfacebuilder.projects to org.hibernate.orm.core, spring.core, spring.beans;-->
								<!--exports interfacebuilder.config to spring.beans, spring.context;-->
								<!--opens interfacebuilder.build to spring.core;-->
								<!--opens interfacebuilder.base_ui to spring.core;-->
								<!--opens view;-->
								<!--opens i18n;-->
								<!--opens res; // not sure if required atm-->
								<!--opens interfacebuilder.ui.navigation to spring.core, javafx.fxml;-->
								<!--opens interfacebuilder.ui.home to spring.core, javafx.fxml;-->
								<!--opens interfacebuilder.ui.settings to spring.core, javafx.fxml;-->
								<!--opens interfacebuilder.ui.browse to spring.core, javafx.fxml;-->
								<!--// open to log4j to maybe fix the appender-->
								<!--opens interfacebuilder.ui.progress to javafx.fxml, org.apache.logging.log4j;-->
								<!--exports interfacebuilder.ui.progress to org.apache.logging.log4j.core;-->
								<!--exports interfacebuilder.integration;-->
								<!--exports interfacebuilder.ui.navigation;-->
								<!--}-->
								<!--</moduleInfoSource>-->
								<!--</module>-->
								<module>
									<artifact>
										<groupId>commons-io</groupId>
										<artifactId>commons-io</artifactId>
										<version>2.6</version>
									</artifact>
									<moduleInfoSource>
										module org.apache.commons.io {
										exports org.apache.commons.io;
										exports org.apache.commons.io.filefilter;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.apache.commons</groupId>
										<artifactId>commons-text</artifactId>
										<version>1.6</version>
									</artifact>
									<moduleInfoSource>
										module org.apache.commons.text {
										exports org.apache.commons.text;
										exports org.apache.commons.text.lookup;
										requires org.apache.commons.lang3;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>com.fasterxml.jackson.core</groupId>
										<artifactId>jackson-core</artifactId>
										<version>2.9.7</version>
									</artifact>
									<moduleInfoSource>
										module com.fasterxml.jackson.core {
										exports com.fasterxml.jackson.core;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.openjfx</groupId>
										<artifactId>javafx-controls</artifactId>
										<version>11.0.1-ea+1</version>
									</artifact>
									<moduleInfoSource>
										module javafx.controlsEmpty {
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>com.lmax</groupId>
										<artifactId>disruptor</artifactId>
										<version>3.4.2</version>
									</artifact>
									<moduleInfoSource>
										module com.lmax.disruptor {
										exports com.lmax.disruptor;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>com.fasterxml.jackson.core</groupId>
										<artifactId>jackson-annotations</artifactId>
										<version>2.9.7</version>
									</artifact>
									<moduleInfoSource>
										module com.fasterxml.jackson.annotation {
										exports com.fasterxml.jackson.annotation;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>commons-logging</groupId>
										<artifactId>commons-logging</artifactId>
										<version>1.2</version>
									</artifact>
									<moduleInfoSource>
										module org.apache.commons.logging {
										exports org.apache.commons.logging;
										exports org.apache.commons.logging.impl;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.apache.logging.log4j</groupId>
										<artifactId>log4j-core</artifactId>
										<version>2.11.1</version>
									</artifact>
									<!-- opens might not be needed -->
									<moduleInfoSource>
										module org.apache.logging.log4j.core {
										exports org.apache.logging.log4j.core;
										requires org.apache.logging.log4j;
										opens org.apache.logging.log4j.core;
										exports org.apache.logging.log4j.core.util;
										opens org.apache.logging.log4j.core.util;
										exports org.apache.logging.log4j.core.tools;
										opens org.apache.logging.log4j.core.tools;
										exports org.apache.logging.log4j.core.time;
										opens org.apache.logging.log4j.core.time;
										exports org.apache.logging.log4j.core.selector;
										opens org.apache.logging.log4j.core.selector;
										exports org.apache.logging.log4j.core.script;
										opens org.apache.logging.log4j.core.script;
										exports org.apache.logging.log4j.core.pattern;
										opens org.apache.logging.log4j.core.pattern;
										exports org.apache.logging.log4j.core.parser;
										opens org.apache.logging.log4j.core.parser;
										exports org.apache.logging.log4j.core.net;
										opens org.apache.logging.log4j.core.net;
										exports org.apache.logging.log4j.core.message;
										opens org.apache.logging.log4j.core.message;
										exports org.apache.logging.log4j.core.lookup;
										opens org.apache.logging.log4j.core.lookup;
										exports org.apache.logging.log4j.core.layout;
										opens org.apache.logging.log4j.core.layout;
										exports org.apache.logging.log4j.core.jmx;
										opens org.apache.logging.log4j.core.jmx;
										exports org.apache.logging.log4j.core.jackson;
										opens org.apache.logging.log4j.core.jackson;
										exports org.apache.logging.log4j.core.impl;
										opens org.apache.logging.log4j.core.impl;
										exports org.apache.logging.log4j.core.filter;
										opens org.apache.logging.log4j.core.filter;
										exports org.apache.logging.log4j.core.config;
										opens org.apache.logging.log4j.core.config;
										exports org.apache.logging.log4j.core.async;
										opens org.apache.logging.log4j.core.async;
										exports org.apache.logging.log4j.core.appender;
										opens org.apache.logging.log4j.core.appender;
										exports org.apache.logging.log4j.core.osgi;
										opens org.apache.logging.log4j.core.osgi;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.apache.commons</groupId>
										<artifactId>commons-lang3</artifactId>
										<version>3.8.1</version>
									</artifact>
									<moduleInfoSource>
										module org.apache.commons.lang3 {
										exports org.apache.commons.lang3;
										exports org.apache.commons.lang3.builder;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.apache.commons</groupId>
										<artifactId>commons-configuration2</artifactId>
										<version>2.4</version>
									</artifact>
									<moduleInfoSource>
										module org.apache.commons.configuration2 {
										exports org.apache.commons.configuration2;
										exports org.apache.commons.configuration2.ex;
										exports org.apache.commons.configuration2.builder.fluent;
										requires org.apache.commons.logging;
										requires org.apache.commons.beanutils;
										requires org.apache.commons.text;
										exports org.apache.commons.configuration2.builder;
										requires org.apache.commons.lang3;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>net.sf.trove4j</groupId>
										<artifactId>core</artifactId>
										<version>3.1.0</version>
									</artifact>
									<moduleInfoSource>
										module gnu.trove {
										exports gnu.trove;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>com.fasterxml.jackson.core</groupId>
										<artifactId>jackson-databind</artifactId>
										<version>2.9.7</version>
									</artifact>
									<moduleInfoSource>
										module com.fasterxml.jackson.databind {
										exports com.fasterxml.jackson.databind;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>com.ximpleware</groupId>
										<artifactId>vtd-xml</artifactId>
										<version>2.13.4</version>
									</artifact>
									<moduleInfoSource>
										module vtd.xml {
										exports com.ximpleware;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.openjfx</groupId>
										<artifactId>javafx-graphics</artifactId>
										<version>11.0.1-ea+1</version>
									</artifact>
									<moduleInfoSource>
										module javafx.graphicsEmpty {
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.openjfx</groupId>
										<artifactId>javafx-media</artifactId>
										<version>11.0.1-ea+1</version>
									</artifact>
									<moduleInfoSource>
										module javafx.mediaEmpty {
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.openjfx</groupId>
										<artifactId>javafx-media</artifactId>
										<version>11.0.1-ea+1</version>
									</artifact>
									<moduleInfoSource>
										module javafx.mediaEmpty {
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.openjfx</groupId>
										<artifactId>javafx-fxml</artifactId>
										<version>11.0.1-ea+1</version>
									</artifact>
									<moduleInfoSource>
										module javafx.fxmlEmpty {
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>org.openjfx</groupId>
										<artifactId>javafx-base</artifactId>
										<version>11.0.1-ea+1</version>
									</artifact>
									<moduleInfoSource>
										module javafx.baseEmpty {
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>commons-beanutils</groupId>
										<artifactId>commons-beanutils</artifactId>
										<version>1.9.3</version>
									</artifact>
									<moduleInfoSource>
										module org.apache.commons.beanutils {
										exports org.apache.commons.beanutils;
										requires java.desktop;
										requires org.apache.commons.logging;
										requires java.sql;
										}
									</moduleInfoSource>
								</module>
								<module>
									<artifact>
										<groupId>commons-collections</groupId>
										<artifactId>commons-collections</artifactId>
										<version>3.2.2</version>
									</artifact>
									<moduleInfoSource>
										module org.apache.commons.collections {
										exports org.apache.commons.collections;
										}
									</moduleInfoSource>
								</module>
							</modules>
						</configuration>
					</execution>
					<execution>
						<id>create-runtime-image</id>
						<phase>package</phase>
						<goals>
							<goal>create-runtime-image</goal>
						</goals>
						<configuration>
							<modulePath>
								<path>${project.build.directory}</path>
							</modulePath>
							<modules>
								<module>${moduleName}</module>
							</modules>
							<baseJdk>version=11,vendor=openjdk</baseJdk>
							<outputDirectory>
								${project.build.directory}/jlink-image
							</outputDirectory>
							<stripDebug>true</stripDebug>
							<compression>2</compression>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<repositories>
		<!--<repository>-->
		<!--<id>spring-snapshots</id>-->
		<!--<name>Spring Snapshots</name>-->
		<!--<url>https://repo.spring.io/snapshot</url>-->
		<!--<snapshots>-->
		<!--<enabled>true</enabled>-->
		<!--</snapshots>-->
		<!--</repository>-->
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<!--<repository>
			<id>mockito-repository</id>
			<name>Mockito Repository</name>
			<url>https://dl.bintray.com/mockito/maven/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>-->
	</repositories>

	<pluginRepositories>
		<!--<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>-->
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>central</id>
			<name>Central Repository</name>
			<url>http://central.maven.org/maven2</url>
		</pluginRepository>
	</pluginRepositories>


</project>
