<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.github.ahli</groupId>
	<artifactId>interface-builder</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>InterfaceBuilder</name>
	<description>Application to build Observer Interface files for StarCraft II and Heroes of the Storm.</description>

	<!-- for IntelliJ's configuration: add to VM options: -->
	<!--  - a fix for JavaFX's poor extensibility to add filter possibility to TreeItem via reflection; remove the # -->
	<!-- -#-add-opens=javafx.controls/javafx.scene.control=interfacex.builder -->
	<!-- -#-illegal-access=permit -->

	<parent>
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-parent -->
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.0-M2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<java.version>17</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<jarName>compile</jarName>
		<mainClass>com.ahli.interfacebuilder.SpringBootApplication</mainClass>

		<!-- override spring versions -->
		<lombok.version>1.18.24</lombok.version>
		<byte-buddy.version>1.12.9</byte-buddy.version>
		<glassfish-jaxb.version>3.0.2</glassfish-jaxb.version>
		<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core -->
		<hibernate.version>5.6.8.Final</hibernate.version><!-- 5.x.x.Final -> 6.0.0.Alpha6;
																still depends on javax.persistence -->
		<h2.version>2.1.212</h2.version>
		<junit-jupiter.version>5.8.2</junit-jupiter.version>
		<slf4j.version>1.7.36</slf4j.version>
		<commons-lang3.version>3.12.0</commons-lang3.version>
		<hikaricp.version>5.0.1</hikaricp.version>
		<jboss-logging.version>3.4.3.Final</jboss-logging.version>
		<mockito.version>4.5.1</mockito.version>
		<flyway.version>8.5.10</flyway.version>

		<!-- local versions -->
		<javafx.version>19-ea+5</javafx.version>
		<kryo.version>5.3.0</kryo.version>
		<pecoff4j.version>0.3.2</pecoff4j.version>
		<asm.version>9.3</asm.version>
		<log4j2.version>2.17.2</log4j2.version>
		<lmax-disruptor.version>3.4.4</lmax-disruptor.version>
		<fontawesomefx-fontawesome.version>4.7.0-9.1.2</fontawesomefx-fontawesome.version>
		<commons-text.version>1.9</commons-text.version>
		<equalsverifier.version>3.10</equalsverifier.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<!-- exclude junit4 as junit5 is used -->
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
				<exclusion>
					<!-- exclude junit4 as junit5 is used -->
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
				<!-- exclusions to make module-info happy -->
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-jcl</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.jetbrains.kotlin</groupId>
					<artifactId>kotlin-bom</artifactId>
				</exclusion>
				<!-- exclude unused dependencies -->
				<exclusion>
					<groupId>jakarta.activation</groupId>
					<artifactId>jakarta.activation-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Spring Development helpers
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
			<scope>runtime</scope>
		</dependency> -->

		<!-- Spring Actuator for Debugging
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency> -->

		<!-- Spring's package with jpa, hibernate -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<exclusions>
				<!-- remove dependencies that are not required -->
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-aspects</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-aop</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.istack</groupId>
					<artifactId>istack-commons-runtime</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.jboss</groupId>
					<artifactId>jandex</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.glassfish.jaxb</groupId>
					<artifactId>txw2</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.javassist</groupId>
					<artifactId>javassist</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- indexer for spring component scan (only faster in bigger projects) -->
		<!--		<dependency>-->
		<!--			<groupId>org.springframework</groupId>-->
		<!--			<artifactId>spring-context-indexer</artifactId>-->
		<!--			<optional>true</optional>-->
		<!--		</dependency>-->

		<!-- Add Log4j2 Dependency -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<!-- async logging in log4j -->
			<!-- https://mvnrepository.com/artifact/com.lmax/disruptor -->
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
			<version>${lmax-disruptor.version}</version>
		</dependency>

		<!-- dependency to GalaxyLib -->
		<dependency>
			<groupId>io.github.ahli</groupId>
			<artifactId>galaxy-lib</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>

		<!-- JavaFX Font Awesome -->
		<!-- https://mvnrepository.com/artifact/de.jensd/fontawesomefx-fontawesome -->
		<dependency>
			<groupId>de.jensd</groupId>
			<artifactId>fontawesomefx-fontawesome</artifactId>
			<version>${fontawesomefx-fontawesome.version}</version>
		</dependency>

		<!-- Embedded DB -->
		<!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
			<scope>runtime</scope>
		</dependency>
		<!-- DB data migration -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>${flyway.version}</version>
		</dependency>
		<!-- ensure proper equals implementations -->
		<dependency>
			<groupId>nl.jqno.equalsverifier</groupId>
			<artifactId>equalsverifier</artifactId>
			<version>${equalsverifier.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- JavaFX -->
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-graphics -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-controls -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-base -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-base</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-fxml -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.openjfx/javafx-media -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-media</artifactId>
			<version>${javafx.version}</version>
		</dependency>

		<!-- serialization -->
		<dependency>
			<groupId>com.esotericsoftware</groupId>
			<artifactId>kryo</artifactId>
			<version>${kryo.version}</version>
		</dependency>

		<!-- read version from exe file -->
		<!-- https://mvnrepository.com/artifact/com.kichik.pecoff4j/pecoff4j -->
		<dependency>
			<groupId>com.kichik.pecoff4j</groupId>
			<artifactId>pecoff4j</artifactId>
			<version>${pecoff4j.version}</version>
		</dependency>

		<!-- less boilerplate code -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/eu.mihosoft.jfx.scaledfx/scaledfx -->
		<dependency>
			<groupId>eu.mihosoft.jfx.scaledfx</groupId>
			<artifactId>scaledfx</artifactId>
			<version>0.6</version>
			<exclusions>
				<exclusion>
					<groupId>org.openjfx</groupId>
					<artifactId>javafx-controls</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.openjfx</groupId>
					<artifactId>javafx-fxml</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.openjfx</groupId>
					<artifactId>javafx-graphics</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.openjfx</groupId>
					<artifactId>javafx-base</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<exclusions>
					<exclusion>
						<!-- Exclude Spring Boot's Default Logging to use log4j instead -->
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-logging</artifactId>
					</exclusion>
					<!-- remove dependencies that are not required -->
					<exclusion>
						<groupId>org.yaml</groupId>
						<artifactId>snakeyaml</artifactId>
					</exclusion>
					<exclusion>
						<groupId>jakarta.annotation</groupId>
						<artifactId>jakarta.annotation-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>


			<!-- TO UPDATE DEPENDENCIES within other dependencies -->
			<!-- update dependency within configuration2 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-text</artifactId>
				<version>${commons-text.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<!-- name of the generated jar -->
		<finalName>${jarName}</finalName>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<layout>JAR</layout>
							<classifier>spring-boot</classifier>
							<mainClass>${mainClass}</mainClass>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<!-- https://mvnrepository.com/artifact/org.springframework.boot.experimental/spring-boot-thin-layout -->
					<dependency>
						<groupId>org.springframework.boot.experimental</groupId>
						<artifactId>spring-boot-thin-layout</artifactId>
						<version>1.0.28.RELEASE</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.10.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<release>${java.version}</release>
					<excludes>
						<!-- excludes files from being put into same path as classes -->
						<exclude>**/*.txt</exclude>
					</excludes>
					<encoding>UTF-8</encoding>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
					<!--<compilerArgs>-->
					<!-- when testing java preview features -->
					<!--&#45;&#45;enable-preview-->
					<!--</compilerArgs>-->
					<annotationProcessorPaths>
						<path>
							<!-- Creates .dat file for log4j custom appenders -->
							<groupId>org.apache.logging.log4j</groupId>
							<artifactId>log4j-core</artifactId>
							<version>${log4j2.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<compilerArg>-Xlint:all</compilerArg>
					</compilerArgs>
				</configuration>
				<dependencies>
					<dependency>
						<!-- https://mvnrepository.com/artifact/org.ow2.asm/asm -->
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm</artifactId>
						<version>${asm.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>log4j-plugin-processor</id>
						<goals>
							<goal>compile</goal>
						</goals>
						<phase>process-classes</phase>
						<configuration>
							<proc>only</proc>
							<annotationProcessors>
								<annotationProcessor>
									org.apache.logging.log4j.core.config.plugins.processor.PluginProcessor
								</annotationProcessor>
							</annotationProcessors>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<version>${flyway.version}</version>
			</plugin>

			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.2</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-site-plugin -->
				<artifactId>maven-site-plugin</artifactId>
				<version>3.12.0</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-deploy-plugin -->
				<artifactId>maven-deploy-plugin</artifactId>
				<version>3.0.0-M2</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-install-plugin -->
				<artifactId>maven-install-plugin</artifactId>
				<version>3.0.0-M1</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M6</version>
				<configuration>
					<!--<argLine>&#45;&#45;enable-preview</argLine>-->
				</configuration>
				<dependencies>
					<dependency>
						<!-- https://mvnrepository.com/artifact/org.ow2.asm/asm -->
						<groupId>org.ow2.asm</groupId>
						<artifactId>asm</artifactId>
						<version>${asm.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-resources-plugin -->
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-clean-plugin -->
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.2.0</version>
			</plugin>

			<!-- Force requirement of Maven version 3.0+ -->
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-enforcer-plugin -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>[3.2.5,)</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>${mainClass}</mainClass>
				</configuration>
			</plugin>

			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-dependency-plugin -->
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.3.0</version>
			</plugin>
			<plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-release-plugin -->
				<artifactId>maven-release-plugin</artifactId>
				<version>3.0.0-M5</version>
			</plugin>

			<!-- check for plugin and dependency updates:
		 		versions:display-plugin-updates versions:display-parent-updates versions:display-dependency-updates versions:display-property-updates
			 -->
			<!-- https://mvnrepository.com/artifact/org.codehaus.mojo/versions-maven-plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.10.0</version>
			</plugin>


			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>7.1.0</version>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<failOnError>false</failOnError>
					<assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<repositories>
		<!--<repository>-->
		<!--<id>spring-snapshots</id>-->
		<!--<name>Spring Snapshots</name>-->
		<!--<url>https://repo.spring.io/snapshot</url>-->
		<!--<snapshots>-->
		<!--<enabled>true</enabled>-->
		<!--</snapshots>-->
		<!--</repository>-->
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<!-- Kryo snapshot repository -->
		<repository>
			<id>sonatype-snapshots</id>
			<name>sonatype snapshots repo</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<!--<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>-->
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>central</id>
			<name>Central Repository</name>
			<url>https://repo.maven.apache.org/maven2</url>
		</pluginRepository>
	</pluginRepositories>

</project>
